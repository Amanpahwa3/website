(function() {var implementors = {};
implementors["consensus_types"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/block_data/struct.BlockData.html\" title=\"struct consensus_types::block_data::BlockData\">BlockData</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.101/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>",synthetic:false,types:["consensus_types::block_data::BlockData"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/timeout/struct.Timeout.html\" title=\"struct consensus_types::timeout::Timeout\">Timeout</a>",synthetic:false,types:["consensus_types::timeout::Timeout"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/vote_data/struct.VoteData.html\" title=\"struct consensus_types::vote_data::VoteData\">VoteData</a>",synthetic:false,types:["consensus_types::vote_data::VoteData"]},];
implementors["jellyfish_merkle"] = [{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"jellyfish_merkle/node_type/struct.InternalNode.html\" title=\"struct jellyfish_merkle::node_type::InternalNode\">InternalNode</a>",synthetic:false,types:["jellyfish_merkle::node_type::InternalNode"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"jellyfish_merkle/node_type/struct.LeafNode.html\" title=\"struct jellyfish_merkle::node_type::LeafNode\">LeafNode</a>",synthetic:false,types:["jellyfish_merkle::node_type::LeafNode"]},];
implementors["libra_types"] = [{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/account_address/struct.AccountAddress.html\" title=\"struct libra_types::account_address::AccountAddress\">AccountAddress</a>",synthetic:false,types:["libra_types::account_address::AccountAddress"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/account_state_blob/struct.AccountStateBlob.html\" title=\"struct libra_types::account_state_blob::AccountStateBlob\">AccountStateBlob</a>",synthetic:false,types:["libra_types::account_state_blob::AccountStateBlob"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/contract_event/struct.ContractEvent.html\" title=\"struct libra_types::contract_event::ContractEvent\">ContractEvent</a>",synthetic:false,types:["libra_types::contract_event::ContractEvent"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/language_storage/struct.ModuleId.html\" title=\"struct libra_types::language_storage::ModuleId\">ModuleId</a>",synthetic:false,types:["libra_types::language_storage::ModuleId"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/language_storage/struct.StructTag.html\" title=\"struct libra_types::language_storage::StructTag\">StructTag</a>",synthetic:false,types:["libra_types::language_storage::StructTag"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/ledger_info/struct.LedgerInfo.html\" title=\"struct libra_types::ledger_info::LedgerInfo\">LedgerInfo</a>",synthetic:false,types:["libra_types::ledger_info::LedgerInfo"]},{text:"impl&lt;H:&nbsp;<a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHasher.html\" title=\"trait libra_crypto::hash::CryptoHasher\">CryptoHasher</a>&gt; <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/proof/struct.MerkleTreeInternalNode.html\" title=\"struct libra_types::proof::MerkleTreeInternalNode\">MerkleTreeInternalNode</a>&lt;H&gt;",synthetic:false,types:["libra_types::proof::MerkleTreeInternalNode"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/proof/struct.SparseMerkleLeafNode.html\" title=\"struct libra_types::proof::SparseMerkleLeafNode\">SparseMerkleLeafNode</a>",synthetic:false,types:["libra_types::proof::SparseMerkleLeafNode"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/transaction/struct.RawTransaction.html\" title=\"struct libra_types::transaction::RawTransaction\">RawTransaction</a>",synthetic:false,types:["libra_types::transaction::RawTransaction"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"libra_types/transaction/struct.TransactionInfo.html\" title=\"struct libra_types::transaction::TransactionInfo\">TransactionInfo</a>",synthetic:false,types:["libra_types::transaction::TransactionInfo"]},{text:"impl <a class=\"trait\" href=\"libra_crypto/hash/trait.CryptoHash.html\" title=\"trait libra_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"enum\" href=\"libra_types/transaction/enum.Transaction.html\" title=\"enum libra_types::transaction::Transaction\">Transaction</a>",synthetic:false,types:["libra_types::transaction::Transaction"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()