var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","TempPath","try_from","try_into","borrow_mut","borrow","type_id","typeid","CacheMap","CacheRefMap","datatest_stable","Requirements","is_empty","to_owned","clone_into","repeatvec","propindex","formatter","GrowingSubset","RepeatVec","ValueGenerator","with_capacity","incoming","memorysocket","option","context","MemoryListener","MemorySocket","Incoming","Semaphore","SpawnError","BoundedExecutor","ordering","nibble","arbitrary_with","backtrace","compat","Exits a function early with an `Error`.","Exits a function early with an `Error` if the condition is…","Constructs a `Fail` type from a string.","format_err","Constructs an `Error` using the standard string…","The `Error` type, which can contain any failure.","The `Fail` trait.","Returns the \"name\" of the error.","Returns a reference to the underlying cause of this…","Returns a reference to the `Backtrace` carried by this…","Provides context for this failure.","Wraps this failure in a compatibility wrapper that…","ResultExt","Extension methods for `Result`.","Wraps the error in `Compat` to make it compatible with…","Wraps the error type in a context type.","with_context","Wraps the error type in a context type generated by…","bail_err","libra_failure_ext","to_string","string","as_fail","libra_failure_ext::prelude","description","Attempts to downcast this `Error` to a particular `Fail`…","downcast_ref","downcast_mut","Attempts to downcast this failure to a concrete type by…","find_root_cause","iter_causes","causes","iter_chain","Returns a iterator over all fails up the chain from the…","root_cause","Deprecated alias to `find_root_cause`.","Backtrace","SyncFailure","default","connection","netcore::multiplexing","Listener","netcore","tsocket","tprotocols","Outbound","netcore::transport","Inbound","multiaddr","and_then","netcore::compat","netcore::multiplexing::yamux","try_poll_next","netcore::transport::and_then","try_poll","netcore::transport::boxed","netcore::transport::memory","netcore::transport::tcp","netcore::transport::timeout","listen_for_inbound","open_outbound","listen_on","tcptransport","connectionorigin","poll_next","poll_write","poll_flush","poll_close","poll_read","StreamMultiplexer","ConnectionOrigin","TimeoutTransportError","Transport","TransportExt","AndThenStream","AndThenFuture","BoxedTransport","MemoryTransport","TcpTransport","TcpListenerStream","TcpOutbound","TcpSocket","TimeoutTransport","TimeoutStream","TimeoutFuture","slog_crit","Log critical level record (alias)","slog_debug","Log debug level record (alias)","slog_error","Log error level record","slog_info","Log info level record (alias)","slog_trace","Log trace level record (alias)","slog_warn","Log warning level record (alias)","Log a critical level message using current scope logger","Log a debug level message using current scope logger","Log a error level message using current scope logger","Log a info level message using current scope logger","Log a trace level message using current scope logger","Log a warning level message using current scope logger","Consensus received an invalid vote","SecurityEvent","serialize","CrashInfo","to_bytes","libra_crypto","libra_crypto::ed25519","cryptomaterialerror","The hasher used to compute the hash of an internal node in…","hashvalue","Returns the length of common prefix of `self` and `other`…","hkdferror","MACKeyError","HMAC key related error; unlikely to happen because every…","slip0010error","secretkey","extendedprivkey","We require public / private types to be coupled, i.e.…","SignatureMaterial","VerifyingKeyMaterial","SigningKeyMaterial","batch_verify_signatures","Those transitory traits are meant to help with the…","generate_keypair","Generate an arbitrary key pair, with possible Rng input","keypair_strategy","Used to produce keypairs from a seed for testing purposes","libra_crypto::x25519","public_key","test_only_hash","libra_crypto::bls12381","libra_crypto::hash","initialize","libra_crypto::hkdf","libra_crypto::slip0010","libra_crypto::traits","libra_crypto::vrf::ecvrf","libra_crypto::test_utils","sign_message","verify_arbitrary_msg","bls12381publickey","ed25519publickey","generate_for_testing","x25519sharedkey","bls12381signature","ed25519signature","x25519publickey","x25519staticpublickey","vrfpublickey","vrfprivatekey","x25519staticprivatekey","bls12381privatekey","ed25519privatekey","deserialize","BLS12381PublicKey","BLS12381Signature","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","CryptoHash","CryptoHasher","TestOnlyHash","HashValue","HkdfError","Slip0010Error","ExtendedPrivKey","CryptoMaterialError","ValidKeyStringExt","PrivateKey","SigningKey","PublicKey","VerifyingKey","Signature","ExchangeKey","VRFPrivateKey","VRFExpandedPrivateKey","VRFPublicKey","X25519StaticPrivateKey","BLS12381PrivateKey","HashValueBitIterator","AccessPathHasher","AccountAddressHasher","LedgerInfoHasher","TransactionAccumulatorHasher","EventAccumulatorHasher","SparseMerkleInternalHasher","SparseMerkleLeafHasher","AccountStateBlobHasher","TransactionInfoHasher","RawTransactionHasher","TransactionHasher","BlockHasher","TimeoutHasher","VoteDataHasher","ContractEventHasher","TestOnlyHasher","DiscoveryMsgHasher","ACCUMULATOR_PLACEHOLDER_HASH","SPARSE_MERKLE_PLACEHOLDER_HASH","PRE_GENESIS_BLOCK_ID","GENESIS_BLOCK_ID","X25519EphemeralPrivateKey","X25519PublicKey","X25519StaticPublicKey","X25519SharedKey","ValidKey","into_iter","partial_cmp","keypair","upgrade_connection","NoiseSocket","NoiseConfig","libra_prost_ext","encodeerror","MessageExt","Server side handler for send throughput benchmark when the…","taskexecutor","MempoolAddTransactionStatus","mempooladdtransactionstatuscode","libra_mempool_shared_proto","libra_mempool_shared_proto::proto::mempool_status","mempooladdtransactionstatus","decodeerror","MempoolAddTransactionStatusCode","identifier","accountaddress","accesses","accesspath","libra_types","short_str","publickey","identstr","structtag","accountresource","bytearray","eventhandle","accountevent","accountstateblob","validatorset","version","into_inner","sequence_number","Constructor.","ledgerinfo","eventkey","verifyerror","new_from_address","libra_types::get_with_proof","libra_types::get_with_proof::RequestItem","access_path","fetch_events","GetAccountTransactionBySequenceNumber","GetAccountState","libra_types::get_with_proof::ResponseItem","GetEventsByEventAccessPath","GetTransactions","validatorverifier","requestitem","ledgerinfowithsignatures","responseitem","accountstatewithproof","transactionlistwithproof","is_valid","Returns true if this string is a valid identifier.","as_bytes","ByteArray","LedgerInfoWithSignatures","blockinfo","timestamp_usecs","next_validator_set","btreemap","ledger_info","leafcount","libra_types::proof","Returns the list of siblings in this proof.","siblings","transactionaccumulatorproof","transactioninfo","ledger_info_to_transaction_info_proof","Returns the `ledger_info_to_transaction_info_proof` object…","transaction_info","Returns the `transaction_info` object in this proof.","sparsemerkleproof","eventaccumulatorproof","new_empty","materialize","accountinfouniverse","contractevent","libra_types::event","strategy_impl","libra_types::contract_event","libra_types::proptest_types","AccessPath","address","AccumulatorProof","SparseMerkleProof","The siblings. The ones near the leaf are at the beginning…","AccumulatorConsistencyProof","AccumulatorRangeProof","TransactionProof","AccountStateProof","transaction_info_to_account_proof","EventProof","transaction_info_to_event_proof","TransactionListProof","The complete proof used to authenticate a list of…","transaction_infos","event_data","EventWithProof","transaction_version","event_index","transaction","major_status","transactions","account_address","AccountStateBlob","AccountStateWithProof","LedgerInfo","transaction_accumulator_hash","consensus_data_hash","consensus_block_id","signatures","ValidatorChangeEventWithProof","ledger_info_with_sigs","UpdateToLatestLedgerRequest","client_known_version","requested_items","RequestItem","UpdateToLatestLedgerResponse","response_items","validator_change_events","ledger_consistency_proof","ResponseItem","account_state_with_proof","transaction_with_proof","proof_of_current_sequence_number","start_event_seq_num","ascending","events_with_proof","proof_of_latest_event","start_version","Limit number of results","txn_list_with_proof","libra_types::proto::types","GetAccountStateRequest","GetAccountTransactionBySequenceNumberRequest","GetEventsByEventAccessPathRequest","GetTransactionsRequest","encoded_len","GetAccountStateResponse","GetAccountTransactionBySequenceNumberResponse","GetEventsByEventAccessPathResponse","GetTransactionsResponse","test_helpers","signedtransaction","signaturecheckedtransaction","SignedTransaction","TransactionWithProof","TransactionInfo","`TransactionInfo` is the object we store in the…","TransactionToCommit","TransactionListWithProof","first_transaction_version","TransactionArgument","Transaction","BlockMetadata","transactionargument","rawtransaction","transactionpayload","libra_types::transaction","duration","writeset","signature","into_raw_transaction","format_for_client","gas_used","transactionstatus","transaction_hash","state_root_hash","event_root_hash","statuscode","account_states","validator_public_keys","ValidatorPublicKeys","consensus_public_key","consensus_voting_power","network_signing_public_key","network_identity_public_key","ValidatorSet","validatorpublickeys","from_bytes","ValidatorSigner","genesis","libra_types::validator_signer","ValidatorInfo","ValidatorVerifier","libra_types::validator_verifier","libra_types::validator_verifier::VerifyError","voting_power","validatorinfo","verify_signature","quorum_voting_power","sub_status","libra_types::vm_error","statustype","write_set","WriteSet","libra_types::access_path","libra_types::account_address","libra_types::account_config","libra_types::account_state_blob","write_hex","write_hex_upper","to_base32","Convert base256 to base32, adds padding if necessary","check_base32","libra_types::block_info","libra_types::block_metadata","libra_types::byte_array","libra_types::crypto_proxies","libra_types::identifier","libra_types::language_storage","libra_types::ledger_info","libra_types::proof::accumulator","libra_types::proof::definition","libra_types::proof::position","libra_types::proto::types::transaction_argument","libra_types::proto::types::request_item","libra_types::proto::types::response_item","libra_types::validator_change","libra_types::validator_public_keys","libra_types::validator_set","libra_types::write_set","accumulatorconsistencyproof","accountstateproof","eventproof","transactionlistproof","transactiontocommit","validatorchangeeventwithproof","updatetolatestledgerrequest","writesetmut","eventwithproof","updatetolatestledgerresponse","resourcekey","moduleid","accumulatorproof","accumulatorrangeproof","transactionproof","eventslist","eventsforversions","transactionwithproof","signedtransactionsblock","accountstate","vmstatus","validatorsignature","getaccountstaterequest","getaccountstateresponse","getaccounttransactionbysequencenumberrequest","getaccounttransactionbysequencenumberresponse","geteventsbyeventaccesspathrequest","geteventsbyeventaccesspathresponse","gettransactionsrequest","gettransactionsresponse","typetag","blockmetadata","signaturewrapper","position","argtype","requesteditems","responseitems","transactionoutput","Tries to convert the provided byte array into Address.","tryfromprimitiveerror","from_iter","encode_raw","merge_field","script_strategy","module_strategy","write_set_strategy","genesis_strategy","AccountAddress","AccountResource","AccountEvent","BlockInfo","ContractEvent","SignatureWrapper","EventHandle","Identifier","StructTag","ResourceKey","ModuleId","InMemoryAccumulator","SparseMerkleRangeProof","NodeDirection","FrozenSubTreeIterator","FrozenSubtreeSiblingIterator","MerkleTreeInternalNode","SparseMerkleLeafNode","RawTransactionGen","SignatureCheckedTransactionGen","ContractEventGen","TransactionToCommitGen","EventsList","EventsForVersions","SignedTransactionsBlock","AccountState","ValidatorSignature","RequestedItems","ResponseItems","TransactionPayload","TransactionStatus","TransactionSigner","RawTransaction","SignatureCheckedTransaction","TransactionOutput","VerifyError","StatusType","StatusCode","WriteSetMut","VALIDATOR_SET_ACCESS_PATH","ACCOUNT_SENT_EVENT_PATH","ACCOUNT_RECEIVED_EVENT_PATH","AncestorSiblingIterator","AncestorIterator","AccountInfoUniverse","HashReader","MerkleAccumulator","accumulator","StateView","updateerror","root_hash","get_proof","SparseMerkleTree","ProofRead","libra_wallet","walletlibrary","Returns the underlying bytes.","into_bytes","get_public","childnumber","mnemonic","An Ed25519 public key","An Ed25519 signature","A type that implements `CryptoHash` can be hashed by a…","The associated `Hasher` type which comes with a unique…","Hashes the object and produces a `HashValue`.","write_recovery","libra_wallet::error","libra_wallet::key_factory","libra_wallet::mnemonic","libra_wallet::wallet_library","Checks that `self` is valid for `message` using…","Checks that `self` is valid for an arbitrary &[u8]…","Batch signature verification as described in the original…","Deserialize an Ed25519PublicKey. This method will also…","walleterror","sign_txn","Serialize an Ed25519PublicKey.","Serialize an Ed25519Signature.","check_malleability","Check for correct size and third-party based signature…","WalletError","ChildNumber","KeyFactory","WalletLibrary","type_formals","ir_to_bytecode_syntax::ast","FunctionCall","parseerror","moduledefinition","importdefinition","modulename","structdefinition_","get_external_deps","Return a vector of `ModuleId` for the external dependencies.","structname","Converts self into an identifier.","Creates a new StructDefinition from the resource kind…","as_inner","if_block","statement","functioncall_","ir_to_bytecode_syntax","ir_to_bytecode_syntax::syntax","ir_to_bytecode_syntax::syntax::ParseError","scriptormodule","moduleident","qualifiedstructident","functionname","functionvisibility","functionbody","copyableval","qualifiedmoduleident","structdefinition","structdefinitionfields","functionsignature","function","functioncall","QualifiedModuleIdent","ModuleDefinition","ImportDefinition","QualifiedStructIdent","StructDefinition","FunctionSignature","ScriptOrModule","ModuleIdent","StructDefinitionFields","FunctionVisibility","FunctionBody","Statement","CopyableVal","ModuleName","StructName","FunctionName","ParseError","byte_array","jellyfish_merkle","jellyfish_merkle::node_type","jellyfish_merkle::node_type::NodeDecodeError","nibblepath","Recovers from serialized bytes in physical storage.","get_range_proof","sparsemerklerangeproof","jellyfish_merkle::iterator","jellyfish_merkle::restore","nodekey","treeupdatebatch","stalenodeindex","internalnode","leafnode","nodedecodeerror","StaleNodeIndex","TreeUpdateBatch","JellyfishMerkleIterator","NodeDecodeError","InternalNode","JellyfishMerkleRestore","TreeReader","TreeWriter","JellyfishMerkleTree","get_with_proof","TypeParameter","Reference","modulehandle","fielddefinitionindex","typesignature","structhandleindex","module_handle_at","modulehandleindex","struct_handle_at","structhandle","function_handle_at","functionhandleindex","functionhandle","type_signature_at","typesignatureindex","function_signature_at","functionsignatureindex","locals_signature_at","localssignatureindex","localssignature","identifier_at","identifierindex","byte_array_at","bytearraypoolindex","address_at","addresspoolindex","module_handles","struct_handles","function_handles","type_signatures","function_signatures","locals_signatures","byte_array_pool","address_pool","identifiers","functiondefinition","check_bounds","indexkind","ModuleHandle","StructHandle","is_nominal_resource","FunctionHandle","FieldDefinition","FunctionDefinition","List of nominal resources (declared in this module) that…","TypeSignature","The type formals (identified by their index into the vec)…","LocalsSignature","The transaction script to execute","user_strings","Address pool. The address literals used in the module.…","struct_defs","field_defs","function_defs","vm::file_format","`Resource` types must follow move semantics and various…","Unrestricted","`Unrestricted` types do not need to follow the `Resource`…","Address","MutableReference","Branch to the instruction at position `CodeOffset` if the…","Push the local identified by `LocalIndex` onto the stack.…","GetTxnGasUnitPrice","GetTxnMaxGasUnits","GetGasRemaining","MoveToSender","GetTxnSequenceNumber","GetTxnPublicKey","compiledmodulemut","compiledmodule","ByteArrayPool","AddressPool","tableindex","membercount","signaturetoken","codeoffset","compiledscript","compiledscriptmut","into_module","kind_count","module_id_for_handle","Take a `Vec<u8>` and a value to write to that vector and…","binarydata","bytecode","gascarrier","abstractmemorysize","fielddefinition","userstringindex","proptest_types","vm::proptest_types","Serializes this into a binary format.","max_gas_amount","gas_unit_price","transaction_size","functions","functiondefinitionview","structdefinitionview","structdefinitionindex","definition","module_id","module_handle","is_native","is_public","functionsignatureview","signaturetokenview","struct_handle","structhandleview","signature_token_kind","signaturetokenkind","contains_nominal_resource","is_reference","is_mutable_reference","struct_index","from_utf8","fromutf8error","Creates a borrowed version of `self`.","into_string","Returns the length of `self` in bytes.","Returns `true` if `self` has a length of zero bytes.","Converts `self` to a `&str`.","Converts `self` to a byte slice.","vm::check_bounds","vm::errors","vm::file_format_common","vm::gas_schedule","vm::resolver","vm::transaction_metadata","vm::views","vm::vm_string","as_module","as_script","into_index","get_field_def_at","get_module_at","get_struct_at","get_function_at","get_identifier_at","get_user_string_at","get_address_at","get_type_signature_at","get_function_signature_at","get_locals_signature_at","location","functiondefinitionindex","codeunit","gasunits","vmstring","structfieldinformation","compiledprogram","tabletype","gasprice","binaryloaderresult","IndexKind","SignatureTokenKind","ModuleAccess","ScriptAccess","BoundsCheck","BoundsChecker","ModuleHandleIndex","StructHandleIndex","FunctionHandleIndex","IdentifierIndex","UserStringIndex","ByteArrayPoolIndex","AddressPoolIndex","TypeSignatureIndex","FunctionSignatureIndex","LocalsSignatureIndex","StructDefinitionIndex","FieldDefinitionIndex","FunctionDefinitionIndex","CompiledProgram","CompiledScriptMut","CompiledModuleMut","StructFieldInformation","SignatureToken","CompiledScript","CompiledModule","TableType","SignatureType","SerializedType","SerializedNominalResourceFlag","SerializedKind","SerializedNativeStructFlag","BinaryConstants","BinaryData","CostTable","GasAlgebra","ModuleIndex","TableAccess","CompiledModuleStrategyGen","TransactionMetadata","ViewInternals","ModuleView","ModuleHandleView","StructHandleView","FunctionHandleView","StructDefinitionView","FieldDefinitionView","FunctionDefinitionView","TypeSignatureView","FunctionSignatureView","LocalsSignatureView","SignatureTokenView","AbstractMemorySize","GLOBAL_MEMORY_PER_BYTE_COST","GLOBAL_MEMORY_PER_BYTE_WRITE_COST","MAX_ABSTRACT_MEMORY_SIZE","INTRINSIC_GAS_PER_BYTE","MIN_PRICE_PER_GAS_UNIT","MAX_PRICE_PER_GAS_UNIT","MAXIMUM_NUMBER_OF_GAS_UNITS","MIN_TRANSACTION_GAS_UNITS","WORD_SIZE","CONST_SIZE","REFERENCE_SIZE","STRUCT_SIZE","DEFAULT_ACCOUNT_SIZE","LARGE_TRANSACTION_CUTOFF","GAS_SCHEDULE_NAME","codeunitboundsmutation","outofboundsmutation","invalid_mutations","strategy","doublerefmutation","fieldrefmutation","invalid_mutations::bounds","invalid_mutations::signature","pointerkind","signatureindex","PointerKind","CodeUnitBoundsMutation","ApplyCodeUnitBoundsContext","OutOfBoundsMutation","ApplyOutOfBoundsContext","SignatureIndex","DoubleRefMutation","ApplySignatureDoubleRefContext","FieldRefMutation","ApplySignatureFieldRefContext","contiguous_rounds","max_block_size","max_pruned_blocks_in_mem","pacemaker_initial_timeout_ms","Returns true if the node config is for a validator.…","networkconfig","Returns a simple test config for single node. It does not…","vmpublishingoption","nodeconfig","libra_config","Beware, this destroys the private key from this NodeConfig","seed_peers","Creates a new SeedPeersConfig based on provided…","networkpeersconfig","seedpeersconfig","upstream_peers","libra_config::config","libra_config::keys","libra_config::seed_peers","libra_config::trusted_peers","metricsconfig","executionconfig","loggerconfig","admissioncontrolconfig","debuginterfaceconfig","storageconfig","consensusconfig","consensusproposertype","mempoolconfig","consensuspeersconfig","upstreampeersconfig","roletype","NodeConfig","BaseConfig","MetricsConfig","ExecutionConfig","LoggerConfig","AdmissionControlConfig","DebugInterfaceConfig","StorageConfig","NetworkConfig","ConsensusConfig","MempoolConfig","StateSyncConfig","ConsensusProposerType","VMPublishingOption","PersistableConfig","NodeConfigHelpers","NetworkKeyPairs","ConsensusKeyPair","SeedPeersConfig","SeedPeersConfigHelpers","NetworkPeerInfo","NetworkPrivateKeys","NetworkPeersConfig","ConsensusPeerInfo","ConsensusPrivateKey","ConsensusPeersConfig","UpstreamPeersConfig","ConfigHelpers","vm_runtime_types::loaded_data","vm_runtime_types","nativefunction","vm_runtime_types::native_functions","vmresult","nativeresult","vecdeque","type_actuals","dispatch","vm_runtime_types::native_structs","Struct representing the expected definition for a native…","nativestruct","INDEX_OUT_OF_BOUNDS","structdef","GlobalRef","reference","pretty_string","vm_runtime_types::loaded_data::struct_def","vm_runtime_types::loaded_data::types","vm_runtime_types::native_functions::dispatch","vm_runtime_types::native_structs::def","vm_runtime_types::native_structs::dispatch","vm_runtime_types::native_structs::vector","vm_runtime_types::type_context","vm_runtime_types::value","nativestructtag","nativestructvalue","structdefinner","nativestructtype","nativevector","referencevalue","rootaccesspath","globalref","single_value_strategy","nested_strategy","StructDefInner","NativeResult","NativeFunction","NativeStructType","NativeStructTag","NativeStructValue","NativeStruct","NativeVector","TypeContext","ReferenceValue","RootAccessPath","controlflowgraph","bytecode_verifier","localindex","typedabstractvalue","remove_nonce","gets all nonces that are targets of outgoing edges from…","vmcontrolflowgraph","verifiedscript","verifiedmodule","bytecode_verifier::absint","bytecode_verifier::abstract_state","equivalent","bytecode_verifier::acquires_list_verifier","bytecode_verifier::borrow_graph","bytecode_verifier::check_duplication","bytecode_verifier::code_unit_verifier","bytecode_verifier::control_flow_graph","bytecode_verifier::instantiation_loops","bytecode_verifier::nonce","bytecode_verifier::resources","bytecode_verifier::signature","bytecode_verifier::stack_usage_verifier","bytecode_verifier::struct_defs","bytecode_verifier::type_memory_safety","bytecode_verifier::unused_entries","bytecode_verifier::verifier","block_start","instr_indexes","entry_block_id","abstractstate","blockprecondition","blockpostcondition","borrowgraph","labelelem","abstractvalue","verifiedprogram","BlockPrecondition","BlockPostcondition","AbstractDomain","TransferFunctions","AbstractInterpreter","BlockInvariant","TypedAbstractValue","AbstractValue","AbstractState","AcquiresVerifier","BorrowGraph","DuplicationChecker","CodeUnitVerifier","ControlFlowGraph","VMControlFlowGraph","InstantiationLoopChecker","ResourceTransitiveChecker","SignatureChecker","StackUsageVerifier","RecursiveStructDefChecker","StructDefGraphBuilder","TypeAndMemorySafetyAnalysis","UnusedEntryChecker","VerifiedProgram","VerifiedModule","VerifiedScript","bytecode_source_map","modulesourcemap","A data structure used to track any markings or extra…","type_param_offsets","decl_location","type_parameters","sourcename","add_type_parameter","get_type_parameter_name","add_code_mapping","get_code_location","add_local_mapping","get_local_name","functionsourcemap","structsourcemap","sourcemapping","bytecode_source_map::disassembler","bytecode_source_map::mapping","bytecode_source_map::marking","bytecode_source_map::source_map","disassembleroptions","markedsourcemapping","DisassemblerOptions","Disassembler","SourceMapping","FunctionMarking","StructMarking","MarkedSourceMapping","StructSourceMap","FunctionSourceMap","ModuleSourceMap","ir_to_bytecode","ir_to_bytecode::parser::ast","ir_to_bytecode::parser","ir_to_bytecode::errors","internalcompilererror","InternalCompilerError","Generic wrapper that keeps file locations for any ast-node","The file location","The value being wrapped","A set of move modules and a Move transaction script","The modules to publish","The move transaction script to be executed","The dependencies of `main`, i.e. of the transaction script","The transaction script's `main` procedure","Newtype for a name of a module","Newtype of the address + the module name `addr.m`","Name for the module. Will be unique among modules…","Address that this module is published under","A Move module","name of the module","the module's dependencies","the structs (including resources) that the module defines","the procedure that the module defines","A dependency/import declaration","the dependency `addr.m` or `Transaction.m`","the alias for that dependency `m`","Newtype for a variable/local","New type that represents a type variable. Used to declare…","Identifier for a struct definition. Tells us where to look…","Module name and address in which the struct is contained","Name for the struct class. Should be unique among structs…","Newtype for the name of a struct","A Move struct","The struct will have kind resource if…","Human-readable name for the struct that also serves as a…","Kind constraints of the type parameters","the fields each instance has","Newtype for the name of a function","The signature of a function","Possibly-empty list of (formal name, formal type) pairs.…","return_type","Optional return types","Possibly-empty list of (TypeVar, Kind) pairs.s.","A Move function/procedure","The visibility (public or internal)","The type signature","The code for the procedure","Struct defining an if statement","the if's condition","the block taken if the condition is `true`","the block taken if the condition is `false`","Struct defining a while statement","The condition for a while statement","The block taken if the condition is `true`","Struct defining a loop statement","The body of the loop","The statements that make up the block","A script or a module, used to represent the two types of…","The script to execute.","The module to publish.","Either a qualified module name like `addr.m` or…","The kind of a type. Analogous to `vm::file_format::Kind`.","Represents the super set of all types.","The type of a single value","`bytearray`","`string`, currently unused","A module defined struct","A reference type, the bool flag indicates whether the…","A type parameter","The fields of a Move struct definition","The fields are declared","The struct is a type provided by the VM","Public or internal modifier for a procedure","The procedure can be invoked anywhere `public`","The procedure can be invoked only internally `<no modifier>`","The body of a Move function","The body is declared `locals` are all of the declared…","The body is provided by the runtime","Builtin \"function\"-like operators that often have a…","Check if there is a struct object (`StructName` resolved…","BorrowGlobal","Get a reference to the resource(`StructName` resolved by…","Returns the price per gas unit the current transaction is…","Returns the maximum units of gas the current transaction…","Returns the public key of the current transaction's sender","GetTxnSender","Returns the address of the current transaction's sender","Returns the sequence number of the current transaction.","Returns the unit of gas remain to be used for now.","Remove a resource of the given type from the account with…","Publish an instantiated struct object into sender's account.","Convert a mutable reference into an immutable one","Enum for different function calls","functions defined in the host environment","ModuleFunctionCall","The call of a module defined procedure","Enum for Move lvalues","Enum for Move commands","`l_1, ..., l_n = e`","`n { f_1: x_1, ... , f_j: x_j  } = e`","`return e_1, ... , e_j`","CommandStatement","IfElseStatement","`if (e) { s_1 } else { s_2 }`","WhileStatement","`while (e) { s }`","LoopStatement","`loop { s }`","EmptyStatement","no-op that eases parsing in some places","Bottom of the value hierarchy. These values can be…","An address in the global storage","An unsigned 64-bit integer","true or false","`b\"<bytes>\"`","Not yet supported in the parser","Enum for unary operators","Boolean negation","Enum for binary operators","Enum for all expressions","Dereference","`e_1 op e_2`","Wrapper to lift `CopyableVal` into `Exp` `v`","Takes the given field values and instantiates the struct…","`&e.f`, `&mut e.f`","mutable or not","the expression containing the reference","the field being borrowed","BorrowLocal","`&x` or `&mut x`","`f(e)` or `f(e_1, e_2, ..., e_j)`","(e_1, e_2, e_3, ..., e_j)","parse_field","Parses a field.","The file location type","The type of a variable with a location","The type of a type variable with a location.","The field newtype","A field coupled with source location information","A field map","StructDefinition_","The type of a StructDefinition along with its source…","The type of a Function coupled with its source location…","FunctionCall_","The type for a function call and its location","The type of a command with its location","The type of a Block coupled with source location…","CopyableVal_","The type of a value and its location","The type for fields and their bound expressions","The type for a `Exp` and its location","Create a new `Program` from modules and transaction script","Create a new `Script` from the imports and the main function","Accessor for the body of the 'main' procedure","Create a new `ModuleName` from an identifier","Creates a new `ModuleName` from a raw string. Intended for…","Name for the current module handle","module_self","Create a new `ModuleName` from `self_name`.","Accessor for the name of the module","Creates a new fully qualified module identifier from the…","Accessor for the name of the fully qualified module…","Accessor for the address at which the module is published","Creates a new `ModuleDefinition` from its string name,…","Creates a new struct type","Creates a new reference type from its mutability and…","Creates a new address type","Creates a new u64 type","Creates a new bool type","Creates a new bytearray type","Creates a new StructType handle from the name of the…","Accessor for the module alias","Accessor for the struct name","Creates a new import definition from a module identifier…","Create a new `StructName` from an identifier","Creates a new `StructName` from a raw string. Intended for…","Accessor for the name of the struct","move_declared","Create a new `FunctionName` from an identifier","Creates a new `FunctionName` from a raw string. Intended…","Accessor for the name of the function","Creates a new function signature from the parameters and…","Creates a new function declaration from the components of…","Creates a new `Var` from an identifier.","Creates a new `Var_` identifier from an identifier with an…","Creates a new `Var` from a raw string. Intended for use by…","Accessor for the name of the var","Creates a new `TypeVar` from an identifier.","Creates a new `TypeVar` from a raw string. Intended for…","Accessor for the name of the var.","module_call","Creates a `FunctionCall::ModuleFunctionCall` variant","Creates a `FunctionCall::Builtin` variant with no location…","return_empty","Creates a command that returns no values","Creates a command that returns a single value","Creates an if-statement with no else branch","Creates an if-statement with an else branch","Lifts a command into a statement","Creates an `Statement::IfElseStatement` variant with no…","Creates an `Statement::IfElseStatement` variant with an…","Creates a new block from the vector of statements","Creates an empty block","Creates a new address `Exp` with no location information","Creates a new value `Exp` with no location information","Creates a new u64 `Exp` with no location information","Creates a new bool `Exp` with no location information","Creates a new bytearray `Exp` with no location information","instantiate","Creates a new pack/struct-instantiation `Exp` with no…","Creates a new binary operator `Exp` with no location…","Creates a new `e+e` `Exp` with no location information","Creates a new `e-e` `Exp` with no location information","dereference","Creates a new `*e` `Exp` with no location information","Creates a new borrow field `Exp` with no location…","Creates a new copy-local `Exp` with no location information","Creates a new move-local `Exp` with no location information","function_call","Creates a new function call `Exp` with no location…","PEER_TO_PEER_TRANSFER_TXN_BODY","CREATE_ACCOUNT_TXN_BODY","ROTATE_CONSENSUS_PUBKEY_TXN_BODY","ROTATE_AUTHENTICATION_KEY_TXN_BODY","MINT_TXN_BODY","BLOCK_PROLOGUE_TXN_BODY","into_script","Encode a program transferring `amount` coins from `sender`…","stackless_bytecode_generator","stacklessfunction","stackless_bytecode_generator::stackless_bytecode","stackless_bytecode_generator::stackless_bytecode_generator","stacklessbytecode","StacklessBytecode","StacklessFunction","StacklessProgram","StacklessProgramGenerator","StacklessModuleGenerator","LdByteArray","GetTxnSenderAddress","source_map","BoogieTranslator","ModuleTranslator","stackless_bytecode","Given a set of targets and a set of dependencies - Checks…","compiledunit","filessourcetext","is_permitted_printable_char","Determine if a character is an allowed eye-visible…","is_permitted_newline_char","Determine if a character is a permitted newline character.","is_permitted_char","Determine if a character is permitted character.","intoiterator","move_lang::shared","uniquemap","ADDRESS_LENGTH","visibility","move_lang::cfgir::ast","move_lang::cfgir::ast::Command_","move_lang::cfgir::ast::UnannotatedExp_","successors","singletype","move_lang::cfgir","btreeset","num_blocks","move_lang","is_source_module","resource_opt","StructFields","FunctionBody_","SingleType_","UnresolvedError","translate","move_lang::expansion","parameters","Function","ModuleCall","type_arguments","acquires","move_lang::hlir::ast","else_block","move_lang::hlir::ast::Statement_","IgnoreAndPop","BuiltinFunction_","UnannotatedExp_","from_user","move_lang::hlir::ast::UnannotatedExp_","ExpListItem","unannotatedexp","SingleType","BuiltinFunction","UnannotatedExp","builtintypename_","basetype","type_at_index","move_lang::hlir","SequenceItem_","SequenceItem","subst_format","move_lang::naming","filedefinition","move_lang::parser","ModuleType","UnaryExp","BinopExp","BorrowUnpack","move_lang::typing::ast","move_lang::typing::ast::UnannotatedExp_","Continue","explistitem","AssignList","move_lang::typing","move_lang::shared::unique_map","move_lang::cfgir::cfg","move_lang::expansion::ast","move_lang::naming::ast","move_lang::parser::syntax","move_lang::parser::ast","move_lang::to_bytecode::translate","move_lang::test_utils","clone_drop_loc","drop_loc","singletype_","structfields","basetype_","typename_","tparamid","moduleident_","functionbody_","builtinfunction_","unannotatedexp_","sequenceitem_","modulecall","expdotted_","BaseType_","TypeName_","ExpDotted_","BuiltinTypeName_","ModuleIdent_","FileDefinition","AddressDirective","CompiledUnit","StringError","MoveFrom","libra_metrics","servicemetrics","histogramtimer","new_and_registered","durationhistogram","observe_duration","libra_metrics::counters","histogram","metricfamily","intcounter","ServiceMetrics","DurationHistogram","SVC_COUNTERS","COUNTER_ADMISSION_CONTROL_CANNOT_SEND_REPLY","COUNTER_CLIENT_ERRORS","AdmissionControlStatus","SubmitTransactionResponse","validator_id","Validator accepted the transaction.","Blacklisted","The sender is blacklisted.","The transaction is rejected, e.g. due to incorrect…","SubmitTransactionRequest","admission_control_proto::proto::admission_control","admissioncontrolstatuscode","The status of a transaction submission can either be a VM…","submittransactionresponse","submittransactionrequest","submit_transaction","clientunaryreceiver","calloption","update_to_latest_ledger","admission_control_proto","admission_control_proto::proto::admission_control::admission_control_msg","admission_control_proto::proto::admission_control::submit_transaction_response","admissioncontrolmsg","admissioncontrolstatus","AdmissionControlMsg","AdmissionControlStatusCode","AdmissionControl","AdmissionControlClient","admission_control","Returns `true` if `value` is a variant of…","rpccontext","Helper to construct and parse…","account_state_blob","SaveTransactionsRequest","txns_to_commit","first_version","ledger_info_with_signatures","ledger_version","GetAccountStateWithProofByVersionRequest","GetAccountStateWithProofByVersionResponse","sparse_merkle_proof","GetStartupInfoResponse","ledger_frozen_subtree_hashes","account_state_root_hash","StartupInfo","committed_tree_state","synced_tree_state","GetLatestLedgerInfosPerEpochRequest","start_epoch","GetLatestLedgerInfosPerEpochResponse","latest_ledger_infos","savetransactionsresponse","unarysink","getaccountstatewithproofbyversionresponse","getstartupinforesponse","getlatestledgerinfosperepochresponse","savetransactionsrequest","save_transactions","update_to_latest_ledger_opt","update_to_latest_ledger_async_opt","update_to_latest_ledger_async","get_transactions","getaccountstatewithproofbyversionrequest","get_account_state_with_proof_by_version","getstartupinforequest","get_startup_info","getlatestledgerinfosperepochrequest","get_latest_ledger_infos_per_epoch","storage_proto","storage_proto::proto::storage","startupinfo","treestate","TreeState","StorageClient","SaveTransactionsResponse","GetStartupInfoRequest","serverhandle","ServerHandle","storageread","See [`LibraDB::update_to_latest_ledger`].","See [`LibraDB::get_transactions`].","See [`LibraDB::get_account_state_with_proof_by_version`].","See [`LibraDB::get_startup_info`].","See [`LibraDB::get_latest_ledger_infos_per_epoch`].","This trait defines interfaces to be implemented by a…","See [`LibraDB::save_transactions`].","environment","get_transactions_async","get_account_state_with_proof_by_version_async","get_startup_info_async","get_latest_ledger_infos_per_epoch_async","save_transactions_async","VerifiedStateView","StorageRead","StorageWrite","StorageReadServiceClient","StorageWriteServiceClient","getnodedetailsresponse","geteventsresponse","getnodedetailsrequest","get_node_details","geteventsrequest","debug_interface","nodedebuginterfaceclient","jsonlogentry","debug_interface::proto","debug_interface::node_debug_service","debug_interface::json_log","get_events","nodedebugservice","GetNodeDetailsResponse","GetEventsResponse","NodeDebugInterface","NodeDebugInterfaceClient","NodeDebugService","JsonLogEntry","NodeDebugClient","GetNodeDetailsRequest","GetEventsRequest","channel::libra_channel","channel::message_queues","is_terminated","WithEntryTimestamp","TEST_COUNTER","Address of the account.","addressandindex","accountdata","indexandsequence","clientproxy","client::client_proxy","accountstatus","AccountData","AccountStatus","AddressAndIndex","IndexAndSequence","ClientProxy","AccountEntry","compile_program","An Ed25519 private key","generate_genesis_keypair","Generates a well-known keypair `(Ed25519PrivateKey,…","ED25519_PRIVATE_KEY_LENGTH","The length of the Ed25519PrivateKey","ED25519_PUBLIC_KEY_LENGTH","The length of the Ed25519PublicKey","ED25519_SIGNATURE_LENGTH","The length of the Ed25519Signature","Serialize an Ed25519PrivateKey.","An extension to to/from Strings for [`ValidKey`][ValidKey].","from_encoded_string","When trying to convert from bytes, we simply decode the…","to_encoded_string","A function to encode into hex-string after serializing.","A keypair consisting of a private and public key","private_key","the private key component","the public key component","Deserialize an Ed25519PrivateKey. This method will also…","A struct that represents an account address. Currently…","from_public_key","from_hex_literal","RawTransaction is the portion of a transaction that a…","Deprecated. See…","A transaction that executes code.","A transaction that publishes code.","Create a new `RawTransaction` with a payload.","Create a new `RawTransaction` with a script.","Create a new `RawTransaction` with a module to publish.","new_write_set","Signs the given `RawTransaction`. Note that this consumes…","into_payload","Return the sender of this transaction.","Tries to convert the provided byte buffer into Address.","Similar to `write_set_strategy` except generates a valid…","vm_runtime::code_cache","loadedmodule","functionref","is_genesis","vm_runtime","module_cache","transactiondatacache","transactionmetadata","return_count","local_count","vm_runtime::loaded_data","ACCOUNT_MODULE","The ModuleId for the Account module","EVENT_MODULE","The ModuleId for the Event","remotecache","create_account","Create an account on the blockchain by calling into…","execute_function","Execute a function. `module` is an identifier for the name…","make_write_set","stateview","execute_block","vm_runtime::txn_executor","vm_runtime::code_cache::module_adapter","vm_runtime::code_cache::module_cache","vm_runtime::code_cache::script_cache","vm_runtime::data_cache","vm_runtime::interpreter","vm_runtime::loaded_data::function","vm_runtime::loaded_data::loaded_module","get_module","resolve_function_ref","resolve_struct_def","get_loaded_module","cache_module","reclaim_cached_module","gasmeter","code_definition","arg_count","validate_transaction","functiondef","ModuleFetcher","ModuleFetcherImpl","FakeFetcher","ModuleCache","VMModuleCache","BlockModuleCache","TransactionModuleCache","ScriptCache","RemoteCache","BlockDataCache","TransactionDataCache","Interpreter","InterpreterForGasCost","InterpreterForCostSynthesis","FunctionDef","FunctionReference","FunctionRef","LoadedModule","TransactionExecutor","GAS_SCHEDULE_MODULE","NullFetcher","COIN_MODULE","VALIDATOR_CONFIG_MODULE","LIBRA_SYSTEM_MODULE","TRANSACTION_FEE_DISTRIBUTION_MODULE","loaded_data","Loaded definition of code data used in runtime.","vm_validator","vm_validator::mocks::mock_vm_validator","vm_validator::vm_validator","TransactionValidation","VMValidator","MockVMValidator","get_address","get_public_key","get_addresses","GENESIS_KEYPAIR","cluster_test","instance","validatorevent","healthcheckcontext","experiments","cluster_test::aws","cluster_test::cluster","cluster_test::deployment","cluster_test::effects","cluster_test::experiments","cluster_test::github","cluster_test::health","cluster_test::instance","cluster_test::prometheus","cluster_test::slack","cluster_test::suite","cluster_test::thread_pool_executor","cluster_test::tx_emitter","is_complete","deactivate","affected_validators","invalidate","prometheus","threadpoolexecutor","DeploymentManager","NetworkDelay","RemoveNetworkEffects","StopContainer","MultiRegionSimulation","PacketLossRandomValidators","RebootRandomValidators","GitCommitInfo","HealthCheckError","CommitHistoryHealthCheck","DebugPortLogThread","LivenessHealthCheck","HealthCheck","HealthCheckRunner","HealthCheckContext","MatrixResponse","SlackClient","ExperimentSuite","ThreadPoolExecutor","EmitThreadParams","EmitJobRequest","ValidatorEvent","swarmconfig","config_builder","config_builder::swarm_config","SwarmConfig","SwarmConfigBuilder","get_test_config","Returns a [`SignedTransaction`] with the arguments defined…","with_keypair","Creates a new `AccountData` with the provided account.","Changes the keys for this account to the provided ones.","make_access_path","Returns the AccessPath that describes the Account resource…","Returns the address of the account. This is a hash of the…","language_e2e_tests","Represents a peer-to-peer transaction performed in the…","Returns a [`Strategy`] that generates a universe of…","Returns an [`AccountUniverse`] with the initial state…","fakeexecutor","accountuniverse","num_accounts","autransactiongen","rotate_key","sent_events_count","received_events_count","Returns the gas cost of a create-account transaction where…","Returns the gas cost of a peer-to-peer transaction with an…","compile_script","Compile the provided Move code into a blob which can be…","Creates an executor from the genesis file…","add_account_data","The gas cost of a create-account transaction where the…","PEER_TO_PEER","The gas cost of a peer-to-peer transaction that creates a…","The gas cost of a peer-to-peer transaction that tries to…","language_e2e_tests::account","language_e2e_tests::account_universe","language_e2e_tests::common_transactions","language_e2e_tests::data_store","language_e2e_tests::executor","language_e2e_tests::gas_costs","fakedatastore","accountpickstyle","accountcurrent","AccountPair","AccountPickStyle","AccountUniverseGen","AccountUniverse","AccountPairGen","AUTransactionGen","AccountCurrent","FakeDataStore","FakeExecutor","CreateAccountGen","CreateExistingAccountGen","P2PTransferGen","P2PNewReceiverGen","RotateKeyGen","CREATE_ACCOUNT","ROTATE_KEY","GENESIS_WRITE_SET","TESTNET_GENESIS","CREATE_ACCOUNT_FIRST","CREATE_ACCOUNT_NEXT","CREATE_ACCOUNT_TOO_LOW_FIRST","CREATE_ACCOUNT_TOO_LOW_NEXT","CREATE_EXISTING_ACCOUNT_FIRST","CREATE_EXISTING_ACCOUNT_NEXT","PEER_TO_PEER_TOO_LOW","PEER_TO_PEER_NEW_RECEIVER_FIRST","PEER_TO_PEER_NEW_RECEIVER_NEXT","PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_FIRST","PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_NEXT","create_user_txn","functional_tests","AccountDefinition","functional_tests::config","globalconfig","evaluationlog","functional_tests::checker","functional_tests::config::global","functional_tests::config::transaction","functional_tests::errors","functional_tests::evaluator","functional_tests::utils","from_str","EvaluationLog","EvaluationOutput","RawTransactionInput","is_validator","from_boxed_compat","Creates an `Error` from `Box<std::error::Error>`.","Return a reference to the underlying failure that this…","Returns the name of the underlying fail.","Gets a reference to the `Backtrace` for this `Error`.","Provides context for this `Error`.","Wraps `Error` in a compatibility type.","Returns the \"root cause\" of this error - the last value in…","Returns a iterator over the causes of this error with the…","Deprecated alias to `iter_causes`.","validator_set","libra_swarm","swarmlaunchfailure","libra_swarm::client","libra_swarm::swarm","InteractiveClient","InProcessTestClient","HealthStatus","LibraSwarmDir","SwarmLaunchFailure","transactiondata","executedtrees","storagewrite","committableblock","processedvmoutput","statecomputeresult","executedstate","StateComputeResult","ExecutedState","TransactionData","ProcessedVMOutput","CommittableBlock","ExecutedTrees","has_reconfiguration","This method builds and then materializes the underlying…","cost_synthesis","cost_synthesis::global_state","modulecache","stackstate","cost_synthesis::module_generator","cost_synthesis::global_state::account","cost_synthesis::global_state::inhabitor","cost_synthesis::natives","cost_synthesis::stack_generator","ModuleBuilder","ModuleGenerator","RandomInhabitor","StackAccessorMocker","RandomStackGenerator","admissioncontrolclient","benchmarker","benchsummary","new_from_args","protosubmittransactionresponse","benchmark","submit_rate","benchmark::cli_opt","benchmark::load_generator","benchmark::submit_rate","decompositions","recompositions","gen_accounts","gen_setup_requests","gen_requests","argmatches","TransactionPattern","LoadGenerator","RingTransferTxnGenerator","PairwiseTransferTxnGenerator","ConstantRate","BenchSummary","Benchmarker","grpc_helpers","opmetrics","Translates bytecode to Boogie.","bytecode_function_generator","This module generates the Boogie version of bytecode…","This module translates the bytecode of a module to Boogie…","max_struct_depth","module_name_to_idx","all_type_strs","struct_name_from_handle_index","format_type","format_value_cons","get_field_info_from_def_index","emit_struct_code","translate_function","translate_bytecode","generate_function_sig","get_arg_name","struct_name_from_definition_index","field_name_from_index","get_local_type","is_local_ref","is_local_mutable_ref","format_value_or_ref","format_type_checking","emit_stratified_functions","emit_struct_specific_functions","TransactionBencher","abstract_state","borrowstate","borrow_graph","test_generation","mutability","control_flow_graph","basicblock","num_children","stack_push_register","local_exists","local_availability_is","local_kind_is","local_take_borrow","local_place","Wrapper for enclosing the arguments of…","test_generation::abstract_state","test_generation::borrow_graph","test_generation::bytecode_generator","test_generation::config","test_generation::control_flow_graph","test_generation::error","test_generation::summaries","from_clap","BorrowState","BytecodeGenerator","BasicBlock","acquires_global_resources","This trait defines a type that can serve as a…","Converts `self` to bytes to be stored in DB.","Converts bytes fetched from DB to `Self`.","Type alias to improve readability.","schemaiterator","schemabatch","SeekKeyCodec","SchemaBatch","SchemaIterator","libradb::mock_genesis","libradb::errors","LibraDbError","GENESIS_INFO","TransportError","protocolid","peermanagerrequest","rpcnotification","networkrequest","peermanagernotification","directsendrequest","receiver","directsendnotification","Monotonically increasing incarnation number used to allow…","RequestBlock","RespondBlock","RequestEpoch","wiretype","SendMessage","RecvMessage","network::protocols","Rpc method identifier, e.g., `/libra/consensus/rpc/0.1.0`.…","NotConnected","network::protocols::rpc","rpcrequest","peermanagerrequestsender","advertised_address","trusted_peers","networkpublickeys","discovery_interval_ms","connectivity_check_interval_ms","network::validator_network","consensusmsg","networknotification","send_to_many","Send a unary rpc request to remote peer `recipient`.…","update_eligible_nodes","network::interface","network::proto","network::protocols::direct_send","network::protocols::rpc::error","network::validator_network::network_builder","add_mempool","add_consensus","add_state_synchronizer","add_admission_control","requestblock","mempoolsyncmsg","statesynchronizermsg","voteproposal","respondblock","requestepoch","signedpeerinfo","fullnodepayload","signedfullnodepayload","discoverymsg","identitymsg","getchunkrequest","getchunkresponse","healthcheckermsg","NetworkPublicKeys","PeerManagerError","NetworkRequest","NetworkNotification","LibraNetworkProvider","NetworkProvider","ConsensusMsg","VoteProposal","HealthCheckerMsg","MempoolSyncMsg","DiscoveryMsg","FullNodePayload","IdentityMsg","SignedFullNodePayload","SignedPeerInfo","GetChunkRequest","GetChunkResponse","StateSynchronizerMsg","ConsensusMsg_oneof","HealthCheckerMsg_oneof","IdentityMsg_Role","StateSynchronizerMsg_oneof","DirectSendRequest","DirectSendNotification","InboundRpcRequest","OutboundRpcRequest","RpcRequest","RpcNotification","TransportType","NetworkBuilder","AdmissionControlNetworkSender","ConsensusNetworkSender","MempoolNetworkSender","StateSynchronizerSender","NetworkEvents","NetworkSender","storage_service","storage_service::mocks::mock_storage_client","StorageService","MockStorageReadClient","statesyncconfig","statesyncclient","StateSynchronizer","StateSyncClient","addtransactionwithvalidationresponse","getblockresponse","committransactionsresponse","healthcheckresponse","addtransactionwithvalidationrequest","add_transaction_with_validation","getblockrequest","committransactionsrequest","commit_transactions","healthcheckrequest","health_check","libra_mempool::proto","libra_mempool","libra_mempool::proto::mempool","transactionexclusion","committedtransaction","MempoolRuntime","AddTransactionWithValidationRequest","AddTransactionWithValidationResponse","GetBlockRequest","GetBlockResponse","TransactionExclusion","CommitTransactionsRequest","CommittedTransaction","HealthCheckResponse","MempoolClient","MempoolClientTrait","CommitTransactionsResponse","HealthCheckRequest","mempoolnetworksender","inmemoryaccumulator","consensus_types","validatorsigner","quorumcert","consensus_types::block","new_proposal","Block has the core data of a consensus block that should…","consensus_types::block_data","quorum_cert","is_genesis_block","is_nil_block","blockretrievalstatus","validate_signatures","proposalmsg","verify_well_formed","timeoutcertificate","transactionaccumulatorhasher","accumulator_extension_proof","accumulatorextensionproof","consensus_types::accumulator_extension_proof","consensus_types::block_retrieval","consensus_types::epoch_retrieval","consensus_types::executed_block","consensus_types::proposal_msg","consensus_types::quorum_cert","consensus_types::sync_info","consensus_types::timeout","consensus_types::timeout_certificate","consensus_types::vote","consensus_types::vote_data","consensus_types::vote_msg","consensus_types::vote_proposal","blocktype","blockdata","blockretrievalrequest","blockretrievalresponse","syncinfo","votedata","AccumulatorExtensionProof","BlockRetrievalStatus","BlockRetrievalRequest","BlockRetrievalResponse","EpochRetrievalRequest","ExecutedBlock","ProposalUncheckedSignatures","ProposalMsg","TimeoutCertificate","executed_trees","The round of a block is a consensus-internal counter,…","add_signature","remove_signature","admission_control_service","admissioncontrolnetworkevents","admission_control_service::admission_control_service","admission_control_service::mocks::local_mock_mempool","admission_control_service::runtime","AdmissionControlService","LocalMockMempool","AdmissionControlRuntime","This API is used to update the client to the latest ledger…","generate_corpus","valuegenerator","admissioncontrolnetworksender","safety_rules","safety_rules::Error","last_vote_round","preferred_block_round","consensusstate","ConsensusState","SafetyRules","consensusprovider","ConsensusProvider","consensusnetworksender","LibraHandle","libra_fuzzer","fuzztarget","FuzzTargetImpl"];
searchIndex["accumulator"]={"doc":"This module provides algorithms for accessing and updating…","i":[[3,R[566],R[567],"In this live Merkle Accumulator algorithms.",N,N],[8,R[565],E,"Defines the interface between `MerkleAccumulator` and…",N,N],[10,"get",E,"Return `HashValue` carried by the node at `Position`.",0,[[["self"],[R[506]]],[[R[149]],[R[0],[R[149]]]]]],[11,"append",E,"Given an existing Merkle Accumulator (represented by…",1,[[[R[312]],["r"]],[R[0]]]],[11,R[571],E,"Get proof of inclusion of the leaf at `leaf_index` in this…",1,[[[R[312]],["u64"],["r"]],[[R[0],[R[485]]],[R[485]]]]],[11,"get_consistency_proof",E,"Gets a proof that shows the full accumulator is consistent…",1,[[[R[312]],["r"]],[[R[473]],[R[0],[R[473]]]]]],[11,R[661],E,"Gets a proof that shows a range of leaves are part of the…",1,[[[R[312]],["r"],[R[24],["u64"]],["u64"]],[[R[486]],[R[0],[R[486]]]]]],[11,"get_frozen_subtree_hashes",E,"From left to right, gets frozen subtree root hashes of the…",1,[[[R[312]],["r"]],[[R[0],["vec"]],["vec",[R[149]]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]]],"p":[[8,R[565]],[3,R[566]]]};
searchIndex["admission_control_proto"]={"doc":E,"i":[[3,R[1481],R[1497],"Rust structure for SubmitTransactionResponse protobuf…",N,N],[12,"ac_status",E,"AC status returned to client if any - it can be one of:…",0,N],[12,"mempool_error",E,"Mempool error status if any.",0,N],[12,"vm_error",E,"VM error status if any.",0,N],[12,R[1482],E,"The id of validator associated with this AC.",0,N],[4,R[1480],E,"AC response status of submit_transaction to clients.",N,N],[13,"Accepted",E,R[1483],1,N],[13,R[1484],E,R[1485],1,N],[13,"Rejected",E,R[1486],1,N],[0,"proto",E,E,N,N],[0,R[1506],"admission_control_proto::proto",E,N,N],[3,R[1502],R[1488],"The request for submitting a transaction to an upstream…",N,N],[12,"message",E,E,2,N],[3,R[1487],E,"…",N,N],[12,R[351],E,"Transaction submitted by user.",3,N],[3,R[1480],E,"AC response status containing code and optionally an error…",N,N],[12,"code",E,E,4,N],[12,"message",E,E,4,N],[3,R[1481],E,"The response for transaction submission.",N,N],[12,R[1482],E,"Public key(id) of the validator that processed this…",5,N],[12,"status",E,R[1490],5,N],[3,R[1505],E,E,N,N],[4,R[1503],E,"Additional statuses that are possible from admission…",N,N],[13,"Accepted",E,R[1483],6,N],[13,R[1484],E,R[1485],6,N],[13,"Rejected",E,R[1486],6,N],[5,"create_admission_control",E,E,N,[[["admissioncontrol"],["clone"],["send"]],["service"]]],[0,"admission_control_msg",E,E,N,N],[4,"Message",R[1498],E,N,N],[13,R[1487],E,E,7,N],[13,R[1481],E,E,7,N],[11,"encode",E,E,7,[[["self"],["b"]]]],[11,"merge",E,E,7,[[["u32"],[R[2019]],["b"],[R[24]]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,7,[[["self"]],["usize"]]],[11,"code",R[1488],E,4,[[["self"]],[R[1489]]]],[11,"set_code",E,E,4,[[["self"],[R[1489]]]]],[0,"submit_transaction_response",E,E,N,N],[4,"Status",R[1499],R[1490],N,N],[13,"VmStatus",E,E,8,N],[13,"AcStatus",E,E,8,N],[13,"MempoolStatus",E,E,8,N],[11,"encode",E,E,8,[[["self"],["b"]]]],[11,"merge",E,E,8,[[["u32"],[R[2019]],[R[24]],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,8,[[["self"]],["usize"]]],[11,R[302],R[1488],R[1507],6,[[["i32"]],["bool"]]],[11,"from_i32",E,"Converts an `i32` to a `AdmissionControlStatusCode`, or…",6,[[["i32"]],[[R[24],[R[1489]]],[R[1489]]]]],[8,R[1504],E,E,N,N],[10,R[1493],E,E,9,[[["self"],[R[1491]],[R[1508]],[R[1530],[R[1491]]],[R[1492]]]]],[10,R[1496],E,E,9,[[["self"],[R[482]],[R[1508]],[R[479]],[R[1530],[R[482]]]]]],[11,"new",E,E,10,[[["channel"]],["self"]]],[11,"submit_transaction_opt",E,E,10,[[["self"],[R[1492]],[R[1495]]],[[R[1491]],[R[0],[R[1491]]]]]],[11,R[1493],E,E,10,[[["self"],[R[1492]]],[[R[1491]],[R[0],[R[1491]]]]]],[11,"submit_transaction_async_opt",E,E,10,[[["self"],[R[1492]],[R[1495]]],[[R[1494],[R[1491]]],[R[0],[R[1494]]]]]],[11,"submit_transaction_async",E,E,10,[[["self"],[R[1492]]],[[R[1494],[R[1491]]],[R[0],[R[1494]]]]]],[11,R[1536],E,E,10,[[["self"],[R[479]],[R[1495]]],[[R[482]],[R[0],[R[482]]]]]],[11,R[1496],E,E,10,[[["self"],[R[479]]],[[R[482]],[R[0],[R[482]]]]]],[11,R[1537],E,E,10,[[["self"],[R[479]],[R[1495]]],[[R[0],[R[1494]]],[R[1494],[R[482]]]]]],[11,R[1538],E,E,10,[[["self"],[R[479]]],[[R[0],[R[1494]]],[R[1494],[R[482]]]]]],[11,"spawn",E,E,10,[[["self"],["f"]]]],[11,R[13],R[1497],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],R[1488],E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[172],E,E,2,[[]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[172],E,E,3,[[]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[172],E,E,5,[[]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[172],E,E,6,[[]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],R[1498],E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],R[1499],E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[75],R[1488],E,2,[[],[R[1500]]]],[11,R[75],E,E,3,[[],[R[1492]]]],[11,R[75],E,E,4,[[],[R[1501]]]],[11,R[75],E,E,5,[[],[R[1491]]]],[11,R[75],E,E,6,[[],[R[1489]]]],[11,"clone",E,E,2,[[["self"]],[R[1500]]]],[11,"clone",R[1498],E,7,[[["self"]],["message"]]],[11,"clone",R[1488],E,3,[[["self"]],[R[1492]]]],[11,"clone",E,E,4,[[["self"]],[R[1501]]]],[11,"clone",E,E,5,[[["self"]],[R[1491]]]],[11,"clone",R[1499],E,8,[[["self"]],["status"]]],[11,"clone",R[1488],E,6,[[["self"]],[R[1489]]]],[11,"clone",E,E,10,[[["self"]],[R[1915]]]],[11,"clone",R[1497],E,1,[[["self"]],[R[1501]]]],[11,"clone",E,E,0,[[["self"]],[R[1491]]]],[11,R[247],R[1488],E,6,[[["self"],[R[1489]]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",E,E,2,[[["self"],[R[1500]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1500]]],["bool"]]],[11,"eq",R[1498],E,7,[[["self"],["message"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["message"]],["bool"]]],[11,"eq",R[1488],E,3,[[["self"],[R[1492]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1492]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[1501]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[1501]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1491]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1491]]],["bool"]]],[11,"eq",R[1499],E,8,[[["self"],["status"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["status"]],["bool"]]],[11,"eq",R[1488],E,6,[[["self"],[R[1489]]],["bool"]]],[11,"eq",R[1497],E,1,[[["self"],[R[1501]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1501]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1491]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1491]]],["bool"]]],[11,"cmp",R[1488],E,6,[[["self"],[R[1489]]],[R[32]]]],[11,"from",E,E,4,[[[R[1501]]],["self"]]],[11,"from",E,E,5,[[[R[1491]]],["self"]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1498],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1488],E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1499],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1488],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1497],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[2],E,E,1,[[[R[1501]]],[R[0]]]],[11,R[2],E,E,0,[[[R[1491]]],[R[0]]]],[11,R[514],R[1488],E,2,[[["self"],["b"]]]],[11,R[515],E,E,2,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,2,[[["self"]],["usize"]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[514],E,E,3,[[["self"],["b"]]]],[11,R[515],E,E,3,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,3,[[["self"]],["usize"]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[514],E,E,4,[[["self"],["b"]]]],[11,R[515],E,E,4,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,4,[[["self"]],["usize"]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[514],E,E,5,[[["self"],["b"]]]],[11,R[515],E,E,5,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,5,[[["self"]],["usize"]]],[11,"clear",E,E,5,[[["self"]]]]],"p":[[3,R[1481]],[4,R[1480]],[3,R[1502]],[3,R[1487]],[3,R[1480]],[3,R[1481]],[4,R[1503]],[4,"Message"],[4,"Status"],[8,R[1504]],[3,R[1505]]]};
searchIndex["admission_control_service"]={"doc":"Admission Control","i":[[0,"admission_control_fuzzing",R[2187],"Fuzzer for admission control",N,N],[5,R[2196],"admission_control_service::admission_control_fuzzing","generate_corpus produces an arbitrary…",N,[[[R[2197]]],[["vec",["u8"]],["u8"]]]],[5,"fuzzer",E,"fuzzer takes a serialized SubmitTransactionRequest an…",N,[[]]],[0,R[2187],R[2187],"AC gRPC service. Admission Control (AC) is a module acting…",N,N],[3,R[2192],R[2189],"Struct implementing trait (service handle)…",N,N],[11,"new",E,"Constructs a new AdmissionControlService instance.",0,[[["arc",[R[1556]]],["sender"],[R[1556]]],["self"]]],[0,"mocks",R[2187],"Useful Mocks",N,N],[0,"local_mock_mempool","admission_control_service::mocks","Mocker for the local mempool",N,N],[3,R[2193],R[2190],"Define a local mempool to use for unit tests and fuzzing,…",N,N],[11,"new",E,"Creates a new instance of localMockMempool",1,[[],["self"]]],[0,"runtime",R[2187],"AC runtime to launch gRPC and network service",N,N],[3,R[2194],R[2191],"Handle for AdmissionControl Runtime",N,N],[11,"bootstrap",E,"setup Admission Control runtime",2,[[[R[2188]],[R[929]],[R[2198]],["vec",[R[2188]]]],["self"]]],[11,R[13],R[2189],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[2190],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[2191],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",R[2189],E,0,[[["self"]],["admissioncontrolservice"]]],[11,"clone",R[2190],E,1,[[["self"]],["localmockmempool"]]],[11,R[1493],R[2189],"Submit a transaction to the validator this AC instance…",0,[[["self"],[R[1492]],[R[1508]],[R[1491]],[R[1530],[R[1491]]]]]],[11,R[1496],E,R[2195],0,[[["self"],[R[482]],[R[1530],[R[482]]],[R[1508]],[R[479]]]]],[11,R[2111],R[2190],E,1,[[["self"],[R[2110]]],[[R[0],[R[2106]]],[R[2106]]]]],[11,R[2116],E,E,1,[[["self"],[R[2115]]],[[R[2109]],[R[0],[R[2109]]]]]]],"p":[[3,R[2192]],[3,R[2193]],[3,R[2194]]]};
searchIndex["benchmark"]={"doc":E,"i":[[3,"OP_COUNTER",R[1920],E,N,N],[3,R[1937],E,"Benchmark library for Libra Blockchain.",N,N],[3,R[1936],E,"Summary of the results of playing TXNs with Benchmarker.",N,N],[0,"bin_utils",E,E,N,N],[5,"create_ac_clients","benchmark::bin_utils","Creat a vector of AdmissionControlClient and connect them…",N,[[["usize"]],[[R[1915]],["vec",[R[1915]]]]]],[5,"create_benchmarker_from_opt",E,E,N,[[["benchopt"]],[R[1916]]]],[5,"try_start_metrics_server",E,"Benchmarker is not a long-lived job, so starting a server…",N,[[["benchopt"]]]],[5,"gen_and_mint_accounts",E,"Generate a group of new accounts, and mint them using…",N,[[[R[1916]],[R[1604]],[T],["u64"]],[[R[1604]],["vec",[R[1604]]]]]],[5,"measure_throughput",E,"Play given TXNs with Benchmarker for several epochs and…",N,[[[R[1916]],[R[1604]],[T],["u64"]],[[R[1917]],["vec",[R[1917]]]]]],[5,"linear_search_max_throughput",E,"Search the maximum throughput by increasing submission…",N,[[[R[1916]],[R[1604]],[T],["u64"]]]],[0,"cli_opt",R[1920],E,N,N],[3,"BenchOpt",R[1922],"CLI options for creating Benchmarker, shared by binaries…",N,N],[12,"validator_addresses",E,"Validator address list separated by whitespace:…",0,N],[12,"swarm_config_dir",E,"libra-swarm's config file directory, which holds…",0,N],[12,"metrics_server_address",E,"Metrics server process's address. If this argument is not…",0,N],[12,"faucet_key_file_path",E,"Valid faucet key file path.",0,N],[12,"num_clients",E,"Number of AC clients. If not specified or equals 0, it…",0,N],[12,"stagger_range_ms",E,"Randomly distribute the clients to start sending requests…",0,N],[12,R[1921],E,"Submit constant number of requests per second per client;…",0,N],[3,"RubenOpt",E,"CLI options for RuBen.",N,N],[12,"bench_opt",E,E,1,N],[12,R[1796],E,"Number of accounts to create in Libra.",1,N],[12,"num_rounds",E,"Number of repetition to attempt, in one epoch, to increase…",1,N],[12,"num_epochs",E,"Number of epochs to measure the TXN throughput, each time…",1,N],[12,"txn_pattern",E,"Choices of how to generate TXNs.",1,N],[3,"SearchOpt",E,"CLI options for linear search max throughput.",N,N],[12,"bench_opt",E,E,2,N],[12,"upper_bound",E,"Upper bound value of submission rate for each client.",2,N],[12,"lower_bound",E,"Lower bound value of submission rate for each client.",2,N],[12,"inc_step",E,"Increase step of submission rate for each client.",2,N],[12,"num_epochs",E,"Number of epochs to send TXNs at a fixed rate.",2,N],[12,"num_searches",E,"How many times to repeat the same linear search. Each time…",2,N],[4,R[1931],E,E,N,N],[13,"Ring",E,E,3,N],[13,"Pairwise",E,E,3,N],[5,"parse_swarm_config_from_dir",E,"Scan *.node.config.toml files under config_dir_name, parse…",N,[[["str"]],[["vec",[R[58]]],[R[0],["vec"]]]]],[11,"variants",E,E,3,[[]]],[11,"try_parse_validator_addresses",E,"Override validator_addresses if swarm_config_dir is…",0,[[["self"]]]],[11,"parse_num_clients",E,"Ensure at least one client for one validator.",0,[[["self"]]]],[11,"parse_submit_rate",E,"Using either specified constant rate or flood.",0,[[["self"]],["u64"]]],[11,R[1918],E,E,1,[[],["self"]]],[11,R[1918],E,E,2,[[],["self"]]],[0,R[1938],R[1920],E,N,N],[5,"divide_items","benchmark::grpc_helpers","Divide generic items into a vector of chunks of nearly…",N,[[["usize"]],["chunks"]]],[5,"submit_and_wait_requests",E,"Send requests using specified rate to AC async, wait for…",N,[[[R[1915]],["vec",["request"]],["request"],["u64"]],[[R[1919]],["vec",[R[1919]]]]]],[5,"get_account_states",E,"Request a bunch of accounts' states, including sequence…",N,[[[R[1915]]],[[R[265]],["hashmap",[R[265]]]]]],[5,"sync_account_sequence_number",E,"For each sender account, synchronize its persisted…",N,[[[R[1915]]],[[R[265]],["u64"],["hashmap",[R[265],"u64"]]]]],[0,"load_generator",R[1920],E,N,N],[3,R[1933],R[1923],"…",N,N],[3,R[1934],E,"Pre-generate TXNs of pairwise transfers between accounts,…",N,N],[4,"Request",E,"This enum unifies both write and read requests. Current…",N,N],[13,"WriteRequest",E,E,4,N],[13,"ReadRequest",E,E,4,N],[5,"gen_accounts_from_wallet",E,"Create a number of accounts without keypair from a wallet.",N,[[[R[575]],["u64"]],[[R[1604]],["vec",[R[1604]]]]]],[5,"gen_mint_txn_requests",E,"For each account, generate a mint TXN with the valid…",N,[[[R[1604]]],[["vec",["request"]],["request"]]]],[5,"gen_repeated_requests",E,"Generate repeated requests from a type that implements…",N,[[["u64"],[T]],[["vec",["request"]],["request"]]]],[5,"gen_get_txn_by_sequnece_number_request",E,"Generate a GetAccountTransactionBySequenceNumber request.",N,[[[R[265]],["u64"]],["request"]]],[17,"TXN_EXPIRATION",E,E,N,N],[8,R[1932],E,"This interface specifies the requirements to generate…",N,N],[10,R[1927],E,E,5,[[["self"],["u64"]],[[R[1604]],["vec",[R[1604]]]]]],[10,R[1928],E,E,5,[[["self"],[R[1604]]],[["vec",["request"]],["request"]]]],[10,R[1929],E,E,5,[[["self"]],[["vec",["request"]],["request"]]]],[11,"new",E,E,6,[[],["self"]]],[11,"new",E,E,7,[[],["self"]]],[0,R[1921],R[1920],E,N,N],[3,R[1935],R[1924],"Utilize IntoIter to implement an iterator that returns…",N,N],[11,"new",E,"Init with rate, and the IntoIter of the vector to be…",8,[[["intoiter"],["u64"]],["self"]]],[11,"req_throughput",R[1920],"Calcuate average number of accepted TXNs per second.",9,[[["self"]],["f64"]]],[11,"txn_throughput",E,"Calcuate average number of committed TXNs per second.",9,[[["self"]],["f64"]]],[11,"running_duration_ms",E,E,9,[[["self"]],["f64"]]],[11,"has_rejected_txns",E,E,9,[[["self"]],["bool"]]],[11,"has_uncommitted_txns",E,E,9,[[["self"]],["bool"]]],[11,"new",E,"Construct Benchmarker with a vector of AC clients, stagger…",10,[[[R[1915]],["u16"],["vec",[R[1915]]],["u64"]],["self"]]],[11,"load_faucet_account",E,"…",10,[[["self"],["str"]],[R[1604]]]],[11,"register_accounts",E,"Initialize the sequence numbers for testing accounts.",10,[[["self"]]]],[11,"mint_accounts",E,"Minting given accounts using self's AC client(s). Mint…",10,[[["self"],[R[1604]]]]],[11,"submit_requests",E,"Send both TXNs and read requests to AC async, wait for…",10,[[["self"],["u64"]]]],[11,"wait_txns_committed",E,"Wait for accepted TXNs to commit or time out: for any…",10,[[["self"]]]],[11,"submit_requests_and_wait_txns_committed",E,"Implement the general way to submit requests to Libra and…",10,[[["self"],[R[24],["u64"]],["u64"]],[R[1917]]]],[11,"measure_txn_throughput",E,"Similar to submit_requests_and_wait_txns_committed but…",10,[[["self"],[R[24],["u64"]],["u64"]],[R[1917]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,"into",R[1922],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[58]]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[2],E,E,3,[[["str"]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,"into",R[1923],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[13],R[1924],E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,R[246],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"nfd",E,E,8,[[],[R[1925]]]],[11,"nfkd",E,E,8,[[],[R[1925]]]],[11,"nfc",E,E,8,[[],[R[1926]]]],[11,"nfkc",E,E,8,[[],[R[1926]]]],[11,"stream_safe",E,E,8,[[],["streamsafe"]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[1927],R[1923],E,6,[[["self"],["u64"]],[[R[1604]],["vec",[R[1604]]]]]],[11,R[1928],E,E,6,[[["self"],[R[1604]]],[["vec",["request"]],["request"]]]],[11,R[1929],E,E,6,[[["self"]],[["vec",["request"]],["request"]]]],[11,R[1927],E,E,7,[[["self"],["u64"]],[[R[1604]],["vec",[R[1604]]]]]],[11,R[1928],E,E,7,[[["self"],[R[1604]]],[["vec",["request"]],["request"]]]],[11,R[1929],E,E,7,[[["self"]],[["vec",["request"]],["request"]]]],[11,"clone",E,E,4,[[["self"]],["request"]]],[11,"clone",R[1924],E,8,[[["self"]],["constantrate"]]],[11,"eq",R[1923],E,4,[[["self"],["request"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["request"]],["bool"]]],[11,"next",R[1924],E,8,[[["self"]],[R[24]]]],[11,"deref",R[1920],E,11,[[["self"]],[R[1939]]]],[11,"fmt",R[1922],E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1924],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1920],E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1922],E,3,[[["self"],[R[17]]],[R[0]]]],[11,R[1861],E,E,3,[[["str"]],[R[0]]]],[11,R[172],R[1920],E,11,[[["self"]]]],[11,"clap",R[1922],E,0,[[],["app"]]],[11,R[1988],E,E,0,[[[R[1930]]],["self"]]],[11,"clap",E,E,1,[[],["app"]]],[11,R[1988],E,E,1,[[[R[1930]]],["self"]]],[11,"clap",E,E,2,[[],["app"]]],[11,R[1988],E,E,2,[[[R[1930]]],["self"]]]],"p":[[3,"BenchOpt"],[3,"RubenOpt"],[3,"SearchOpt"],[4,R[1931]],[4,"Request"],[8,R[1932]],[3,R[1933]],[3,R[1934]],[3,R[1935]],[3,R[1936]],[3,R[1937]],[3,"OP_COUNTER"]]};
searchIndex["bounded_executor"]={"doc":"A bounded tokio [`TaskExecutor`]. Only a bounded number of…","i":[[3,R[31],"bounded_executor",E,N,N],[4,R[30],E,"Returned by [`BoundedExecutor::try_spawn`] if it is at…",N,N],[13,"AtCapacity",E,E,0,N],[11,"new",E,"Create a new `BoundedExecutor` from an existing tokio…",1,[[["usize"],[R[256]]],["self"]]],[11,"spawn",E,"Spawn a [`Future`] on the `BoundedExecutor`. This function…",1,[[["self"],["f"]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clone",E,E,1,[[["self"]],["boundedexecutor"]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]]],"p":[[4,R[30]],[3,R[31]]]};
searchIndex["bytecode_source_map"]={"doc":E,"i":[[0,"disassembler",R[1089],E,N,N],[3,R[1111],R[1105],"Holds the various options that we support while…",N,N],[12,"only_public",E,"Only print public functions",0,N],[12,"print_code",E,"Print the bytecode for the instructions within the function.",0,N],[12,"print_basic_blocks",E,"Print the basic blocks of the bytecode.",0,N],[12,"print_locals",E,"Print the locals inside each function body.",0,N],[3,R[1112],E,E,N,N],[11,"new",E,E,0,[[],["self"]]],[11,"new",E,E,1,[[[R[1109]],[R[1104]]],["self"]]],[11,"disassemble_function_def",E,E,1,[[["self"],[R[824]]],[[R[58]],[R[0],[R[58]]]]]],[11,"disassemble_struct_def",E,E,1,[[["self"],[R[778]]],[[R[58]],[R[0],[R[58]]]]]],[11,"disassemble",E,E,1,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[0,"mapping",R[1089],E,N,N],[3,R[1113],R[1106],"An object that associates source code with compiled…",N,N],[12,R[764],E,E,2,N],[12,R[1360],E,E,2,N],[12,"source_code",E,E,2,N],[12,"marks",E,E,2,N],[11,"new",E,E,2,[[[R[750]],[R[1090]]],["self"]]],[11,"new_from_script",E,E,2,[[[R[757]],[R[1090]]],["self"]]],[11,"with_marks",E,E,2,[[["self"],[R[1110]]]]],[11,"with_source_code",E,E,2,[[["self"]]]],[0,"marking",R[1089],E,N,N],[3,R[1114],R[1107],R[1091],N,N],[12,"code_offsets",E,E,3,N],[12,R[1092],E,E,3,N],[3,R[1115],E,R[1091],N,N],[12,"fields",E,E,4,N],[12,R[1092],E,E,4,N],[3,R[1116],E,"A data structure that contains markings for both functions…",N,N],[11,"new",E,E,3,[[],["self"]]],[11,"code_offset",E,E,3,[[["self"],[R[58]],[R[756]]]]],[11,"type_param",E,E,3,[[["self"],[R[58]],["usize"]]]],[11,"new",E,E,4,[[],["self"]]],[11,"field",E,E,4,[[["self"],[R[684]],[R[58]]]]],[11,"type_param",E,E,4,[[["self"],[R[58]],["usize"]]]],[11,"new",E,E,5,[[],["self"]]],[11,"mark_code_offset",E,E,5,[[["self"],[R[824]],[R[58]],[R[756]]]]],[11,"mark_function_type_param",E,E,5,[[["self"],["usize"],[R[824]],[R[58]]]]],[11,"mark_struct_field",E,E,5,[[["self"],[R[778]],[R[684]],[R[58]]]]],[11,"mark_struct_type_param",E,E,5,[[["self"],[R[778]],["usize"],[R[58]]]]],[0,R[1360],R[1089],E,N,N],[3,R[1117],R[1108],E,N,N],[12,R[1093],E,"The source declaration location of the struct",6,N],[12,R[1094],E,"Important: type parameters need to be added in the order…",6,N],[12,"fields",E,"Note that fields to a struct source map need to be added…",6,N],[3,R[1118],E,E,N,N],[12,R[1093],E,"The source location for the definition of this entire…",7,N],[12,R[1094],E,"Note that type parameters need to be added in the order of…",7,N],[12,"locals",E,"The index into the vector is the locals index. The…",7,N],[12,"code_map",E,"The source location map for the function body.",7,N],[3,R[1119],E,E,N,N],[12,"module_name",E,"The name <address.module_name> for module that this source…",8,N],[6,"SourceMap",E,E,N,N],[6,"SourceName",E,E,N,N],[11,"new",E,E,6,[[[R[823]]],["self"]]],[11,R[1096],E,E,6,[[["self"],[R[1095]]]]],[11,R[1097],E,E,6,[[["self"],["usize"]],[[R[24],[R[1095]]],[R[1095]]]]],[11,"add_field_location",E,E,6,[[["self"],[R[823]]]]],[11,"get_field_location",E,E,6,[[["self"],[R[684]]],[R[24]]]],[11,"dummy_struct_map",E,E,6,[[["self"],[R[750]],[R[633]]],[R[0]]]],[11,"new",E,E,7,[[[R[823]]],["self"]]],[11,R[1096],E,E,7,[[["self"],[R[1095]]]]],[11,R[1097],E,E,7,[[["self"],["usize"]],[[R[24],[R[1095]]],[R[1095]]]]],[11,R[1098],E,"A single source-level instruction may possibly map to a…",7,[[["self"],[R[756]],[R[823]]]]],[11,R[1100],E,E,7,[[["self"],[R[1095]]]]],[11,R[1099],E,"Recall that we are using a segment tree. We therefore…",7,[[["self"],[R[756]]],[R[24]]]],[11,R[1101],E,E,7,[[["self"],["u64"]],[[R[24],[R[1095]]],[R[1095]]]]],[11,"dummy_function_map",E,E,7,[[["self"],[R[750]],[R[716]]],[R[0]]]],[11,"new",E,E,8,[[[R[632]]],["self"]]],[11,"add_top_level_function_mapping",E,E,8,[[["self"],[R[824]],[R[823]]],[R[0]]]],[11,"add_function_type_parameter_mapping",E,E,8,[[["self"],[R[824]],[R[1095]]],[R[0]]]],[11,"get_function_type_parameter_name",E,E,8,[[["self"],[R[824]],["usize"]],[[R[1095]],[R[0],[R[1095]]]]]],[11,R[1098],E,E,8,[[["self"],[R[823]],[R[824]],[R[756]]],[R[0]]]],[11,R[1099],E,"Given a function definition and a code offset within that…",8,[[["self"],[R[824]],[R[756]]],[R[0]]]],[11,R[1100],E,E,8,[[["self"],[R[824]],[R[1095]]],[R[0]]]],[11,R[1101],E,E,8,[[["self"],[R[824]],["u64"]],[[R[1095]],[R[0],[R[1095]]]]]],[11,"add_top_level_struct_mapping",E,E,8,[[["self"],[R[778]],[R[823]]],[R[0]]]],[11,"add_struct_field_mapping",E,E,8,[[["self"],[R[778]],[R[823]]],[R[0]]]],[11,"get_struct_field_name",E,E,8,[[["self"],[R[778]],[R[684]]],[R[24]]]],[11,"add_struct_type_parameter_mapping",E,E,8,[[["self"],[R[778]],[R[1095]]],[R[0]]]],[11,"get_struct_type_parameter_name",E,E,8,[[["self"],[R[778]],["usize"]],[[R[1095]],[R[0],[R[1095]]]]]],[11,"get_function_source_map",E,E,8,[[["self"],[R[824]]],[[R[0],[R[1102]]],[R[1102]]]]],[11,"get_struct_source_map",E,E,8,[[["self"],[R[778]]],[[R[0],[R[1103]]],[R[1103]]]]],[11,"dummy_from_module",E,"Create a 'dummy' source map for a compiled module. This is…",8,[[[R[750]]],[R[0]]]],[11,"dummy_from_script",E,E,8,[[[R[757]]],[R[0]]]],[0,"utils",R[1089],E,N,N],[5,"module_source_map_from_file","bytecode_source_map::utils",E,N,[[["path"]],[[R[1090]],[R[0],[R[1090]]]]]],[5,"source_map_from_file",E,E,N,[[["path"]],[[R[0],["sourcemap"]],["sourcemap"]]]],[5,"render_errors",E,E,N,[[["errors"],[R[1104]]],[R[0]]]],[5,"create_diagnostic",E,E,N,[[["error"]],["diagnostic"]]],[6,"Error",E,E,N,N],[6,"Errors",E,E,N,N],[11,"into",R[1105],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[1106],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[1107],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[172],E,E,3,[[]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[172],E,E,5,[[]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],R[1108],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[169],E,E,6,[[["self"]],[R[149]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,R[169],E,E,7,[[["self"]],[R[149]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,R[169],E,E,8,[[["self"]],[R[149]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[75],R[1105],E,0,[[],[R[1109]]]],[11,R[75],R[1107],E,3,[[],["functionmarking"]]],[11,R[75],E,E,4,[[],["structmarking"]]],[11,R[75],E,E,5,[[],[R[1110]]]],[11,"clone",R[1108],E,6,[[["self"]],[R[1103]]]],[11,"clone",E,E,7,[[["self"]],[R[1102]]]],[11,"clone",E,E,8,[[["self"]],[R[1090]]]],[11,"fmt",R[1105],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1106],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1107],E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1108],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,R[142],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,7,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,8,[[["self"],["__s"]],[R[0]]]],[11,R[193],E,E,6,[[["__d"]],[R[0]]]],[11,R[193],E,E,7,[[["__d"]],[R[0]]]],[11,R[193],E,E,8,[[["__d"]],[R[0]]]]],"p":[[3,R[1111]],[3,R[1112]],[3,R[1113]],[3,R[1114]],[3,R[1115]],[3,R[1116]],[3,R[1117]],[3,R[1118]],[3,R[1119]]]};
searchIndex["bytecode_to_boogie"]={"doc":R[1940],"i":[[0,R[1941],"bytecode_to_boogie",R[1942],N,N],[0,"translator",E,R[1943],N,N],[3,R[1361],"bytecode_to_boogie::translator",E,N,N],[12,"modules",E,E,0,N],[12,"source_maps",E,E,0,N],[12,R[732],E,E,0,N],[12,R[1944],E,E,0,N],[12,R[1945],E,E,0,N],[3,R[1362],E,E,N,N],[12,"module",E,E,1,N],[12,R[1360],E,E,1,N],[12,R[1363],E,E,1,N],[12,R[1946],E,E,1,N],[5,R[1947],E,E,N,[[[R[1035]],[R[686]]],[R[58]]]],[5,R[1948],E,E,N,[[[R[1035]],[R[755]]],[R[58]]]],[5,R[1949],E,E,N,[[[R[755]]],[R[58]]]],[5,R[1950],E,E,N,[[[R[1035]],["usize"]],[[R[58]],[R[310],[R[58]]]]]],[11,"new",E,E,0,[[],["self"]]],[11,R[1393],E,E,0,[[["self"]],[R[58]]]],[11,"generate_local_names",E,E,0,[[["self"]],[R[58]]]],[11,R[1951],E,E,0,[[["self"]],[R[58]]]],[11,"new",E,E,1,[[[R[1090]],[R[1035]]],["self"]]],[11,R[1393],E,E,1,[[["self"]],[R[58]]]],[11,R[1952],E,E,1,[[["self"],["usize"]],[R[58]]]],[11,R[1953],E,E,1,[[["self"],["usize"],[R[24]],[R[1352]]]]],[11,R[1954],E,E,1,[[["self"],["usize"],[R[24]],["bool"]],[R[58]]]],[11,"generate_verify_function_body",E,E,1,[[["self"],[R[24]],["usize"]],[R[58]]]],[11,"generate_inline_function_body",E,E,1,[[["self"],[R[24]],["usize"]],[R[58]]]],[11,R[1101],E,E,1,[[["self"],[R[24]],["usize"]],[R[58]]]],[11,R[1955],E,E,1,[[["self"],[R[24]],["usize"]],[R[58]]]],[11,"get_orig_arg_name",E,E,1,[[["self"],["usize"]],[R[58]]]],[11,"get_line_number",E,E,1,[[["self"],["usize"]],["usize"]]],[11,"dbg_args_enabled",E,E,1,[[["self"],["str"]],["bool"]]],[11,"dbg_branches_enabled",E,E,1,[[["self"],["str"]],["bool"]]],[11,R[1956],E,E,1,[[["self"],[R[778]]],[R[58]]]],[11,R[1957],E,E,1,[[["self"],[R[684]]],[R[58]]]],[11,R[1958],E,E,1,[[["self"],["usize"]],[R[755]]]],[11,R[1959],E,E,1,[[["self"],["usize"]],["bool"]]],[11,R[1960],E,E,1,[[["self"],["usize"]],["bool"]]],[11,R[1961],E,E,1,[[["self"],[R[755]]],[R[58]]]],[11,R[1962],E,E,1,[[["self"],[R[58]],[R[755]]],[R[58]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1963],E,E,0,[[["self"]],[R[58]]]],[11,R[1964],E,E,0,[[["self"],[R[1035]],["usize"]],[R[58]]]]],"p":[[3,R[1361]],[3,R[1362]]]};
searchIndex["bytecode_verifier"]={"doc":"Verifies bytecode sanity.","i":[[0,"absint",R[1028],E,N,N],[3,R[1068],R[1036],E,N,N],[4,"JoinResult",E,E,N,N],[13,"Unchanged",E,E,0,N],[13,"Changed",E,E,0,N],[13,"Error",E,E,0,N],[4,R[1063],E,E,N,N],[13,"State",E,E,1,N],[13,"JoinFailure",E,"joining postconditions of previous blocks ended in failure",1,N],[4,R[1064],E,E,N,N],[13,"Success",E,"Analyzing block was successful",2,N],[13,"Error",E,"Analyzing block ended in an error",2,N],[6,"InvariantMap",E,"A map from block id's to the pre/post of each block after…",N,N],[8,R[1065],E,"Trait for finite-height abstract domains. Infinite height…",N,N],[10,"join",E,E,3,[[["self"],["self"]],["joinresult"]]],[8,R[1066],E,"Take a pre-state + instruction and mutate it to produce a…",N,N],[16,"State",E,E,4,N],[16,"AnalysisError",E,E,4,N],[10,"execute",E,"Execute local@instr found at index local@index in the…",4,[[["self"],[R[764]],["usize"]],[R[0]]]],[8,R[1067],E,E,N,N],[11,"analyze_function",E,"Analyze procedure local@function_view starting from…",5,[[["self"],[R[1027]],[R[776]]],["invariantmap"]]],[11,R[1674],E,E,5,[[["self"],[R[1027]],["blockid"],[R[776]]],[R[0]]]],[11,"pre",E,E,6,[[["self"]],[R[1057]]]],[11,"post",E,E,6,[[["self"]],[R[1058]]]],[0,R[1966],R[1028],"This module defines the abstract state for the type and…",N,N],[3,R[1069],R[1037],E,N,N],[12,R[412],E,E,7,N],[12,"value",E,E,7,N],[3,R[1071],E,"AbstractState is the analysis state over which abstract…",N,N],[4,R[1070],E,"AbstractValue represents a value either on the evaluation…",N,N],[13,R[682],E,E,8,N],[13,"Value",E,E,8,N],[4,"LabelElem",E,"LabelElem is an element of a label on an edge in the…",N,N],[13,"Local",E,E,9,N],[13,"Global",E,E,9,N],[13,"Field",E,E,9,N],[11,R[791],E,"checks if self is a reference",8,[[["self"]],["bool"]]],[11,"is_value",E,"checks if self is a value",8,[[["self"]],["bool"]]],[11,"is_unrestricted_value",E,"checks if self is a non-resource value",8,[[["self"]],["bool"]]],[11,"extract_nonce",E,"possibly extracts nonce from self",8,[[["self"]],[[R[24],["nonce"]],["nonce"]]]],[11,"new",E,"create a new abstract state",10,[[[R[776],[R[750]]],[R[750]]],["self"]]],[11,"is_available",E,"checks if local@idx is available",10,[[["self"],[R[1029]]],["bool"]]],[11,"local",E,"returns local@idx",10,[[["self"],[R[1029]]],[R[1030]]]],[11,"remove_local",E,"removes local@idx",10,[[["self"],[R[1029]]],[R[1030]]]],[11,"insert_local",E,"inserts local@idx",10,[[["self"],[R[1030]],[R[1029]]]]],[11,"is_local_safe_to_destroy",E,"checks if a local may be safely destroyed",10,[[["self"],[R[1029]]],["bool"]]],[11,"is_frame_safe_to_destroy",E,"checks if the stack frame of the function being analyzed…",10,[[["self"]],["bool"]]],[11,"destroy_local",E,"destroys local@idx",10,[[["self"],[R[1029]]]]],[11,"add_nonce",E,"adds new nonce to borrow graph",10,[[["self"]],["nonce"]]],[11,R[1031],E,"removes `nonce` from borrow graph",10,[[["self"],["nonce"]]]],[11,"is_nonce_borrowed",E,"checks if `nonce` is borrowed",10,[[["self"],["nonce"]],["bool"]]],[11,"is_local_borrowed",E,"checks if a local is borrowed",10,[[["self"],[R[1029]]],["bool"]]],[11,"is_global_borrowed",E,"checks if a global is borrowed",10,[[["self"],[R[778]]],["bool"]]],[11,"is_nonce_freezable",E,"checks if `nonce` is freezable",10,[[["self"],["nonce"]],["bool"]]],[11,"borrow_global_value",E,"update self to reflect a borrow of a value global@idx by…",10,[[["self"],[R[778]],["bool"]],[[R[24],["nonce"]],["nonce"]]]],[11,"borrow_field_from_nonce",E,"update self to reflect a borrow of field@idx from nonce by…",10,[[["self"],[R[684]],[R[1030]],["bool"]],[[R[24],["nonce"]],["nonce"]]]],[11,"borrow_local_value",E,"update self to reflect a borrow of a value local@idx by…",10,[[["self"],[R[1029]],["bool"]],[[R[24],["nonce"]],["nonce"]]]],[11,"borrow_from_local_reference",E,"update self to reflect a borrow of a reference local@idx…",10,[[["self"],[R[1029]]],["nonce"]]],[11,"borrow_from_nonces",E,"update self to reflect a borrow from each nonce in…",10,[[["self"],[R[1384]]],["nonce"]]],[11,"construct_canonical_state",E,"returns the canonical representation of self",10,[[["self"]],["self"]]],[0,"acquires_list_verifier",R[1028],"This module implements a checker for verifying properties…",N,N],[3,R[1072],R[1039],E,N,N],[11,"verify",E,E,11,[[[R[716]],[R[750]]],[["vec",[R[493]]],[R[493]]]]],[0,R[1968],R[1028],"This module defines the (acyclic) borrow graph for the…",N,N],[3,"Edge",R[1040],"A labeled edge in borrow graph",N,N],[3,R[1073],E,"A borrow graph is represented as a map from a source nonce…",N,N],[6,"Label",E,"The label on an edge",N,N],[11,"is_prefix",E,E,12,[[["self"],["edge"]],["bool"]]],[11,"new",E,"creates a new empty borrow graph",13,[[],["self"]]],[11,"add_nonce",E,"adds a fresh nonce",13,[[["self"],["nonce"]]]],[11,"add_weak_edge",E,"adds a weak edge",13,[[["self"],["label"],["nonce"]]]],[11,"add_strong_edge",E,"adds a strong edge and factors other edges coming out of…",13,[[["self"],["label"],["nonce"]]]],[11,R[1031],E,"removes `nonce` and appropriately concatenates each…",13,[[["self"],["nonce"]]]],[11,"rename_nonces",E,"renames nonces in `self` according to `nonce_map`",13,[[["self"],[R[310],["nonce","nonce"]],["nonce"]],["self"]]],[11,"abstracts",E,"checks if `self` covers `other`",13,[[["self"]],["bool"]]],[11,"join",E,"joins `other` into `self`",13,[[["self"],["self"]]]],[11,"all_borrows",E,R[1032],13,[[["self"],["nonce"]],[[R[1384],["nonce"]],["nonce"]]]],[11,"nil_borrows",E,R[1032],13,[[["self"],["nonce"]],[[R[1384],["nonce"]],["nonce"]]]],[11,"consistent_borrows",E,R[1032],13,[[["self"],["nonce"],[T]],[[R[1384],["nonce"]],["nonce"]]]],[0,"check_duplication",R[1028],"This module implements a checker for verifying that each…",N,N],[3,R[1074],R[1041],E,N,N],[11,"new",E,E,14,[[[R[750]]],["self"]]],[11,"verify",E,E,14,[[],[["vec",[R[493]]],[R[493]]]]],[0,"code_unit_verifier",R[1028],"This module implements the checker for verifying…",N,N],[3,R[1075],R[1042],E,N,N],[11,"verify",E,E,15,[[[R[750]]],[["vec",[R[493]]],[R[493]]]]],[0,R[1971],R[1028],"This module defines the control-flow graph uses for…",N,N],[3,R[1077],R[1043],"The control flow graph that we build from the bytecode.",N,N],[6,"BlockId",E,E,N,N],[8,R[1076],E,"A trait that specifies the basic requirements for a CFG",N,N],[10,R[1053],E,"Start index of the block ID in the bytecode vector",16,[[["self"],["blockid"]],[R[756]]]],[10,"block_end",E,"End index of the block ID in the bytecode vector",16,[[["self"],["blockid"]],[R[756]]]],[10,R[1381],E,"Successors of the block ID in the bytecode vector",16,[[["self"],["blockid"]],["vec"]]],[10,R[1054],E,"Iterator over the indexes of instructions in this block",16,[[["self"],["blockid"]],[["box",["iterator"]],["iterator"]]]],[10,"blocks",E,"Return an iterator over the blocks of the CFG",16,[[["self"]],[["vec",["blockid"]],["blockid"]]]],[10,R[1385],E,"Return the number of blocks (vertices) in the control flow…",16,[[["self"]],["u16"]]],[10,R[1055],E,"Return the id of the entry block for this control-flow…",16,[[["self"]],["blockid"]]],[11,"new",E,E,17,[[],["self"]]],[11,"display",E,E,17,[[["self"]]]],[11,"reachable_from",E,E,17,[[["self"],["blockid"]],[["vec",["blockid"]],["blockid"]]]],[0,"instantiation_loops",R[1028],"This implements an algorithm that detects loops during the…",N,N],[3,R[1078],R[1044],E,N,N],[11,"new",E,E,18,[[[R[750]]],["self"]]],[11,"verify",E,E,18,[[],[["vec",[R[493]]],[R[493]]]]],[0,"nonce",R[1028],"This module implements the Nonce type used for borrow…",N,N],[3,"Nonce",R[1045],E,N,N],[11,"new",E,E,19,[[["usize"]],["self"]]],[11,"is",E,E,19,[[["self"],["usize"]],["bool"]]],[11,"inner",E,E,19,[[["self"]],["usize"]]],[0,"resources",R[1028],"This module implements a checker for verifying that a…",N,N],[3,R[1079],R[1046],E,N,N],[11,"new",E,E,20,[[[R[750]]],["self"]]],[11,"verify",E,E,20,[[],[["vec",[R[493]]],[R[493]]]]],[0,R[412],R[1028],"This module implements a checker for verifying signature…",N,N],[3,R[1080],R[1047],E,N,N],[11,"new",E,E,21,[[[R[750]]],["self"]]],[11,"verify",E,E,21,[[],[["vec",[R[493]]],[R[493]]]]],[0,"stack_usage_verifier",R[1028],"This module implements a checker for verifying that basic…",N,N],[3,R[1081],R[1048],E,N,N],[11,"verify",E,E,22,[[[R[716]],[R[750]],[R[1033]]],[["vec",[R[493]]],[R[493]]]]],[0,R[732],R[1028],"This module provides a checker for verifing that struct…",N,N],[3,R[1082],R[1049],E,N,N],[3,R[1083],E,"Given a module, build a graph of struct definitions. This…",N,N],[11,"new",E,E,23,[[[R[750]]],["self"]]],[11,"verify",E,E,23,[[],[["vec",[R[493]]],[R[493]]]]],[11,"new",E,E,24,[[[R[750]]],["self"]]],[11,"build",E,E,24,[[],[["u32"],[R[778]],["directed"],["graph",[R[778],"directed","u32"]]]]],[0,"type_memory_safety",R[1028],"This module defines the transfer functions for verifying…",N,N],[3,R[1084],R[1050],E,N,N],[11,"verify",E,E,25,[[[R[716]],[R[750]],[R[1033]]],[["vec",[R[493]]],[R[493]]]]],[0,"unused_entries",R[1028],E,N,N],[3,R[1085],R[1051],E,N,N],[11,"new",E,E,26,[[[R[750]]],["self"]]],[11,"verify",E,E,26,[[],[["vec",[R[493]]],[R[493]]]]],[0,"verifier",R[1028],"This module contains the public APIs supported by the…",N,N],[3,R[1086],R[1052],"A program that has been verified for internal consistency.",N,N],[3,R[1087],E,"A module that has been verified for internal consistency.",N,N],[3,R[1088],E,"A script that has been verified for internal consistency.",N,N],[5,"verify_main_signature",E,"This function checks the extra requirements on the…",N,[[[R[757]]],[["vec",[R[493]]],[R[493]]]]],[5,"verify_module_dependencies",E,"Verification of a module in isolation (using…",N,[[[R[1035]]],[["vec",[R[493]]],[R[493]]]]],[5,"verify_script_dependencies",E,"Verifying the dependencies of a script follows the same…",N,[[[R[1034]]],[["vec",[R[493]]],[R[493]]]]],[11,"new",E,"Creates a new `VerifiedProgram` after verifying the…",27,[[[R[829]]],[["vec",[R[493]]],[R[0],["vec"]]]]],[11,"script",E,"Returns a reference to the script.",27,[[["self"]],[R[1034]]]],[11,"modules",E,"Returns a reference to the modules in this program.",27,[[["self"]]]],[11,"deps",E,"Returns the dependencies this program was verified against.",27,[[["self"]]]],[11,R[280],E,"Converts this `VerifiedProgram` into a `CompiledProgram`…",27,[[],[R[829]]]],[11,"new",E,"Verifies this `CompiledModule`, returning a…",28,[[[R[750]]],[R[0]]]],[11,R[142],E,"Serializes this module into the provided buffer.",28,[[["self"],["vec"]],[["error"],[R[0],["error"]]]]],[11,R[618],E,"Returns a reference to the `CompiledModule` within.",28,[[["self"]],[R[750]]]],[11,R[280],E,"Returns the `CompiledModule` within. Conversion back to…",28,[[],[R[750]]]],[11,"new",E,"Verifies this `CompiledScript`, returning a…",29,[[[R[757]]],[R[0]]]],[11,R[759],E,"Returns the corresponding `VerifiedModule` for this script.",29,[[],[R[1035]]]],[11,R[142],E,"Serializes this script into the provided buffer.",29,[[["self"],["vec"]],[["error"],[R[0],["error"]]]]],[11,R[618],E,"Returns a reference to the `CompiledScript` within.",29,[[["self"]],[R[757]]]],[11,R[280],E,"Returns the `CompiledScript` within. Conversion back to…",29,[[],[R[757]]]],[11,R[13],R[1036],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],R[1037],E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[1038],E,E,7,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[172],E,E,10,[[]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[1038],E,E,10,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[1038],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[172],E,E,9,[[]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[1038],E,E,9,[[["self"],["k"]],["bool"]]],[11,"into",R[1039],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],R[1040],E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[172],E,E,13,[[]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[1038],E,E,13,[[["self"],["k"]],["bool"]]],[11,"into",R[1041],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",R[1042],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",R[1043],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",R[1044],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],R[1045],E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"clear",E,E,19,[[["self"]]]],[11,R[172],E,E,19,[[]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[1038],E,E,19,[[["self"],["k"]],["bool"]]],[11,"into",R[1046],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",R[1047],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",R[1048],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",R[1049],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",R[1050],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",R[1051],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],R[1052],E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[57],E,E,27,[[["self"]],[R[58]]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[1038],E,E,27,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[57],E,E,28,[[["self"]],[R[58]]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[1038],E,E,28,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[57],E,E,29,[[["self"]],[R[58]]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[1038],E,E,29,[[["self"],["k"]],["bool"]]],[11,"join",R[1037],"attempts to join state to self and returns the result",10,[[["self"],[R[1056]]],["joinresult"]]],[11,"execute",R[1050],E,25,[[["self"],[R[764]],["usize"]],[R[0]]]],[11,R[1053],R[1043],E,17,[[["self"],["blockid"]],[R[756]]]],[11,"block_end",E,E,17,[[["self"],["blockid"]],[R[756]]]],[11,R[1381],E,E,17,[[["self"],["blockid"]],["vec"]]],[11,"blocks",E,E,17,[[["self"]],[["vec",["blockid"]],["blockid"]]]],[11,R[1054],E,E,17,[[["self"],["blockid"]],[["box",["iterator"]],["iterator"]]]],[11,R[1385],E,E,17,[[["self"]],["u16"]]],[11,R[1055],E,E,17,[[["self"]],["blockid"]]],[11,R[75],R[1037],E,9,[[],["self"]]],[11,R[75],E,E,10,[[],[R[1056]]]],[11,R[75],R[1040],E,13,[[],[R[1059]]]],[11,R[75],R[1045],E,19,[[],["nonce"]]],[11,"clone",R[1036],E,1,[[["self"]],[R[1057]]]],[11,"clone",E,E,2,[[["self"]],[R[1058]]]],[11,"clone",E,E,6,[[["self"]],["blockinvariant"]]],[11,"clone",R[1037],E,7,[[["self"]],[R[1030]]]],[11,"clone",E,E,8,[[["self"]],[R[1061]]]],[11,"clone",E,E,9,[[["self"]],[R[1060]]]],[11,"clone",E,E,10,[[["self"]],[R[1056]]]],[11,"clone",R[1040],E,12,[[["self"]],["edge"]]],[11,"clone",E,E,13,[[["self"]],[R[1059]]]],[11,"clone",R[1045],E,19,[[["self"]],["nonce"]]],[11,"clone",R[1052],E,27,[[["self"]],[R[1062]]]],[11,"clone",E,E,28,[[["self"]],[R[1035]]]],[11,"clone",E,E,29,[[["self"]],[R[1034]]]],[11,R[247],R[1037],E,9,[[["self"],[R[1060]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,9,[[["self"],[R[1060]]],["bool"]]],[11,"le",E,E,9,[[["self"],[R[1060]]],["bool"]]],[11,"gt",E,E,9,[[["self"],[R[1060]]],["bool"]]],[11,"ge",E,E,9,[[["self"],[R[1060]]],["bool"]]],[11,R[247],R[1040],E,12,[[["self"],["edge"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,12,[[["self"],["edge"]],["bool"]]],[11,"le",E,E,12,[[["self"],["edge"]],["bool"]]],[11,"gt",E,E,12,[[["self"],["edge"]],["bool"]]],[11,"ge",E,E,12,[[["self"],["edge"]],["bool"]]],[11,R[247],E,E,13,[[["self"],[R[1059]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,13,[[["self"],[R[1059]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[1059]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[1059]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[1059]]],["bool"]]],[11,R[247],R[1045],E,19,[[["self"],["nonce"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,19,[[["self"],["nonce"]],["bool"]]],[11,"le",E,E,19,[[["self"],["nonce"]],["bool"]]],[11,"gt",E,E,19,[[["self"],["nonce"]],["bool"]]],[11,"ge",E,E,19,[[["self"],["nonce"]],["bool"]]],[11,"eq",R[1037],E,7,[[["self"],[R[1030]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[1030]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[1061]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[1061]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1060]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1060]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1056]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1056]]],["bool"]]],[11,"eq",R[1040],E,12,[[["self"],["edge"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["edge"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1059]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1059]]],["bool"]]],[11,"eq",R[1045],E,19,[[["self"],["nonce"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["nonce"]],["bool"]]],[11,"eq",R[1052],E,27,[[["self"],[R[1062]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[1062]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[1035]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[1035]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[1034]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[1034]]],["bool"]]],[11,"cmp",R[1037],E,9,[[["self"],[R[1060]]],[R[32]]]],[11,"cmp",R[1040],E,12,[[["self"],["edge"]],[R[32]]]],[11,"cmp",E,E,13,[[["self"],[R[1059]]],[R[32]]]],[11,"cmp",R[1045],E,19,[[["self"],["nonce"]],[R[32]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"fmt",R[1036],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1037],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1040],E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1045],E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1052],E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,R[810],E,E,28,[[["self"]],[R[750]]]],[11,R[811],E,E,29,[[["self"]],[R[757]]]]],"p":[[4,"JoinResult"],[4,R[1063]],[4,R[1064]],[8,R[1065]],[8,R[1066]],[8,R[1067]],[3,R[1068]],[3,R[1069]],[4,R[1070]],[4,"LabelElem"],[3,R[1071]],[3,R[1072]],[3,"Edge"],[3,R[1073]],[3,R[1074]],[3,R[1075]],[8,R[1076]],[3,R[1077]],[3,R[1078]],[3,"Nonce"],[3,R[1079]],[3,R[1080]],[3,R[1081]],[3,R[1082]],[3,R[1083]],[3,R[1084]],[3,R[1085]],[3,R[1086]],[3,R[1087]],[3,R[1088]]]};
searchIndex["bytecode_verifier_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["channel"]={"doc":"Provides an mpsc (multi-producer single-consumer) channel…","i":[[3,R[1600],"channel","Wrapper around a value with an entry timestamp It is used…",N,N],[3,"Sender",E,"Similar to `mpsc::Sender`, but with an `IntGauge`",N,N],[3,"Receiver",E,"Similar to `mpsc::Receiver`, but with an `IntGauge`",N,N],[3,R[1601],E,E,N,N],[5,"new",E,"Similar to `mpsc::channel`, `new` creates a pair of…",N,[[["usize"],["intgauge"]]]],[5,"new_with_timeout",E,E,N,[[[R[410]],["usize"],["intgauge"]]]],[5,"new_test",E,E,N,[[["usize"]]]],[5,"new_test_with_timeout",E,E,N,[[["usize"],[R[410]]]]],[0,"libra_channel",E,"libra_channel provides an mpsc channel which has two ends…",N,N],[3,"Sender",R[1597],"The sending end of the libra_channel.",N,N],[3,"Receiver",E,"The receiving end of the libra_channel.",N,N],[5,"new",E,"Create a new Libra Channel and returns the two ends of the…",N,[[["counters"],[R[24],["counters"]],["usize"],["queuestyle"]]]],[11,"push",E,"This adds the message into the internal queue data…",0,[[["self"],["m"],["k"]],[R[0]]]],[11,"clear",E,"Removes all the previously sent transactions that have not…",1,[[["self"]]]],[0,"message_queues","channel",E,N,N],[3,"Counters",R[1598],E,N,N],[12,"dropped_msgs_counter",E,E,2,N],[12,"enqueued_msgs_counter",E,E,2,N],[12,"dequeued_msgs_counter",E,E,2,N],[4,"QueueStyle",E,"QueueStyle is an enum which can be used as a configuration…",N,N],[13,"LIFO",E,E,3,N],[13,"FIFO",E,E,3,N],[11,"try_send","channel",E,4,[[["self"],[T]],[["senderror"],[R[0],["senderror"]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[89],E,E,6,[[["pin"],["s"],[R[25]]],[[R[24],[R[0]]],["poll",[R[24]]]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"into",R[1597],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[89],E,E,1,[[["pin"],["s"],[R[25]]],[[R[24],[R[0]]],["poll",[R[24]]]]]],[11,"into",R[1598],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"drop",R[1597],E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"clone",R[1598],E,3,[[["self"]],["queuestyle"]]],[11,"clone","channel",E,4,[[["self"]],["self"]]],[11,"deref",E,E,7,[[["self"]],["intgauge"]]],[11,"poll_ready",E,E,4,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,"start_send",E,E,4,[[["pin"],["self"],[T]],[R[0]]]],[11,R[103],E,E,4,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[104],E,E,4,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[101],R[1597],"poll_next checks whether there is something ready for…",1,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[101],"channel",E,6,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[1599],R[1597],E,1,[[["self"]],["bool"]]],[11,R[1599],"channel",E,6,[[["self"]],["bool"]]],[11,R[172],E,E,7,[[["self"]]]]],"p":[[3,"Sender"],[3,"Receiver"],[3,"Counters"],[4,"QueueStyle"],[3,"Sender"],[3,R[1600]],[3,"Receiver"],[3,R[1601]]]};
searchIndex["client"]={"doc":"Libra Client","i":[[17,R[1619],"client",R[1620],N,N],[17,R[1621],E,R[1622],N,N],[17,R[1623],E,R[1624],N,N],[3,R[196],E,R[1616],N,N],[3,R[197],E,R[581],N,N],[3,R[198],E,R[582],N,N],[0,R[36],E,R[162],N,N],[5,R[163],"client::compat",R[164],N,[[[T]]]],[5,R[165],E,R[166],N,[[]]],[5,R[1617],E,R[1618],N,[[]]],[3,"KeyPair","client",R[1631],N,N],[12,R[1632],E,R[1633],0,N],[12,R[168],E,R[1634],0,N],[8,R[207],E,R[1626],N,N],[11,R[1627],E,R[1628],1,[[["str"]],[[R[147]],[R[0],[R[147]]]]]],[11,R[1629],E,R[1630],1,[[["self"]],[[R[58]],["error"],[R[0],[R[58],"error"]]]]],[3,R[520],E,R[1636],N,N],[3,R[552],E,R[1639],N,N],[4,R[403],E,E,N,N],[13,"U64",E,E,2,N],[13,R[739],E,E,2,N],[13,"String",E,E,2,N],[13,R[305],E,E,2,N],[13,"Bool",E,E,2,N],[4,R[549],E,E,N,N],[13,"Program",E,R[1640],3,N],[13,R[446],E,E,3,N],[13,"Script",E,R[1641],3,N],[13,"Module",E,R[1642],3,N],[8,R[199],E,R[583],N,N],[16,"Hasher",E,R[584],4,N],[10,"hash",E,R[585],4,[[["self"]],[R[149]]]],[3,R[1609],E,"Struct used to store data for each created account. We…",N,N],[12,R[333],E,R[1602],5,N],[12,"key_pair",E,"(private_key, public_key) pair if the account is not…",5,N],[12,R[281],E,"Latest sequence number maintained by client, it can be…",5,N],[12,"status",E,"Whether the account is initialized on chain, cached local…",5,N],[4,R[1610],E,"Enum used to represent account status.",N,N],[13,"Local",E,"Account exists only in local cache, it is not persisted on…",6,N],[13,"Persisted",E,"Account is persisted on chain.",6,N],[13,"Unknown",E,"Not able to check account status, probably because client…",6,N],[0,"client_proxy",E,"Main instance of client holding corresponding information,…",N,N],[3,R[1611],R[1607],"Account data is stored in a map and referenced by an index.",N,N],[12,R[333],E,R[1602],7,N],[12,"index",E,"The account_ref_id of this account in client.",7,N],[3,R[1612],E,"Used to return the sequence and sender account index…",N,N],[12,"account_index",E,"Index/key of the account in TestClient::accounts vector.",8,N],[12,R[281],E,"Sequence number of the account.",8,N],[3,R[1613],E,"Proxy handling CLI commands/inputs.",N,N],[12,"client",E,"client for admission control interface.",9,N],[12,"accounts",E,"Created accounts.",9,N],[12,"faucet_account",E,"Account used for mint operations.",9,N],[4,R[1614],E,"Account is represented either as an entry into accounts…",N,N],[13,"Index",E,"Index into client.accounts",10,N],[13,R[739],E,"Address of the account",10,N],[11,"new",E,"Construct a new TestClient.",9,[[[R[24],[R[58]]],["u16"],[R[58]],["str"],["bool"]],[R[0]]]],[11,"create_next_account",E,"Returns the account index that should be used by user to…",9,[[["self"],["bool"]],[[R[1603]],[R[0],[R[1603]]]]]],[11,"print_all_accounts",E,"Print index and address of all accounts.",9,[[["self"]]]],[11,"copy_all_accounts",E,"Clone all accounts held in the client.",9,[[["self"]],[["vec",[R[1604]]],[R[1604]]]]],[11,"set_accounts",E,"Set the account of this client instance.",9,[[["self"],["vec",[R[1604]]],[R[1604]]],[[R[1603]],["vec",[R[1603]]]]]],[11,"get_balance",E,"Get balance from validator for the account specified.",9,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[11,"get_sequence_number",E,"Get the latest sequence number from validator for the…",9,[[["self"]],[[R[0],["u64"]],["u64"]]]],[11,"mint_coins",E,"Mints coins for the receiver specified.",9,[[["self"],["bool"]],[R[0]]]],[11,"wait_for_transaction",E,"Waits for the next transaction for a specific address and…",9,[[["self"],[R[265]],["u64"]]]],[11,"transfer_coins_int",E,"Transfer num_coins from sender account to receiver. If…",9,[[["self"],["bool"],["usize"],[R[24],["u64"]],["u64"],[R[265]]],[[R[0],[R[1605]]],[R[1605]]]]],[11,"prepare_transfer_coins",E,"Prepare a transfer transaction: return the unsigned raw…",9,[[["self"],[R[24],["u64"]],[R[265]],["u64"]],[[R[407]],[R[0],[R[407]]]]]],[11,"transfer_coins",E,"Transfers coins from sender to receiver.",9,[[["self"],["bool"]],[[R[0],[R[1605]]],[R[1605]]]]],[11,R[1615],E,"Compile move program",9,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[11,"submit_signed_transaction",E,"Submit a transaction to the network given the unsigned raw…",9,[[["self"],[R[407]],[R[185]],[R[181]]],[R[0]]]],[11,"publish_module",E,"Publish move module",9,[[["self"]],[R[0]]]],[11,"execute_script",E,"Execute custom script",9,[[["self"]],[R[0]]]],[11,"get_latest_account_state",E,"Get the latest account state from validator.",9,[[["self"]],[R[0]]]],[11,"get_committed_txn_by_acc_seq",E,"Get committed txn by account and sequence number.",9,[[["self"]],[[R[24]],[R[0],[R[24]]]]]],[11,"get_committed_txn_by_range",E,"Get committed txn by account and sequence number",9,[[["self"]],[[R[0],["vec"]],["vec"]]]],[11,"get_account_address_from_parameter",E,"Get account address from parameter. If the parameter is…",9,[[["self"],["str"]],[[R[0],[R[265]]],[R[265]]]]],[11,"get_events_by_account_and_type",E,"Get events by account and event type with start sequence…",9,[[["self"]],[R[0]]]],[11,R[586],E,"Write mnemonic recover to the file specified.",9,[[["self"]],[R[0]]]],[11,"recover_wallet_accounts",E,"Recover wallet accounts from file and return…",9,[[["self"]],[[R[0],["vec"]],["vec",[R[1603]]]]]],[11,"insert_account_data",E,"Insert the account data to Client::accounts and return its…",9,[[["self"],[R[1604]]],[R[1603]]]],[11,"test_validator_connection",E,"Test gRPC client connection with validator.",9,[[["self"]],[R[0]]]],[11,"convert_to_micro_libras",E,"convert number of Libras (main unit) given as string to…",9,[[["str"]],[[R[0],["u64"]],["u64"]]]],[0,"commands","client","Command struct to interact with client.",N,N],[5,"report_error","client::commands","Print the error and bump up error counter.",N,[[["str"],["error"]]]],[5,"blocking_cmd",E,"Check whether a command is blocking.",N,[[["str"]],["bool"]]],[5,"debug_format_cmd",E,"Check whether a command is debugging command.",N,[[["str"]],["bool"]]],[5,"is_address",E,"Check whether the input string is a valid libra address.",N,[[["str"]],["bool"]]],[5,"get_commands",E,"Returns all the commands available, as well as the reverse…",N,[[["bool"]]]],[5,"parse_cmd",E,"Parse a cmd string, the first element in the returned…",N,[[["str"]],[["vec",["str"]],["str"]]]],[5,"print_subcommand_help",E,"Print the help message for all sub commands.",N,[[["str"]]]],[5,"subcommand_execute",E,"Execute sub command.",N,[[["vec",["box"]],["box",["command"]],["str"],[R[1606]]]]],[8,"Command",E,"Trait to perform client operations.",N,N],[10,"get_aliases",E,"all commands and aliases this command support.",11,[[["self"]],[["vec",["str"]],["str"]]]],[11,"get_params_help",E,"string that describes params.",11,[[["self"]],["str"]]],[10,"get_description",E,"string that describes what the command does.",11,[[["self"]],["str"]]],[10,"execute",E,"code to execute.",11,[[["self"],[R[1606]]]]],[11,"keypair_as_string","client","Serialize account keypair if exists.",5,[[["self"]],[R[24]]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,R[169],E,E,12,[[["self"]],[R[149]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[58]]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,R[169],E,E,13,[[["self"]],[R[149]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[1038],E,E,13,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[1038],E,E,13,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,R[169],E,E,14,[[["self"]],[R[149]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[1038],E,E,14,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[1038],E,E,14,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[169],E,E,0,[[["self"]],[R[149]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[57],E,E,15,[[["self"]],[R[58]]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[172],E,E,15,[[]]],[11,R[169],E,E,15,[[["self"]],[R[149]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[451],E,E,15,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[452],E,E,15,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[453],E,R[454],15,[[["self"]],[["u5"],["vec",["u5"]]]]],[11,R[455],E,E,15,[[],[["vec",["u5"]],[R[0],["vec"]]]]],[11,R[1038],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[2],E,E,15,[[["str"]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[1038],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,R[169],E,E,16,[[["self"]],[R[149]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[1038],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[1038],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[169],E,E,2,[[["self"]],[R[149]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[1038],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[1038],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,R[169],E,E,3,[[["self"]],[R[149]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[1038],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[1038],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[169],E,E,5,[[["self"]],[R[149]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[169],E,E,6,[[["self"]],[R[149]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,"into",R[1607],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[34],"client",E,13,[[]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"verify",E,R[591],14,[[["self"],[R[181]],[R[149]]],[["error"],[R[0],["error"]]]]],[11,R[179],E,R[592],14,[[["self"],[R[181]]],[["error"],[R[0],["error"]]]]],[11,R[144],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[161],E,R[593],14,[[["vec"],[R[149]]],[["error"],[R[0],["error"]]]]],[11,"eq",E,E,12,[[["self"],[R[192]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[248]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[248]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[185]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[181]]],["bool"]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,R[2],E,R[594],13,[[],[[R[181]],[R[147]],[R[0],[R[181],R[147]]]]]],[11,R[2],E,R[1635],12,[[],[[R[147]],[R[0],[R[192],R[147]]],[R[192]]]]],[11,R[2],E,E,14,[[],[[R[185]],[R[147]],[R[0],[R[185],R[147]]]]]],[11,R[193],E,E,14,[[["d"]],[[R[185]],[R[0],[R[185]]]]]],[11,R[193],E,E,0,[[["__d"]],[[R[0],[R[248]]],[R[248]]]]],[11,R[193],E,E,12,[[["d"]],[[R[192]],[R[0],[R[192]]]]]],[11,R[193],E,E,13,[[["d"]],[[R[181]],[R[0],[R[181]]]]]],[11,"clone",E,E,14,[[["self"]],[R[185]]]],[11,"clone",E,E,12,[[["self"]],[R[192]]]],[11,"clone",E,E,0,[[["self"]],[R[248]]]],[11,"clone",E,E,13,[[["self"]],[R[181]]]],[11,"hash",E,E,14,[[["self"],["h"]]]],[11,"hash",E,E,13,[[["self"],["h"]]]],[11,"from",E,E,13,[[[R[192]]],[R[181]]]],[11,"from",E,E,0,[[["s"]],[R[248]]]],[11,R[142],E,E,13,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,14,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,0,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,12,[[["self"],["s"]],[R[0]]]],[11,R[182],E,E,12,[[["r"]],[R[192]]]],[11,R[182],E,E,0,[[["r"]],[R[248]]]],[11,R[432],E,E,12,[[],[R[192]]]],[11,R[178],E,E,12,[[["self"],[R[149]]],[R[185]]]],[11,R[144],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[144],E,E,13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,R[34],E,E,16,[[]]],[11,R[34],E,E,2,[[]]],[11,R[34],E,E,15,[[]]],[11,R[34],E,E,3,[[]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"eq",E,E,2,[[["self"],[R[406]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[406]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[407]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[407]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[265]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[265]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[408]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[408]]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,R[2],E,E,15,[[["bech32"]],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,R[2],E,E,15,[[["bytes"]],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,R[2],E,R[511],15,[[],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,R[2],E,R[1650],15,[[["vec",["u8"]],["u8"]],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,R[2],E,E,15,[[[R[58]]],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,R[2],E,R[511],15,[[],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,"clone",E,E,3,[[["self"]],[R[408]]]],[11,"clone",E,E,16,[[["self"]],[R[407]]]],[11,"clone",E,E,15,[[["self"]],[R[265]]]],[11,"clone",E,E,2,[[["self"]],[R[406]]]],[11,R[193],E,E,15,[[["__d"]],[[R[0],[R[265]]],[R[265]]]]],[11,R[193],E,E,2,[[["__d"]],[[R[0],[R[406]]],[R[406]]]]],[11,R[193],E,E,3,[[["__d"]],[[R[408]],[R[0],[R[408]]]]]],[11,R[193],E,E,16,[[["__d"]],[[R[0],[R[407]]],[R[407]]]]],[11,R[247],E,E,15,[[["self"],[R[265]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,15,[[["self"],[R[265]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[265]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[265]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[265]]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,R[596],E,E,0,[[["self"],[R[407]]],[[R[394]],["error"],[R[0],[R[394],"error"]]]]],[11,R[75],E,E,15,[[],[R[265]]]],[11,"cmp",E,E,15,[[["self"],[R[265]]],[R[32]]]],[11,"as_ref",E,E,15,[[["self"]]]],[11,R[142],E,E,16,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,3,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,15,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[1861],E,E,15,[[["str"]],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,"hash",E,E,15,[[["self"]],[R[149]]]],[11,"hash",E,E,16,[[["self"]],[R[149]]]],[11,"clone",E,E,5,[[["self"]],[R[1604]]]],[11,"clone",E,E,6,[[["self"]],[R[1608]]]],[11,"eq",E,E,5,[[["self"],[R[1604]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1604]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1608]]],["bool"]]],[11,"fmt",R[1607],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt","client",E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1607],E,10,[[["self"],[R[17]]],[R[0]]]],[11,R[142],"client",E,5,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[193],E,E,5,[[["__d"]],[R[0]]]],[11,R[193],E,E,6,[[["__d"]],[R[0]]]],[11,R[144],E,R[1625],12,[[["self"]]]],[11,R[144],E,R[597],13,[[["self"]]]],[11,R[144],E,R[598],14,[[["self"]]]],[11,R[599],E,R[600],14,[[],[[R[147]],[R[0],[R[147]]]]]],[11,"new",E,E,15,[[],[R[265]]]],[11,"random",E,E,15,[[],[R[265]]]],[11,R[269],E,E,15,[[["self"]],[R[58]]]],[11,"to_vec",E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1637],E,E,15,[[[R[270]]],[R[265]]]],[11,R[1638],E,E,15,[[["str"]],[[R[265]],["error"],[R[0],[R[265],"error"]]]]],[11,"new",E,R[1643],16,[[[R[410]],[R[408]],["u64"],[R[265]]],[R[407]]]],[11,"new_script",E,R[1644],16,[[[R[265]],[R[410]],["script"],["u64"]],[R[407]]]],[11,"new_module",E,R[1645],16,[[["module"],[R[410]],["u64"],[R[265]]],[R[407]]]],[11,R[1646],E,E,16,[[[R[411]],["u64"],[R[265]]],[R[407]]]],[11,"sign",E,R[1647],16,[[[R[192]],[R[181]]],[[R[395]],["error"],[R[0],[R[395],"error"]]]]],[11,R[1648],E,E,16,[[],[R[408]]]],[11,R[414],E,E,16,[[["self"]],[R[58]]]],[11,"sender",E,R[1649],16,[[["self"]],[R[265]]]],[11,R[516],E,E,3,[[]]],[11,R[517],E,E,3,[[]]],[11,R[518],E,E,3,[[]]],[11,R[519],E,R[1651],3,[[]]]],"p":[[3,"KeyPair"],[8,R[207]],[4,R[403]],[4,R[549]],[8,R[199]],[3,R[1609]],[4,R[1610]],[3,R[1611]],[3,R[1612]],[3,R[1613]],[4,R[1614]],[8,"Command"],[3,R[196]],[3,R[197]],[3,R[198]],[3,R[520]],[3,R[552]]]};
searchIndex["cluster_test"]={"doc":E,"i":[[0,"aws",R[1731],E,N,N],[3,"Aws",R[1736],E,N,N],[11,"new",E,E,0,[[[R[58]]],["self"]]],[11,"ec2",E,E,0,[[["self"]],["ec2client"]]],[11,"ecr",E,E,0,[[["self"]],["ecrclient"]]],[11,"ecs",E,E,0,[[["self"]],["ecsclient"]]],[11,"workplace",E,E,0,[[["self"]],[R[58]]]],[11,"region",E,E,0,[[["self"]],["str"]]],[0,"cluster",R[1731],E,N,N],[3,"Cluster",R[1737],E,N,N],[11,"from_host_port",E,E,1,[[["vec"],["str"]],["self"]]],[11,"discover",E,E,1,[[["aws"],["str"]],[R[0]]]],[11,"random_instance",E,E,1,[[["self"]],[R[1732]]]],[11,"instances",E,E,1,[[["self"]],["vec"]]],[11,"into_instances",E,E,1,[[],[["vec",[R[1732]]],[R[1732]]]]],[11,"prometheus_ip",E,E,1,[[["self"]],[[R[24],[R[58]]],[R[58]]]]],[11,"mint_file",E,E,1,[[["self"]],["str"]]],[11,"get_instance",E,E,1,[[["self"],["str"]],[[R[24],[R[1732]]],[R[1732]]]]],[11,"split_n_random",E,"Splits this cluster into two",1,[[["self"],["usize"]]]],[11,"sub_cluster",E,E,1,[[["self"],["vec",[R[58]]],[R[58]]],["cluster"]]],[0,"deployment",R[1731],E,N,N],[3,R[1755],R[1738],E,N,N],[17,"SOURCE_TAG",E,E,N,N],[17,"RUNNING_TAG",E,E,N,N],[17,"TESTED_TAG",E,E,N,N],[11,"new",E,E,2,[[["aws"],["cluster"]],["self"]]],[11,"latest_hash_changed",E,E,2,[[["self"]],[[R[58]],[R[24],[R[58]]]]]],[11,"redeploy",E,E,2,[[["self"],[R[58]]],[R[0]]]],[11,"update_all_services",E,E,2,[[["self"]],[R[0]]]],[11,"get_tested_upstream_commit",E,E,2,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[11,"tag_tested_image",E,E,2,[[["self"],[R[58]]],[[R[58]],[R[0],[R[58]]]]]],[11,"get_upstream_tag",E,E,2,[[["self"],["str"]],[[R[58]],[R[0],[R[58]]]]]],[0,"effects",R[1731],E,N,N],[3,R[1756],R[1739],E,N,N],[3,"PacketLoss",E,E,N,N],[3,"Reboot",E,E,N,N],[3,R[1757],E,E,N,N],[3,R[1758],E,E,N,N],[11,"new",E,E,3,[[["vec",[R[1732]]],[R[1732]],[R[410]],[R[24],["vec"]]],["self"]]],[11,"new",E,E,4,[[["f32"],[R[1732]]],["self"]]],[11,"new",E,E,5,[[[R[1732]]],["self"]]],[11,"new",E,E,6,[[[R[1732]]],["self"]]],[11,"new",E,E,7,[[[R[1732]]],["self"]]],[8,"Action",E,E,N,N],[10,"apply",E,E,8,[[["self"]],[R[0]]]],[10,R[1749],E,E,8,[[["self"]],["bool"]]],[8,"Effect",E,E,N,N],[10,"activate",E,E,9,[[["self"]],[R[0]]]],[10,R[1750],E,E,9,[[["self"]],[R[0]]]],[0,R[1735],R[1731],E,N,N],[3,R[1759],R[1740],E,N,N],[3,R[1760],E,E,N,N],[3,R[1761],E,E,N,N],[11,"new",E,E,10,[[[R[1753]],["u64"],["vec",["u64"]],["usize"],[R[410]],[R[1754]],["vec",["usize"]],["cluster"]],["self"]]],[11,"new",E,E,11,[[["f32"],["usize"],[R[410]],["cluster"]],["self"]]],[11,"new",E,E,12,[[["usize"],["cluster"]],["self"]]],[8,"Experiment",E,E,N,N],[10,R[1751],E,E,13,[[["self"]],[[R[58]],["hashset",[R[58]]]]]],[10,"run",E,E,13,[[["self"]],[R[0]]]],[0,"github",R[1731],E,N,N],[3,"CommitInfo",R[1741],E,N,N],[12,"sha",E,E,14,N],[12,"commit",E,E,14,N],[3,R[1762],E,E,N,N],[12,"author",E,E,15,N],[12,"message",E,E,15,N],[3,"Author",E,E,N,N],[12,"name",E,E,16,N],[12,"email",E,E,16,N],[3,"GitHub",E,E,N,N],[11,"new",E,E,17,[[],["github"]]],[11,"get_commits",E,"repo in format owner/repo_name sha can be long or short…",17,[[["self"],["str"]],[["vec",["commitinfo"]],[R[0],["vec"]]]]],[0,"health",R[1731],E,N,N],[3,R[1764],R[1742],"Verifies that commit history produced by validators is…",N,N],[3,R[1765],E,E,N,N],[3,R[1766],E,E,N,N],[3,"LogTail",E,E,N,N],[12,"event_receiver",E,E,18,N],[12,"pending_messages",E,E,18,N],[3,"Commit",E,E,N,N],[3,R[1776],E,E,N,N],[3,R[1768],E,E,N,N],[3,R[1769],E,E,N,N],[3,R[1763],E,E,N,N],[12,"validator",E,E,19,N],[12,"message",E,E,19,N],[4,"Event",E,E,N,N],[13,"Commit",E,E,20,N],[13,"ConsensusStarted",E,E,20,N],[11,"new",E,E,21,[[],["self"]]],[11,"spawn_new",E,E,22,[[["cluster"]],["logtail"]]],[11,"run",E,E,22,[[]]],[11,"new",E,E,23,[[["cluster"]],["self"]]],[11,"recv_all_until_deadline",E,E,18,[[["self"],["instant"]],[[R[1733]],["vec",[R[1733]]]]]],[11,"recv_all",E,E,18,[[["self"]],[[R[1733]],["vec",[R[1733]]]]]],[8,R[1767],E,E,N,N],[10,"on_event",E,"Verify specific event",24,[[["self"],[R[1734]],[R[1733]]]]],[11,"verify",E,"Periodic verification (happens even if when no events…",24,[[["self"],[R[1734]]]]],[11,R[1752],E,"Optionally marks validator as failed, requiring waiting…",24,[[["self"],["str"]]]],[11,"clear",E,"Clean is invoked when cluster is wiped This means that…",24,[[["self"]]]],[10,"name",E,E,24,[[["self"]],["str"]]],[11,"new",E,E,25,[[["vec",["box"]],["box",["healthcheck"]],["cluster"]],["self"]]],[11,"new_all",E,E,25,[[["cluster"]],["self"]]],[11,"run",E,"Takes a list of affected_validators. If there are…",25,[[["self"],["bool"],["hashset"]],[[R[0],["vec"]],["vec",[R[58]]]]]],[11,R[1752],E,E,25,[[["self"],["str"]]]],[11,"clear",E,E,25,[[["self"]]]],[11,"new",E,E,26,[[],["self"]]],[11,"now",E,E,26,[[["self"]],[R[410]]]],[11,"report_failure",E,E,26,[[["self"],[R[58]]]]],[0,R[1732],R[1731],E,N,N],[3,"Instance",R[1743],E,N,N],[11,"new",E,E,27,[[[R[58]],["u32"]],[R[1732]]]],[11,"run_cmd_tee_err",E,E,27,[[["self"],["i"]],[R[0]]]],[11,"run_cmd",E,E,27,[[["self"],["i"]],[R[0]]]],[11,"run_cmd_inner",E,E,27,[[["self"],["i"],["bool"]],[R[0]]]],[11,"short_hash",E,E,27,[[["self"]],[R[58]]]],[11,"ip",E,E,27,[[["self"]],[R[58]]]],[11,"ac_port",E,E,27,[[["self"]],["u32"]]],[0,R[1753],R[1731],E,N,N],[3,"Prometheus",R[1744],E,N,N],[3,R[1770],E,E,N,N],[3,"TimeSeries",E,E,N,N],[11,"new",E,E,28,[[["str"]],["self"]]],[11,"query_range_avg",E,E,28,[[["self"],[R[58]],[R[410]],["u64"]],[["f64"],[R[0],["f64"]]]]],[11,"avg",E,E,29,[[["self"]],[[R[24],["f64"]],["f64"]]]],[11,"get",E,E,30,[[["self"]]]],[11,"avg",E,E,30,[[["self"]],[[R[24],["f64"]],["f64"]]]],[0,"slack",R[1731],E,N,N],[3,R[1771],R[1745],E,N,N],[11,"new",E,E,31,[[],["self"]]],[11,"send_message",E,E,31,[[["self"],["url"],["str"]],[R[0]]]],[0,"suite",R[1731],E,N,N],[3,R[1772],R[1746],E,N,N],[12,R[1735],E,E,32,N],[11,"new_pre_release",E,E,32,[[["cluster"]],["self"]]],[0,"thread_pool_executor",R[1731],E,N,N],[3,R[1773],R[1747],E,N,N],[11,"new",E,E,33,[[[R[58]]],["self"]]],[11,"execute_jobs",E,"Executes jobs, wait for them to complete and return…",33,[[["self"],["vec"]],["vec"]]],[0,"tx_emitter",R[1731],E,N,N],[3,"TxEmitter",R[1748],E,N,N],[3,"EmitJob",E,E,N,N],[3,R[1774],E,E,N,N],[12,"wait_millis",E,E,34,N],[12,"wait_committed",E,E,34,N],[3,R[1775],E,E,N,N],[12,"instances",E,E,35,N],[12,"accounts_per_client",E,E,35,N],[12,"thread_params",E,E,35,N],[11,"new",E,E,36,[[["cluster"]],["self"]]],[11,"clear",E,E,36,[[["self"]]]],[11,"start_job",E,E,36,[[["self"],["emitjobrequest"]],[[R[0],["emitjob"]],["emitjob"]]]],[11,"stop_job",E,E,36,[[["self"],["emitjob"]]]],[0,"util",R[1731],E,N,N],[5,"unix_timestamp_now","cluster_test::util",E,N,[[],[R[410]]]],[11,R[13],R[1736],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[1737],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],R[1738],E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[1739],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[58]]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[58]]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[58]]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[57],E,E,7,[[["self"]],[R[58]]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[1740],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",R[1741],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",R[1742],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[2],E,E,37,[[[U]],[R[0]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[R[7]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[2],E,E,38,[[[U]],[R[0]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[R[7]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[13],R[1743],E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[57],E,E,27,[[["self"]],[R[58]]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[13],R[1744],E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",R[1745],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",R[1746],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[13],R[1747],E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",R[1748],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[2],E,E,36,[[[U]],[R[0]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[R[7]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[2],E,E,39,[[[U]],[R[0]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[R[7]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,"clear",E,E,34,[[["self"]]]],[11,R[172],E,E,34,[[]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"apply",R[1739],E,4,[[["self"]],[R[0]]]],[11,R[1749],E,E,4,[[["self"]],["bool"]]],[11,"apply",E,E,5,[[["self"]],[R[0]]]],[11,R[1749],E,E,5,[[["self"]],["bool"]]],[11,"apply",E,E,6,[[["self"]],[R[0]]]],[11,R[1749],E,E,6,[[["self"]],["bool"]]],[11,"activate",E,E,3,[[["self"]],[R[0]]]],[11,R[1750],E,E,3,[[["self"]],[R[0]]]],[11,"activate",E,E,7,[[["self"]],[R[0]]]],[11,R[1750],E,E,7,[[["self"]],[R[0]]]],[11,R[1751],R[1740],E,10,[[["self"]],[[R[58]],["hashset",[R[58]]]]]],[11,"run",E,E,10,[[["self"]],[R[0]]]],[11,R[1751],E,E,11,[[["self"]],[[R[58]],["hashset",[R[58]]]]]],[11,"run",E,E,11,[[["self"]],[R[0]]]],[11,R[1751],E,E,12,[[["self"]],[[R[58]],["hashset",[R[58]]]]]],[11,"run",E,E,12,[[["self"]],[R[0]]]],[11,"on_event",R[1742],E,21,[[["self"],[R[1734]],[R[1733]]]]],[11,"clear",E,E,21,[[["self"]]]],[11,"name",E,E,21,[[["self"]],["str"]]],[11,"on_event",E,E,23,[[["self"],[R[1734]],[R[1733]]]]],[11,"verify",E,E,23,[[["self"],[R[1734]]]]],[11,R[1752],E,E,23,[[["self"],["str"]]]],[11,"name",E,E,23,[[["self"]],["str"]]],[11,R[75],R[1748],E,34,[[],["self"]]],[11,"clone",R[1736],E,0,[[["self"]],["aws"]]],[11,"clone",R[1737],E,1,[[["self"]],["cluster"]]],[11,"clone",R[1738],E,2,[[["self"]],["deploymentmanager"]]],[11,"clone",R[1742],E,37,[[["self"]],["commit"]]],[11,"clone",E,E,20,[[["self"]],["event"]]],[11,"clone",E,E,38,[[["self"]],[R[1733]]]],[11,"clone",R[1743],E,27,[[["self"]],[R[1732]]]],[11,"clone",R[1744],E,28,[[["self"]],[R[1753]]]],[11,"clone",R[1747],E,33,[[["self"]],[R[1754]]]],[11,"clone",R[1748],E,34,[[["self"]],["emitthreadparams"]]],[11,"fmt",R[1741],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1742],E,37,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1739],E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1740],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1743],E,27,[[["self"],[R[17]]],[R[0]]]],[11,R[193],R[1741],E,14,[[["__d"]],[R[0]]]],[11,R[193],E,E,15,[[["__d"]],[R[0]]]],[11,R[193],E,E,16,[[["__d"]],[R[0]]]]],"p":[[3,"Aws"],[3,"Cluster"],[3,R[1755]],[3,R[1756]],[3,"PacketLoss"],[3,"Reboot"],[3,R[1757]],[3,R[1758]],[8,"Action"],[8,"Effect"],[3,R[1759]],[3,R[1760]],[3,R[1761]],[8,"Experiment"],[3,"CommitInfo"],[3,R[1762]],[3,"Author"],[3,"GitHub"],[3,"LogTail"],[3,R[1763]],[4,"Event"],[3,R[1764]],[3,R[1765]],[3,R[1766]],[8,R[1767]],[3,R[1768]],[3,R[1769]],[3,"Instance"],[3,"Prometheus"],[3,R[1770]],[3,"TimeSeries"],[3,R[1771]],[3,R[1772]],[3,R[1773]],[3,R[1774]],[3,R[1775]],[3,"TxEmitter"],[3,"Commit"],[3,R[1776]],[3,"EmitJob"]]};
searchIndex["compiler"]={"doc":E,"i":[[3,"Compiler","compiler","An API for the compiler. Supports setting custom options.",N,N],[12,R[333],E,"The address used as the sender for the compiler.",0,N],[12,"skip_stdlib_deps",E,"Skip stdlib dependencies if true.",0,N],[12,"stdlib_address",E,"The address to use for stdlib.",0,N],[12,"extra_deps",E,"Extra dependencies to compile with.",0,N],[0,"util",E,E,N,N],[5,"do_compile_module","compiler::util",E,N,[[["path"],[R[265]]]]],[11,"into_compiled_program","compiler","Compiles into a `CompiledProgram` where the bytecode…",0,[[["str"]],[[R[0],[R[829]]],[R[829]]]]],[11,"into_compiled_program_and_source_maps",E,E,0,[[["str"]],[R[0]]]],[11,"into_compiled_program_and_source_maps_deps",E,E,0,[[["str"]],[R[0]]]],[11,"into_compiled_program_and_deps",E,"Compiles into a `CompiledProgram` and also returns the…",0,[[["str"]],[R[0]]]],[11,R[1346],E,"Compiles into a `CompiledScript`.",0,[[["str"]],[[R[757]],[R[0],[R[757]]]]]],[11,"into_script_blob",E,"Compiles the script into a serialized form.",0,[[["str"]],[[R[0],["vec"]],["vec",["u8"]]]]],[11,"into_compiled_module",E,"Compiles the module.",0,[[["str"]],[[R[750]],[R[0],[R[750]]]]]],[11,"into_module_blob",E,"Compiles the module into a serialized form.",0,[[["str"]],[[R[0],["vec"]],["vec",["u8"]]]]],[11,"into_program",E,"Compiles the code and arguments into a `Script` -- the…",0,[[[R[406]],["str"],["vec",[R[406]]]],[["script"],[R[0],["script"]]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[75],E,E,0,[[],["compiler"]]],[11,"clone",E,E,0,[[["self"]],["compiler"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,"Compiler"]]};
searchIndex["config_builder"]={"doc":E,"i":[[0,"swarm_config",R[1778],"Convenience structs and functions for generating…",N,N],[3,R[1780],R[1779],E,N,N],[12,"configs",E,E,0,N],[3,R[1781],E,E,N,N],[11,"new_full_node_swarm",E,E,0,[[["pathbuf"],["usize"],[R[24]],[R[929]],["path"],["bool"]],[R[0]]]],[11,"new_validator_swarm",E,E,0,[[["path"],[R[24]],["bool"],["usize"],[R[181]],[R[248],[R[192],R[181]]],[R[929]],[R[192]]],[R[0]]]],[11,"new",E,E,1,[[],["swarmconfigbuilder"]]],[11,"with_base",E,E,1,[[["self"],["asref",["path"]],["path"]],["self"]]],[11,"with_output_dir",E,E,1,[[["self"],["asref",["path"]],["path"]],["self"]]],[11,"with_faucet_keypair_filepath",E,E,1,[[["self"],["asref",["path"]],["path"]],["self"]]],[11,"with_faucet_keypair",E,E,1,[[["self"],[R[181]],[R[248],[R[192],R[181]]],[R[192]]],["self"]]],[11,"with_num_nodes",E,E,1,[[["self"],["usize"]],["self"]]],[11,"with_role",E,E,1,[[["self"],[R[952]]],["self"]]],[11,"force_discovery",E,E,1,[[["self"]],["self"]]],[11,"with_ipv4",E,E,1,[[["self"]],["self"]]],[11,"with_ipv6",E,E,1,[[["self"]],["self"]]],[11,"with_key_seed",E,E,1,[[["self"]],["self"]]],[11,"with_upstream_config_dir",E,E,1,[[["self"],[R[58]],[R[24],[R[58]]]],["self"]]],[11,"with_is_permissioned",E,E,1,[[["self"],["bool"]],["self"]]],[11,"build",E,E,1,[[],[[R[1777]],[R[0],[R[1777]]]]]],[0,"util",R[1778],E,N,N],[5,"gen_genesis_transaction","config_builder::util",E,N,[[[R[934]],[R[248]],[R[950]]],[R[395]]]],[5,"gen_genesis_transaction_bytes",E,E,N,[[[R[934]],[R[248]],[R[950]]],[["vec",["u8"]],["u8"]]]],[5,"get_test_config_with_validators",E,"Returns the validator keys, consensus peers, config, and…",N,[[]]],[5,R[1782],E,"Returns the config as well as the genesis keyapir",N,[[]]],[11,"into",R[1779],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[75],E,E,1,[[],["self"]]]],"p":[[3,R[1780]],[3,R[1781]]]};
searchIndex["consensus"]={"doc":"Consensus for the Libra Core blockchain","i":[[0,"event_processor_fuzzing","consensus",E,N,N],[5,"generate_corpus_proposal","consensus::event_processor_fuzzing",E,N,[[],[["vec",["u8"]],["u8"]]]],[5,"fuzz_proposal",E,E,N,[[]]],[0,"consensus_provider","consensus","Defines the public consensus provider traits to implement…",N,N],[5,"make_consensus_provider","consensus::consensus_provider","Helper function to create a ConsensusProvider based on…",N,[[["arc",["executor"]],["executor",["movevm"]],[R[2103]],["arc",[R[2103]]],["consensusnetworkevents"],[R[929]],[R[2208]]],[[R[2206]],["box",[R[2206]]]]]],[5,"create_storage_read_client",E,"Create a storage read client based on the config",N,[[[R[929]]],[["arc",[R[1556]]],[R[1556]]]]],[8,R[2207],E,"Public interface to a consensus protocol.",N,N],[10,"start",E,"Spawns new threads, starts the consensus operations…",0,[[["self"]],[R[0]]]],[10,"stop",E,"Stop the consensus operations. The function returns after…",0,[[["self"]]]]],"p":[[8,R[2207]]]};
searchIndex["consensus_types"]={"doc":E,"i":[[0,R[2153],R[2137],E,N,N],[3,R[2174],R[2155],"A proof that first verifies that establishes correct…",N,N],[11,"new",E,E,0,[[[R[149]],[R[312]],["vec",[R[149]]]],["self"]]],[11,"verify",E,E,0,[[["self"],[R[149]]],[[R[2136]],[R[0],[R[2136]]]]]],[0,"block",R[2137],E,N,N],[3,"Block",R[2140],R[2142],N,N],[0,"block_test_utils",E,E,N,N],[5,R[2141],"consensus_types::block::block_test_utils","This strategy is a swiss-army tool to produce a low-level…",N,[[[R[149]],[R[2139]]]]],[5,R[519],E,"This produces the genesis block",N,[[]]],[5,"unmoored_block",E,"This produces an unmoored block, with arbitrary parent &…",N,[[]]],[5,"leaf_strategy",E,"Offers the genesis block.",N,[[]]],[5,"fake_id",E,"This produces a block with an invalid id (and therefore…",N,[[]]],[5,"some_round",E,"This produces a round that is often higher than the…",N,[[["round"]]]],[5,"block_forest_and_its_keys",E,"This returns keys and a block forest created from them",N,[[["u32"],["usize"]]]],[5,"get_current_timestamp",E,E,N,[[],[R[410]]]],[5,"placeholder_ledger_info",E,E,N,[[],[R[283]]]],[5,"placeholder_ledger_with_id",E,E,N,[[[R[149]]],[R[283]]]],[5,"placeholder_certificate_for_block",E,E,N,[[[R[149]],["vec",[R[2138]]],[R[2138]],["u64"],[R[24],[R[149]]]],[R[2139]]]],[5,"certificate_for_genesis",E,E,N,[[],[R[2139]]]],[11,"author",R[2140],E,1,[[["self"]],[["author"],[R[24],["author"]]]]],[11,"epoch",E,E,1,[[["self"]],["u64"]]],[11,"id",E,E,1,[[["self"]],[R[149]]]],[11,"parent_id",E,E,1,[[["self"]],[R[149]]]],[11,"payload",E,E,1,[[["self"]],[[T],[R[24]]]]],[11,R[2144],E,E,1,[[["self"]],[R[2139]]]],[11,"round",E,E,1,[[["self"]],["round"]]],[11,R[412],E,E,1,[[["self"]],[[R[24],[R[412]]],[R[412]]]]],[11,R[308],E,E,1,[[["self"]],["u64"]]],[11,R[2145],E,E,1,[[["self"]],["bool"]]],[11,R[2146],E,E,1,[[["self"]],["bool"]]],[11,"make_genesis_block",E,E,1,[[],["self"]]],[11,"make_genesis_block_from_ledger_info",E,"Construct new genesis block for next epoch…",1,[[[R[283]]],["self"]]],[11,"new_nil",E,"The NIL blocks are special: they're not carrying any real…",1,[[["round"],[R[2139]]],["self"]]],[11,R[2141],E,E,1,[[[R[2138]],[R[2139]],["round"],[T],["u64"]],["self"]]],[11,"new_proposal_from_block_data",E,E,1,[[[R[2169]],[R[2138]]],["self"]]],[11,R[2148],E,"Verifies that the proposal and the QC are correctly…",1,[[["self"],[R[296]]],[R[0]]]],[11,R[2150],E,"Makes sure that the proposal makes sense, independently of…",1,[[["self"]],[R[0]]]],[11,"gen_block_info",E,E,1,[[["self"],[R[149]],[R[279]],[R[278]],[R[24],[R[278]]]],[R[307]]]],[0,"block_data",R[2137],E,N,N],[3,"BlockData",R[2143],R[2142],N,N],[4,"BlockType",E,E,N,N],[13,"Proposal",E,E,2,N],[12,"payload","consensus_types::block_data::BlockType","T of the block (e.g. one or more transaction(s)",2,N],[12,"author",E,"Author of the block that can be validated by the author's…",2,N],[13,"NilBlock",R[2143],"NIL blocks don't have authors or signatures: they're…",2,N],[13,"Genesis",E,"A genesis block is the first committed block in any epoch…",2,N],[11,"author",E,E,3,[[["self"]],[["author"],[R[24],["author"]]]]],[11,"block_type",E,E,3,[[["self"]],[R[2168]]]],[11,"epoch",E,E,3,[[["self"]],["u64"]]],[11,"parent_id",E,E,3,[[["self"]],[R[149]]]],[11,"payload",E,E,3,[[["self"]],[[T],[R[24]]]]],[11,"round",E,E,3,[[["self"]],["round"]]],[11,R[308],E,E,3,[[["self"]],["u64"]]],[11,R[2144],E,E,3,[[["self"]],[R[2139]]]],[11,R[2145],E,E,3,[[["self"]],["bool"]]],[11,R[2146],E,E,3,[[["self"]],["bool"]]],[11,"new_genesis",E,E,3,[[["u64"],[R[2139]]],["self"]]],[11,"new_nil",E,E,3,[[["round"],[R[2139]]],["self"]]],[11,R[2141],E,E,3,[[[R[2139]],["author"],["round"],[T],["u64"]],["self"]]],[0,"block_retrieval",R[2137],E,N,N],[3,R[2176],R[2156],"RPC to get a chain of block of the given length starting…",N,N],[3,R[2177],E,"Carries the returned blocks and the retrieval status.",N,N],[4,R[2175],E,E,N,N],[13,"Succeeded",E,E,4,N],[13,"IdNotFound",E,E,4,N],[13,"NotEnoughBlocks",E,E,4,N],[11,"new",E,E,5,[[[R[149]],["u64"]],["self"]]],[11,"block_id",E,E,5,[[["self"]],[R[149]]]],[11,R[1385],E,E,5,[[["self"]],["u64"]]],[11,"new",E,E,6,[[["vec",["block"]],["block"],[R[2147]]],["self"]]],[11,"status",E,E,6,[[["self"]],[R[2147]]]],[11,"blocks",E,E,6,[[["self"]],["vec"]]],[11,"verify",E,E,6,[[["self"],[R[149]],[R[296]],["u64"]],[R[0]]]],[0,"common",R[2137],E,N,N],[6,"Round","consensus_types::common",R[2184],N,N],[6,"Author",E,"Author refers to the author's account address",N,N],[8,"Payload",E,"Trait alias for the Block Payload.",N,N],[0,"epoch_retrieval",R[2137],E,N,N],[3,R[2178],R[2157],"Request to get a ValidatorChangeEventWithProof from…",N,N],[12,R[1526],E,E,7,N],[12,"target_epoch",E,E,7,N],[0,"executed_block",R[2137],E,N,N],[3,R[2179],R[2158],"ExecutedBlocks are managed in a speculative tree, the…",N,N],[11,"new",E,E,8,[[[R[1890]],["block"]],["self"]]],[11,"block",E,E,8,[[["self"]],["block"]]],[11,"compute_result",E,E,8,[[["self"]],[R[1891]]]],[11,"epoch",E,E,8,[[["self"]],["u64"]]],[11,R[2183],E,E,8,[[["self"]],[R[1887]]]],[11,"id",E,E,8,[[["self"]],[R[149]]]],[11,"output",E,E,8,[[["self"]],["arc"]]],[11,"payload",E,E,8,[[["self"]],[[T],[R[24]]]]],[11,"parent_id",E,E,8,[[["self"]],[R[149]]]],[11,R[2144],E,E,8,[[["self"]],[R[2139]]]],[11,"round",E,E,8,[[["self"]],["round"]]],[11,R[308],E,E,8,[[["self"]],["u64"]]],[11,"transaction_info_hashes",E,E,8,[[["self"]],[["vec",[R[149]]],[R[149]]]]],[11,R[2146],E,E,8,[[["self"]],["bool"]]],[0,"proposal_msg",R[2137],E,N,N],[3,R[2181],R[2159],"ProposalMsg contains the required information for the…",N,N],[3,R[2180],E,"A ProposalMsg is only accessible after verifying the…",N,N],[11,R[2148],E,"Validates the signatures of the proposal. This includes…",9,[[[R[296]]],[[R[2149]],[R[0],[R[2149]]]]]],[11,"epoch",E,E,9,[[["self"]],["u64"]]],[11,"new",E,"Creates a new proposal.",10,[[[R[2172]],["block"]],["self"]]],[11,R[2150],E,"Verifies that the ProposalMsg is well-formed.",10,[[],[R[0]]]],[11,"proposal",E,E,10,[[["self"]],["block"]]],[11,"take_proposal",E,E,10,[[],["block"]]],[11,"sync_info",E,E,10,[[["self"]],[R[2172]]]],[11,"round",E,E,10,[[["self"]],["round"]]],[11,"proposer",E,E,10,[[["self"]],["author"]]],[0,R[2144],R[2137],E,N,N],[3,"QuorumCert",R[2160],E,N,N],[11,"new",E,E,11,[[[R[2173]],[R[298]]],["self"]]],[11,"vote_data",E,E,11,[[["self"]],[R[2173]]]],[11,"certified_block",E,E,11,[[["self"]],[R[307]]]],[11,"parent_block",E,E,11,[[["self"]],[R[307]]]],[11,R[311],E,E,11,[[["self"]],[R[298]]]],[11,"committed_block_id",E,E,11,[[["self"]],[[R[24],[R[149]]],[R[149]]]]],[11,"certificate_for_genesis_from_ledger_info",E,"QuorumCert for the genesis block deterministically…",11,[[[R[283]],[R[149]]],[R[2139]]]],[11,"verify",E,E,11,[[["self"],[R[296]]],[R[0]]]],[0,"sync_info",R[2137],E,N,N],[3,"SyncInfo",R[2161],"This struct describes basic synchronization metadata.",N,N],[11,"new",E,E,12,[[[R[24],[R[2151]]],[R[2139]],[R[2151]]],["self"]]],[11,"highest_quorum_cert",E,"Highest quorum certificate",12,[[["self"]],[R[2139]]]],[11,"highest_ledger_info",E,"Highest ledger info",12,[[["self"]],[R[2139]]]],[11,"highest_timeout_certificate",E,"Highest timeout certificate if available",12,[[["self"]],[[R[2151]],[R[24],[R[2151]]]]]],[11,"hqc_round",E,E,12,[[["self"]],["round"]]],[11,"htc_round",E,E,12,[[["self"]],["round"]]],[11,"highest_round",E,"The highest round the SyncInfo carries.",12,[[["self"]],["round"]]],[11,"verify",E,E,12,[[["self"],[R[296]]],[R[0]]]],[11,"epoch",E,E,12,[[["self"]],["u64"]]],[0,"timeout",R[2137],E,N,N],[3,"Timeout",R[2162],"This structure contains all the information necessary to…",N,N],[11,"new",E,E,13,[[["round"],["u64"]],["self"]]],[11,"from_block",E,E,13,[[["block"]],["self"]]],[11,"epoch",E,E,13,[[["self"]],["u64"]]],[11,"round",E,E,13,[[["self"]],["round"]]],[11,"sign",E,E,13,[[["self"],[R[2138]]],[R[412]]]],[0,"timeout_certificate",R[2137],E,N,N],[3,R[2182],R[2163],"TimeoutCertificate is a proof that 2f+1 participants in…",N,N],[11,"new",E,"Creates new TimeoutCertificate",14,[[[R[412]],["hashmap",["author",R[412]]],["author"],["timeout"]],["self"]]],[11,"verify",E,"Verifies the signatures for the round",14,[[["self"],[R[296]]],[R[0]]]],[11,"epoch",E,"Returns the epoch of the timeout certificate",14,[[["self"]],["u64"]]],[11,"round",E,"Returns the round of the timeout certificate",14,[[["self"]],["round"]]],[11,R[361],E,"Returns the signatures certifying the round",14,[[["self"]],["hashmap"]]],[11,R[2185],E,E,14,[[["self"],["author"],[R[412]]]]],[11,R[2186],E,E,14,[[["self"],["author"]]]],[0,"vote",R[2137],E,N,N],[3,"Vote",R[2164],"Vote is the struct that is ultimately sent by the voter in…",N,N],[11,"new",E,"Generates a new Vote corresponding to the \"fast-vote\" path…",15,[[[R[2173]],[R[283]],["author"],[R[2138]]],["self"]]],[11,"add_timeout_signature",E,"Generates a round signature, which can then be used for…",15,[[["self"],[R[412]]]]],[11,"vote_data",E,E,15,[[["self"]],[R[2173]]]],[11,"author",E,"Return the author of the vote",15,[[["self"]],["author"]]],[11,R[311],E,"Return the LedgerInfo associated with this vote",15,[[["self"]],[R[283]]]],[11,R[412],E,"Return the signature of the vote",15,[[["self"]],[R[412]]]],[11,"timeout",E,"Returns the hash of the data represent by a timeout proposal",15,[[["self"]],["timeout"]]],[11,"epoch",E,"Return the epoch of the vote",15,[[["self"]],["u64"]]],[11,"timeout_signature",E,"Returns the signature for the…",15,[[["self"]],[[R[24],[R[412]]],[R[412]]]]],[11,"is_timeout",E,"The vote message is considered a timeout vote message if…",15,[[["self"]],["bool"]]],[11,"verify",E,"Verifies that the consensus data hash of LedgerInfo…",15,[[["self"],[R[296]]],[R[0]]]],[0,"vote_data",R[2137],E,N,N],[3,"VoteData",R[2165],"VoteData keeps the information about the block, and its…",N,N],[11,"new",E,E,16,[[[R[307]]],["self"]]],[11,"parent",E,"Contains all the block information needed for voting for…",16,[[["self"]],[R[307]]]],[11,"proposed",E,"Contains all the block information for the parent for the…",16,[[["self"]],[R[307]]]],[0,"vote_msg",R[2137],E,N,N],[3,"VoteMsg",R[2166],"VoteMsg is the struct that is ultimately sent by the voter…",N,N],[11,"new",E,E,17,[[[R[2172]],["vote"]],["self"]]],[11,"vote",E,"Container for actual voting material",17,[[["self"]],["vote"]]],[11,"sync_info",E,"SyncInfo of the given vote message",17,[[["self"]],[R[2172]]]],[11,"epoch",E,E,17,[[["self"]],["u64"]]],[0,"vote_proposal",R[2137],E,N,N],[3,R[2069],R[2167],"This structure contains all the information needed by…",N,N],[11,"new",E,E,18,[[[R[2154],[R[2152]]],[R[2152]],[R[278]],["block"],[R[24],[R[278]]]],["self"]]],[11,R[2153],E,E,18,[[["self"]],[R[2154]]]],[11,"block",E,E,18,[[["self"]],["block"]]],[11,R[309],E,E,18,[[["self"]],[[R[278]],[R[24],[R[278]]]]]],[11,"into",R[2155],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[169],E,E,0,[[["self"]],[R[149]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[2140],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[13],R[2143],E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,R[169],E,E,3,[[["self"]],[R[149]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[1038],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[169],E,E,2,[[["self"]],[R[149]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[1038],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[13],R[2156],E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[169],E,E,5,[[["self"]],[R[149]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[1038],E,E,5,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,5,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[58]]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[169],E,E,6,[[["self"]],[R[149]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[1038],E,E,6,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,6,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[169],E,E,4,[[["self"]],[R[149]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[1038],E,E,4,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,4,[[["self"],["k"]],["bool"]]],[11,"into",R[2157],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,R[169],E,E,7,[[["self"]],[R[149]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],R[2158],E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[1038],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[13],R[2159],E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,R[169],E,E,10,[[["self"]],[R[149]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[1038],E,E,10,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,10,[[["self"],["k"]],["bool"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],R[2160],E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,R[169],E,E,11,[[["self"]],[R[149]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[1038],E,E,11,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,11,[[["self"],["k"]],["bool"]]],[11,R[13],R[2161],E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,R[169],E,E,12,[[["self"]],[R[149]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[13],R[2162],E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[58]]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,R[169],E,E,13,[[["self"]],[R[149]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[1038],E,E,13,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,13,[[["self"],["k"]],["bool"]]],[11,R[13],R[2163],E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,R[169],E,E,14,[[["self"]],[R[149]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[1038],E,E,14,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,14,[[["self"],["k"]],["bool"]]],[11,R[13],R[2164],E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[57],E,E,15,[[["self"]],[R[58]]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,R[169],E,E,15,[[["self"]],[R[149]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[1038],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[13],R[2165],E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[58]]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,R[169],E,E,16,[[["self"]],[R[149]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[1038],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[13],R[2166],E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[57],E,E,17,[[["self"]],[R[58]]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,R[169],E,E,17,[[["self"]],[R[149]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[1038],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,17,[[["self"],["k"]],["bool"]]],[11,"into",R[2167],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[57],E,E,18,[[["self"]],[R[58]]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,R[169],E,E,18,[[["self"]],[R[149]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"clone",R[2140],E,1,[[["self"]],["block"]]],[11,"clone",R[2143],E,2,[[["self"]],[R[2168]]]],[11,"clone",E,E,3,[[["self"]],[R[2169]]]],[11,"clone",R[2156],E,5,[[["self"]],[R[2170]]]],[11,"clone",E,E,4,[[["self"]],[R[2147]]]],[11,"clone",E,E,6,[[["self"]],[R[2171]]]],[11,"clone",R[2158],E,8,[[["self"]],["executedblock"]]],[11,"clone",R[2159],E,10,[[["self"]],[R[2149]]]],[11,"clone",R[2160],E,11,[[["self"]],[R[2139]]]],[11,"clone",R[2161],E,12,[[["self"]],[R[2172]]]],[11,"clone",R[2162],E,13,[[["self"]],["timeout"]]],[11,"clone",R[2163],E,14,[[["self"]],[R[2151]]]],[11,"clone",R[2164],E,15,[[["self"]],["vote"]]],[11,"clone",R[2165],E,16,[[["self"]],[R[2173]]]],[11,"clone",R[2166],E,17,[[["self"]],["votemsg"]]],[11,"eq",R[2140],E,1,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["block"]],["bool"]]],[11,"eq",R[2143],E,2,[[["self"],[R[2168]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2168]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2169]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[2169]]],["bool"]]],[11,"eq",R[2156],E,5,[[["self"],[R[2170]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[2170]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[2147]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[2171]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[2171]]],["bool"]]],[11,"eq",R[2158],E,8,[[["self"]],["bool"]]],[11,"eq",R[2159],E,10,[[["self"],[R[2149]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[2149]]],["bool"]]],[11,"eq",R[2160],E,11,[[["self"],[R[2139]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[2139]]],["bool"]]],[11,"eq",R[2161],E,12,[[["self"],[R[2172]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[2172]]],["bool"]]],[11,"eq",R[2162],E,13,[[["self"],["timeout"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["timeout"]],["bool"]]],[11,"eq",R[2163],E,14,[[["self"],[R[2151]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[2151]]],["bool"]]],[11,"eq",R[2164],E,15,[[["self"],["vote"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["vote"]],["bool"]]],[11,"eq",R[2165],E,16,[[["self"],[R[2173]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[2173]]],["bool"]]],[11,"eq",R[2166],E,17,[[["self"],["votemsg"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["votemsg"]],["bool"]]],[11,"from",R[2159],E,10,[[["proposaluncheckedsignatures"]],["self"]]],[11,"fmt",R[2140],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2143],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2156],E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2158],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2159],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2160],E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2161],E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2162],E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2163],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2164],E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2165],E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2166],E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2140],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2156],E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2158],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2159],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2160],E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2161],E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2162],E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2163],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2164],E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2165],E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2166],E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2167],E,18,[[["self"],[R[17]]],[R[0]]]],[11,R[2],R[2140],E,1,[[["block"]],[R[0]]]],[11,R[2],R[2156],E,5,[[[R[2048]]],[R[0]]]],[11,R[2],E,E,6,[[[R[2052]]],[R[0]]]],[11,R[2],R[2157],E,7,[[[R[2053]]],[R[0]]]],[11,R[2],R[2159],E,9,[[["proposal"]],[R[0]]]],[11,R[2],E,E,9,[[[R[2034]]],[R[0]]]],[11,R[2],R[2161],E,12,[[[R[2172]]],[R[0]]]],[11,R[2],R[2166],E,17,[[[R[2034]]],[R[0]]]],[11,R[2],E,E,17,[[["votemsg"]],[R[0]]]],[11,R[2],R[2167],E,18,[[[R[2051]]],[R[0]]]],[11,R[193],R[2155],E,0,[[["__d"]],[R[0]]]],[11,R[193],R[2140],E,1,[[["d"]],[R[0]]]],[11,R[193],R[2143],E,2,[[["__d"]],[R[0]]]],[11,R[193],E,E,3,[[["__d"]],[R[0]]]],[11,R[193],R[2156],E,5,[[["__d"]],[R[0]]]],[11,R[193],E,E,4,[[["__d"]],[R[0]]]],[11,R[193],E,E,6,[[["__d"]],[R[0]]]],[11,R[193],R[2157],E,7,[[["__d"]],[R[0]]]],[11,R[193],R[2159],E,10,[[["__d"]],[R[0]]]],[11,R[193],R[2160],E,11,[[["__d"]],[R[0]]]],[11,R[193],R[2161],E,12,[[["__d"]],[R[0]]]],[11,R[193],R[2162],E,13,[[["__d"]],[R[0]]]],[11,R[193],R[2163],E,14,[[["__d"]],[R[0]]]],[11,R[193],R[2164],E,15,[[["__d"]],[R[0]]]],[11,R[193],R[2165],E,16,[[["__d"]],[R[0]]]],[11,R[193],R[2166],E,17,[[["__d"]],[R[0]]]],[11,R[193],R[2167],E,18,[[["__d"]],[R[0]]]],[11,R[142],R[2155],E,0,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2140],E,1,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2143],E,2,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,3,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2156],E,5,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,4,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2157],E,7,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2159],E,10,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2160],E,11,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2161],E,12,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2162],E,13,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2163],E,14,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2164],E,15,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2165],E,16,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2166],E,17,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[2167],E,18,[[["self"],["__s"]],[R[0]]]],[11,"hash",R[2143],E,3,[[["self"]],[R[149]]]],[11,"hash",R[2162],E,13,[[["self"]],[R[149]]]],[11,"hash",R[2165],E,16,[[["self"]],[R[149]]]]],"p":[[3,R[2174]],[3,"Block"],[4,"BlockType"],[3,"BlockData"],[4,R[2175]],[3,R[2176]],[3,R[2177]],[3,R[2178]],[3,R[2179]],[3,R[2180]],[3,R[2181]],[3,"QuorumCert"],[3,"SyncInfo"],[3,"Timeout"],[3,R[2182]],[3,"Vote"],[3,"VoteData"],[3,"VoteMsg"],[3,R[2069]]]};
searchIndex["cost_synthesis"]={"doc":E,"i":[[0,"module_generator",R[1901],"Logic for random valid module and module universe…",N,N],[3,R[1910],R[1905],"A wrapper around a `CompiledModule` containing information…",N,N],[3,R[1911],E,"A wrapper around a `ModuleBuilder` for building module…",N,N],[11,"new",E,"Create a new module builder with generated module tables…",0,[[[R[24],["box"]],[R[753]],["box",["fn"]]],["self"]]],[11,"display",E,"Display the current module being generated.",0,[[["self"]]]],[11,"materialize_unverified",E,R[1900],0,[[["self"]],[R[750]]]],[11,R[325],E,R[1900],0,[[["self"]],[R[1035]]]],[11,"new",E,"Create a new `ModuleGenerator` where each generated module…",1,[[[R[753]],["u64"]],["self"]]],[0,"global_state",R[1901],E,N,N],[0,"account",R[1902],E,N,N],[3,"Account",R[1906],"Details about an account.",N,N],[12,"addr",E,"The account address",2,N],[12,"privkey",E,"The account private key",2,N],[12,"pubkey",E,"The account public key",2,N],[12,"modules",E,"The set of modules that are published under that account.",2,N],[11,"new",E,"Create a new Account. The account is a logical entity at…",2,[[],["self"]]],[11,"generate_resources",E,"Publish all available resources under the compiled modules…",2,[[["self"],["randominhabitor"]],["vec"]]],[0,"inhabitor",R[1902],"Random valid type inhabitant generation.",N,N],[3,R[1912],R[1907],"A wrapper around state that is used to generate random…",N,N],[11,"new",E,"Create a new random type inhabitor.",3,[[[R[1653]],[R[1903]]],["self"]]],[11,"inhabit",E,"Build an inhabitant of the type given by `sig_token`. Note…",3,[[["self"],[R[755]]],["value"]]],[0,"natives",R[1901],"Logic for generating valid stack states for native…",N,N],[3,R[1913],R[1908],"A wrapper around data used to generate random valid…",N,N],[12,"hash_length",E,"The length of bytearrays that will be generated.",4,N],[11,"new",E,"Builds a new stack accessor mocker. User is responsible…",4,[[],["self"]]],[11,"set_hash_length",E,"Set the bytearray length that will be generated in calls…",4,[[["self"],["usize"]]]],[11,"next_bytearray",E,"Generage a fresh bytearray.",4,[[["self"]],[R[274]]]],[0,"stack_generator",R[1901],"Random valid stack state generation.",N,N],[3,"StackState",R[1909],"Specifies the data to be applied to the execution stack…",N,N],[12,"module_info",E,"The loaded module that should be loaded as the \"current…",5,N],[12,"stack",E,"The value stack that is required for the instruction.",5,N],[12,"instr",E,"A copy of the instruction. This will later be used to call…",5,N],[12,"size",E,"For certain instructions the cost is variable on the size…",5,N],[12,"local_mapping",E,"A sparse mapping of local index to local value for the…",5,N],[3,R[1914],E,"A wrapper around the instruction being synthesized. Holds…",N,N],[11,"new",E,"Create a new stack state with the passed-in information.",5,[[["hashmap",[R[1029],"value"]],[R[764]],[R[766],[R[765]]],["vec",["value"]],["value"],[R[765]],[R[1029]]],["self"]]],[11,"new",E,"Create a new random stack state generator.",6,[[[R[1653]],[R[1903]],[R[764]],["u16"],[R[265]],["u64"]],["self"]]],[11,"next_stack",E,"Generate a new valid random stack state. Return `None` if…",6,[[["self"]],[[R[24],[R[1904]]],[R[1904]]]]],[11,"stack_transition",E,"Applies the `stack_state` to the VM's execution stack.",6,[[[R[1904]],["interpreterforcostsynthesis"]]]],[0,"vm_runner",R[1901],"Defines the VM context for running instruction synthesis.",N,N],[14,"with_loaded_vm",E,"Create a VM loaded with the modules defined by the module…",N,N],[11,"into",R[1905],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,R[246],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],R[1906],E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[172],E,E,2,[[]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[1038],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,2,[[["self"],["k"]],["bool"]]],[11,"into",R[1907],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",R[1908],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",R[1909],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,R[246],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[75],R[1906],E,2,[[],["self"]]],[11,R[75],R[1908],E,4,[[],["self"]]],[11,"clone",R[1906],E,2,[[["self"]],["account"]]],[11,"eq",E,E,2,[[["self"],["account"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["account"]],["bool"]]],[11,"next",R[1905],E,1,[[["self"]],[R[24]]]],[11,"next",R[1909],E,6,[[["self"]],[R[24]]]],[11,"fmt",R[1906],E,2,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,R[1910]],[3,R[1911]],[3,"Account"],[3,R[1912]],[3,R[1913]],[3,"StackState"],[3,R[1914]]]};
searchIndex["crash_handler"]={"doc":E,"i":[[3,R[143],"crash_handler",E,N,N],[5,"setup_panic_handler",E,"Invoke to ensure process exits on a thread panic.",N,[[]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[142],E,E,0,[[["self"],["__s"]],[R[0]]]]],"p":[[3,R[143]]]};
searchIndex["datatest_stable"]={"doc":"`datatest-stable` is a very simple test harness intended…","i":[[3,R[11],R[10],E,N,N],[5,"runner",E,E,N,[[]]],[11,"new",E,E,0,[[[R[58]]],["self"]]],[0,"utils",E,E,N,N],[5,"iterate_directory","datatest_stable::utils","Helper function to iterate through all the files in the…",N,[[["path"]]]],[5,"derive_test_name",E,E,N,[[["path"],["str"]],[R[58]]]],[6,"Result",R[10],E,N,N],[14,"harness",E,"`datatest-stable` test harness entry point. Should be…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]]],"p":[[3,R[11]]]};
searchIndex["debug_interface"]={"doc":E,"i":[[3,R[1594],R[1580],"Implement default utility client for NodeDebugInterface",N,N],[0,"proto",E,E,N,N],[3,R[1595],R[1583],E,N,N],[3,R[1588],E,E,N,N],[12,"stats",E,E,0,N],[3,R[1596],E,E,N,N],[3,R[1589],E,E,N,N],[12,"events",E,E,1,N],[3,"Event",E,E,N,N],[12,"name",E,E,2,N],[12,"timestamp",E,E,2,N],[12,"json",E,E,2,N],[3,R[1591],E,E,N,N],[5,"create_node_debug_interface",E,E,N,[[["clone"],["nodedebuginterface"],["send"]],["service"]]],[8,R[1590],E,E,N,N],[10,R[1578],E,E,3,[[["self"],[R[1508]],[R[1577]],[R[1530],[R[1575]]],[R[1575]]]]],[10,R[1586],E,E,3,[[["self"],[R[1508]],[R[1530],[R[1576]]],[R[1579]],[R[1576]]]]],[11,"new",E,E,4,[[["channel"]],["self"]]],[11,"get_node_details_opt",E,E,4,[[["self"],[R[1495]],[R[1577]]],[[R[1575]],[R[0],[R[1575]]]]]],[11,R[1578],E,E,4,[[["self"],[R[1577]]],[[R[1575]],[R[0],[R[1575]]]]]],[11,"get_node_details_async_opt",E,E,4,[[["self"],[R[1495]],[R[1577]]],[[R[1494],[R[1575]]],[R[0],[R[1494]]]]]],[11,"get_node_details_async",E,E,4,[[["self"],[R[1577]]],[[R[1494],[R[1575]]],[R[0],[R[1494]]]]]],[11,"get_events_opt",E,E,4,[[["self"],[R[1495]],[R[1579]]],[[R[0],[R[1576]]],[R[1576]]]]],[11,R[1586],E,E,4,[[["self"],[R[1579]]],[[R[0],[R[1576]]],[R[1576]]]]],[11,"get_events_async_opt",E,E,4,[[["self"],[R[1495]],[R[1579]]],[[R[0],[R[1494]]],[R[1494],[R[1576]]]]]],[11,"get_events_async",E,E,4,[[["self"],[R[1579]]],[[R[0],[R[1494]]],[R[1494],[R[1576]]]]]],[11,"spawn",E,E,4,[[["self"],["f"]]]],[0,"node_debug_helpers",R[1580],"Helper functions for debug interface.",N,N],[5,"create_debug_client","debug_interface::node_debug_helpers",E,N,[[["u16"]],[R[1581]]]],[5,"check_node_up",E,E,N,[[[R[1581]]]]],[0,"node_debug_service",R[1580],"Debug interface to access information in a specific node.",N,N],[3,R[1592],R[1584],E,N,N],[11,"new",E,E,5,[[],["self"]]],[0,"json_log",R[1580],E,N,N],[3,R[1593],R[1585],E,N,N],[12,"name",E,E,6,N],[12,"timestamp",E,E,6,N],[12,"json",E,E,6,N],[5,"send_json_log",E,"Sends event to event stream.",N,[[[R[1582]]]]],[5,"pop_last_entries",E,"Get up to MAX_EVENTS_IN_QUEUE last events and clears the…",N,[[],[["vec",[R[1582]]],[R[1582]]]]],[11,"new",E,E,6,[[["value"],["str"]],["self"]]],[11,"new",R[1580],E,7,[[["asref",["str"]],["str"],["u16"]],["self"]]],[11,"from_socket_addr_str",E,"Create NodeDebugInterfaceClient from a valid socket address.",7,[[["asref",["str"]],["str"]],["self"]]],[11,"get_node_metric",E,E,7,[[["self"],["asref",["str"]],["str"]],[[R[0],[R[24]]],[R[24],["i64"]]]]],[11,"get_node_metrics",E,E,7,[[["self"]],[["hashmap",[R[58],"i64"]],[R[0],["hashmap"]]]]],[14,"event",E,"Writes event to event stream Example: event!(\"committed\",…",N,N],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,R[13],R[1583],E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[13],R[1584],E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"into",R[1585],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[1578],R[1584],E,5,[[["self"],[R[1508]],[R[1577]],[R[1530],[R[1575]]],[R[1575]]]]],[11,R[1586],E,E,5,[[["self"],[R[1508]],[R[1530],[R[1576]]],[R[1579]],[R[1576]]]]],[11,R[75],R[1583],E,8,[[],[R[1577]]]],[11,R[75],E,E,0,[[],[R[1575]]]],[11,R[75],E,E,9,[[],[R[1579]]]],[11,R[75],E,E,1,[[],[R[1576]]]],[11,R[75],E,E,2,[[],["event"]]],[11,R[75],R[1584],E,5,[[],[R[1587]]]],[11,"clone",R[1583],E,8,[[["self"]],[R[1577]]]],[11,"clone",E,E,0,[[["self"]],[R[1575]]]],[11,"clone",E,E,9,[[["self"]],[R[1579]]]],[11,"clone",E,E,1,[[["self"]],[R[1576]]]],[11,"clone",E,E,2,[[["self"]],["event"]]],[11,"clone",E,E,4,[[["self"]],[R[1581]]]],[11,"clone",R[1584],E,5,[[["self"]],[R[1587]]]],[11,"eq",R[1583],E,8,[[["self"],[R[1577]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1575]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1575]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1579]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1576]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1576]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["event"]],["bool"]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,R[514],E,E,8,[[["self"],["b"]]]],[11,R[515],E,E,8,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,8,[[["self"]],["usize"]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[514],E,E,0,[[["self"],["b"]]]],[11,R[515],E,E,0,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,0,[[["self"]],["usize"]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[514],E,E,9,[[["self"],["b"]]]],[11,R[515],E,E,9,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,9,[[["self"]],["usize"]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[514],E,E,1,[[["self"],["b"]]]],[11,R[515],E,E,1,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,1,[[["self"]],["usize"]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[514],E,E,2,[[["self"],["b"]]]],[11,R[515],E,E,2,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,2,[[["self"]],["usize"]]],[11,"clear",E,E,2,[[["self"]]]]],"p":[[3,R[1588]],[3,R[1589]],[3,"Event"],[8,R[1590]],[3,R[1591]],[3,R[1592]],[3,R[1593]],[3,R[1594]],[3,R[1595]],[3,R[1596]]]};
searchIndex["executable_helpers"]={"doc":E,"i":[[0,"helpers","executable_helpers",E,N,N],[5,"load_config_from_path","executable_helpers::helpers",E,N,[[[R[24],["path"]],["path"]],[R[929]]]],[5,"setup_metrics",E,E,N,[[[R[929]],["str"]]]],[5,"setup_executable",E,E,N,[[["bool"],[R[24],["path"]],["path"]]]]],"p":[]};
searchIndex["executor"]={"doc":E,"i":[[3,R[1893],"executor","A structure that summarizes the result of the execution…",N,N],[12,"executed_state",E,E,0,N],[12,"compute_status",E,"The compute status (success/failure) of the given payload.…",0,N],[3,R[1894],E,"Executed state derived from StateComputeResult that is…",N,N],[12,"state_id",E,"Tracks the execution state of a proposed block",1,N],[12,R[279],E,"Version of after executing a proposed block. This state…",1,N],[12,"validators",E,"If set, this is the validator set that should be changed…",1,N],[3,R[1895],E,"The entire set of data associated with a transaction. In…",N,N],[3,R[1896],E,"Generated by processing VM's output.",N,N],[3,"Executor",E,"`Executor` implements all functionalities the execution…",N,N],[3,R[1897],E,E,N,N],[3,R[1898],E,E,N,N],[11,R[279],E,E,0,[[["self"]],[R[279]]]],[11,R[570],E,E,0,[[["self"]],[R[149]]]],[11,"status",E,E,0,[[["self"]],["vec"]]],[11,R[1899],E,E,0,[[["self"]],["bool"]]],[11,"state_for_genesis",E,E,1,[[],["self"]]],[11,"txn_info_hash",E,E,2,[[["self"]],[[R[24],[R[149]]],[R[149]]]]],[11,"new",E,E,3,[[["vec",[R[1886]]],[R[1886]],[R[24],[R[278]]],[R[1887]],[R[278]]],["self"]]],[11,"transaction_data",E,E,3,[[["self"]]]],[11,R[2183],E,E,3,[[["self"]],[R[1887]]]],[11,"accu_root",E,E,3,[[["self"]],[R[149]]]],[11,R[279],E,E,3,[[["self"]],[[R[24],[R[279]]],[R[279]]]]],[11,"validators",E,E,3,[[["self"]],[R[24]]]],[11,"set_validators",E,E,3,[[["self"],[R[278]]]]],[11,"state_compute_result",E,E,3,[[["self"]],[R[1891]]]],[11,"new",E,"Constructs an `Executor`.",4,[[["arc",[R[1556]]],[R[1888]],["arc",[R[1888]]],[R[1556]],[R[929]]],["self"]]],[11,R[1674],E,"Executes a block.",4,[[["self"],["vec",[R[351]]],[R[149]],[R[351]],[R[1887]]],[[R[2013],[R[0]]],[R[0],[R[1890]]]]]],[11,"commit_blocks",E,"Commits a block and all its ancestors within a block…",4,[[["self"],["vec",[R[1889]]],[R[1889]],[R[298]]],[[R[0]],[R[2013],[R[0]]]]]],[11,"execute_and_commit_chunk",E,"Executes and commits a chunk of transactions that are…",4,[[["self"],[R[301]],[R[298]]],[[R[0]],[R[2013],[R[0]]]]]],[11,"committed_trees",E,E,4,[[["self"]],[R[1887]]]],[11,"new",E,E,5,[[["vec",[R[351]]],["arc",[R[1890]]],[R[1890]],[R[351]]],["self"]]],[11,"state_tree",E,E,6,[[["self"]],["arc"]]],[11,"txn_accumulator",E,E,6,[[["self"]],["arc"]]],[11,R[279],E,E,6,[[["self"]],[[R[24],[R[279]]],[R[279]]]]],[11,"state_id",E,E,6,[[["self"]],[R[149]]]],[11,"state_root",E,E,6,[[["self"]],[R[149]]]],[11,"new",E,E,6,[[[R[149]],["vec",[R[149]]],["u64"]],[R[1887]]]],[11,R[324],E,E,6,[[],[R[1887]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"drop",E,E,4,[[["self"]]]],[11,R[75],E,E,0,[[],[R[1891]]]],[11,R[75],E,E,1,[[],[R[1892]]]],[11,"clone",E,E,0,[[["self"]],[R[1891]]]],[11,"clone",E,E,1,[[["self"]],[R[1892]]]],[11,"clone",E,E,2,[[["self"]],[R[1886]]]],[11,"clone",E,E,3,[[["self"]],[R[1890]]]],[11,"clone",E,E,6,[[["self"]],[R[1887]]]],[11,"eq",E,E,0,[[["self"],[R[1891]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1891]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1892]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1892]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,R[193],E,E,1,[[["__d"]],[R[0]]]],[11,R[142],E,E,1,[[["self"],["__s"]],[R[0]]]]],"p":[[3,R[1893]],[3,R[1894]],[3,R[1895]],[3,R[1896]],[3,"Executor"],[3,R[1897]],[3,R[1898]]]};
searchIndex["functional_tests"]={"doc":E,"i":[[0,"checker",R[1850],E,N,N],[4,"Directive",R[1855],"A directive specifies a pattern in the output. Directives…",N,N],[13,R[404],E,E,0,N],[13,"Stage",E,"Matches the specified stage in the output. Acts as a…",0,N],[13,"Check",E,"Used to build the filecheck checker. Right now all…",0,N],[5,"run_filecheck",E,"Check the output using filecheck checker.",N,[[["str"]],[[R[0],["bool"]],["bool"]]]],[5,"check",E,"Verifies the directives against the given evaluation result.",N,[[[R[1854]]],[R[0]]]],[0,"config",R[1850],E,N,N],[0,"global",R[1852],E,N,N],[3,R[1851],R[1856],"Struct that specifies the initial setup of an account.",N,N],[12,"name",E,"Name of the account. The name is case insensitive.",1,N],[12,"balance",E,"The initial balance of the account.",1,N],[12,R[281],E,"The initial sequence number of the account.",1,N],[12,"role",E,"Special role this account has in the system (if any)",1,N],[3,"Config",E,"A table of options either shared by all transactions or…",N,N],[12,"accounts",E,"A map from account names to account data",2,N],[12,"genesis_accounts",E,E,2,N],[12,R[1876],E,"The validator set after genesis",2,N],[4,"Role",E,E,N,N],[13,"Validator",E,"Means that the account is a current validator; its address…",3,N],[4,"Entry",E,"A raw entry extracted from the input. Used to build the…",N,N],[13,R[1851],E,"Defines an account that can be used in tests.",4,N],[11,R[1865],E,E,4,[[["self"]],["bool"]]],[11,"build",E,E,2,[[],[R[0]]]],[11,"get_account_for_name",E,E,2,[[["self"],["str"]],[[R[0],["account"]],["account"]]]],[0,R[351],R[1852],E,N,N],[3,"Config",R[1857],"A table of options specific to one transaction, fine…",N,N],[12,"disabled_stages",E,E,5,N],[12,"sender",E,E,5,N],[12,"args",E,E,5,N],[12,"max_gas",E,E,5,N],[12,R[281],E,E,5,N],[4,"Argument",E,"A partially parsed transaction argument.",N,N],[13,"AddressOf",E,E,6,N],[13,"SelfContained",E,E,6,N],[4,"Entry",E,"A raw entry extracted from the input. Used to build a…",N,N],[13,"DisableStages",E,E,7,N],[13,"Sender",E,E,7,N],[13,"Arguments",E,E,7,N],[13,"MaxGas",E,E,7,N],[13,"SequenceNumber",E,E,7,N],[5,"is_new_transaction",E,"Checks whether a line denotes the start of a new…",N,[[["str"]],["bool"]]],[11,"try_parse",E,E,7,[[["str"]],[[R[0],[R[24]]],[R[24]]]]],[11,"build",E,"Builds a transaction config table from raw entries.",5,[[[R[1853]]],[R[0]]]],[11,"is_stage_disabled",E,E,5,[[["self"],["stage"]],["bool"]]],[0,"errors",R[1850],E,N,N],[3,"Error",R[1858],R[42],N,N],[4,"ErrorKind",E,"Defines all errors in this crate.",N,N],[13,"VMExecutionFailure",E,E,8,N],[13,"DiscardedTransaction",E,E,8,N],[13,"CheckerFailure",E,E,8,N],[13,"VerificationFailure",E,E,8,N],[13,"Other",E,E,8,N],[6,"Result",E,"The common result type used in this crate.",N,N],[0,"evaluator",R[1850],E,N,N],[3,R[404],R[1859],"A transaction to be evaluated by the testing infra.…",N,N],[12,"config",E,E,9,N],[12,"input",E,E,9,N],[3,R[1862],E,"A log consisting of outputs from all stages and the final…",N,N],[12,"outputs",E,E,10,N],[4,"Stage",E,"Indicates one step in the pipeline the given move…",N,N],[13,"Parser",E,E,11,N],[13,"Compiler",E,E,11,N],[13,"Verifier",E,E,11,N],[13,"Serializer",E,E,11,N],[13,"Runtime",E,E,11,N],[4,"Status",E,"Evaluation status: success or failure.",N,N],[13,"Success",E,E,12,N],[13,"Failure",E,E,12,N],[4,"OutputType",E,E,N,N],[13,R[858],E,E,13,N],[13,R[857],E,E,13,N],[13,"Ast",E,E,13,N],[13,R[554],E,E,13,N],[4,R[1863],E,"An entry in the `EvaluationLog`.",N,N],[13,R[404],E,E,14,N],[13,"Stage",E,E,14,N],[13,"Output",E,E,14,N],[13,"Error",E,E,14,N],[13,"Status",E,E,14,N],[5,"eval",E,"Feeds all given transactions through the pipeline and…",N,[[[R[1853]]],[[R[1854]],[R[0],[R[1854]]]]]],[6,"TransactionId",E,E,N,N],[11,"to_check_string",E,E,13,[[["self"]],[R[58]]]],[11,"get_failed_transactions",E,E,10,[[["self"]],["vec"]]],[0,"utils",R[1850],E,N,N],[3,R[1864],R[1860],E,N,N],[12,"config_entries",E,E,15,N],[12,"text",E,E,15,N],[5,"substitute_addresses",E,"Substitutes the placeholders (account names in double…",N,[[[R[1853]],["str"]],[R[58]]]],[5,"split_input",E,"Parses the input string into three parts: a global config,…",N,[[["str"]],[R[0]]]],[5,"build_transactions",E,E,N,[[[R[1853]]],[["vec",[R[351]]],[R[0],["vec"]]]]],[11,R[13],R[1855],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[1856],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",R[1857],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[1858],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[58]]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,R[59],E,E,16,[[["self"]],["fail"]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,R[59],E,E,8,[[["self"]],["fail"]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",R[1859],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[1038],E,E,11,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,11,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[58]]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",R[1860],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"fmt",R[1858],E,16,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,R[59],E,E,16,[[["self"]],["fail"]]],[11,"from",E,E,16,[[["f"]],["error"]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"as_ref",E,E,16,[[["self"]],["fail"]]],[11,"clone",R[1855],E,0,[[["self"]],["directive"]]],[11,"clone",R[1858],E,8,[[["self"]],["errorkind"]]],[11,"clone",R[1859],E,11,[[["self"]],["stage"]]],[11,"clone",E,E,12,[[["self"]],["status"]]],[11,"clone",E,E,13,[[["self"]],["outputtype"]]],[11,R[247],E,E,11,[[["self"],["stage"]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",E,E,11,[[["self"],["stage"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["status"]],["bool"]]],[11,"cmp",E,E,11,[[["self"],["stage"]],[R[32]]]],[11,"fmt",R[1855],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1856],E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1857],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1858],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1859],E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1858],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1859],E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,R[1861],R[1855],E,0,[[["str"]],[R[0]]]],[11,R[1861],R[1856],E,3,[[["str"]],[R[0]]]],[11,R[1861],E,E,4,[[["str"]],[R[0]]]],[11,R[1861],R[1857],E,6,[[["str"]],[R[0]]]],[11,R[1861],E,E,7,[[["str"]],[R[0]]]],[11,R[1861],R[1859],E,11,[[["str"]],[R[0]]]],[11,"name",R[1858],E,8,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,8,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,8,[[["self"]],[[R[35]],[R[24],[R[35]]]]]],[11,R[1866],E,R[1867],16,[[["box",["error"]],["error"]],["error"]]],[11,R[59],E,R[1868],16,[[["self"]],["fail"]]],[11,"name",E,R[1869],16,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"cause",E,R[45],16,[[["self"]],["fail"]]],[11,R[35],E,R[1870],16,[[["self"]],[R[35]]]],[11,R[25],E,R[1871],16,[[["d"]],[R[25]]]],[11,R[36],E,R[1872],16,[[],[["error"],[R[36],["error"]]]]],[11,"downcast",E,R[62],16,[[],[["error"],[R[0],["error"]]]]],[11,R[66],E,R[1873],16,[[["self"]],["fail"]]],[11,R[67],E,R[1874],16,[[["self"]],[R[68]]]],[11,R[69],E,R[70],16,[[["self"]],[R[68]]]],[11,R[63],E,R[62],16,[[["self"]],[[T],[R[24]]]]],[11,R[64],E,R[62],16,[[["self"]],[[T],[R[24]]]]],[11,R[71],E,R[72],16,[[["self"]],["fail"]]],[11,R[68],E,R[1875],16,[[["self"]],[R[68]]]]],"p":[[4,"Directive"],[3,R[1851]],[3,"Config"],[4,"Role"],[4,"Entry"],[3,"Config"],[4,"Argument"],[4,"Entry"],[4,"ErrorKind"],[3,R[404]],[3,R[1862]],[4,"Stage"],[4,"Status"],[4,"OutputType"],[4,R[1863]],[3,R[1864]],[3,"Error"]]};
searchIndex["futures_semaphore"]={"doc":"`Semaphore` holds a set of permits. Permits are used to…","i":[[3,R[29],"futures_semaphore","A futures-aware semaphore.",N,N],[3,"Permit",E,"A permit acquired from a semaphore, allowing access to a…",N,N],[11,"new",E,"Create a new semaphore with `capacity` number of available…",0,[[["usize"]],["self"]]],[11,"capacity",E,E,0,[[["self"]],["usize"]]],[11,"available_permits",E,E,0,[[["self"]],["usize"]]],[11,"is_idle",E,E,0,[[["self"]],["bool"]]],[11,"is_full",E,E,0,[[["self"]],["bool"]]],[11,"acquire",E,"Acquire an available permit from the semaphore, blocking…",0,[[["self"]]]],[11,"try_acquire",E,"Try to acquire an available permit from the semaphore. If…",0,[[["self"]],[["permit"],[R[24],["permit"]]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],["semaphore"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,R[29]],[3,"Permit"]]};
searchIndex["generate_keypair"]={"doc":E,"i":[[5,"create_faucet_key_file",R[163],E,N,[[["str"]],[[R[192]],[R[248],[R[192],R[181]]],[R[181]]]]],[5,"load_key_from_file",E,"Tries to load a keypair from the path given as argument",N,[[["asref",["path"]],["path"]],[[R[0],[R[248]]],[R[248],[R[192],R[181]]]]]],[5,"load_faucet_key_or_create_default",E,"Returns the generated or loaded keypair, the path to the…",N,[[[R[58]],[R[24],[R[58]]]]]]],"p":[]};
searchIndex["grpc_helpers"]={"doc":E,"i":[[3,R[1555],R[1938],E,N,N],[5,"default_reply_error_logger",E,E,N,[[["debug"]]]],[5,"create_grpc_invalid_arg_status",E,E,N,[[["str"],["error"]],["rpcstatus"]]],[5,"provide_grpc_response",E,"This is a helper method to return a response to the GRPC…",N,[[[R[1530]],[R[0]],[R[1508]],["debug"]]]],[5,"spawn_service_thread",E,E,N,[[["service"],[R[58]],["u16"]],[R[1554]]]],[5,"spawn_service_thread_with_drop_closure",E,E,N,[[[R[24],["i32"]],["service"],["i32"],[R[58]],["u16"],["f"]],[R[1554]]]],[5,"convert_grpc_response",E,E,N,[[[R[0]]]]],[11,"setup_with_drop_closure",E,E,0,[[["box",["fnonce"]],["server"],[R[24],["box"]]],["self"]]],[11,"setup",E,E,0,[[["server"]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,R[1555]]]};
searchIndex["invalid_mutations"]={"doc":E,"i":[[0,"bounds",R[903],E,N,N],[3,R[913],R[907],E,N,N],[3,R[912],E,"Represents a single mutation onto a code unit to make it…",N,N],[3,R[914],E,"Represents a single mutation to a `CompiledModule` to…",N,N],[3,R[915],E,E,N,N],[4,R[911],E,"Represents the number of pointers that exist out from a…",N,N],[13,"One",E,"Exactly one pointer out with this index kind as its…",0,N],[13,"Optional",E,"Zero or one pointer out with this index kind as its…",0,N],[13,"Star",E,"Zero or more pointers out with this index kind as its…",0,N],[11,R[904],E,E,1,[[]]],[11,"new",E,E,2,[[["vec",[R[901]]],[R[749]],[R[901]]],["self"]]],[11,"apply",E,E,2,[[],[["vec",[R[493]]],[R[493]]]]],[7,"VALID_POINTER_SRCS",E,E,N,N],[11,"pointers_from",E,"A list of what pointers (indexes) exist out from a…",0,[[[R[718]]]]],[11,"to_index_kind",E,E,0,[[],[R[718]]]],[11,R[904],E,E,3,[[]]],[11,"new",E,E,4,[[["vec",[R[902]]],[R[902]],[R[750]]],["self"]]],[11,"apply",E,E,4,[[]]],[0,R[412],R[903],E,N,N],[3,R[917],R[908],"Represents a mutation that wraps a signature token up in a…",N,N],[3,R[918],E,"Context for applying a list of `DoubleRefMutation`…",N,N],[3,R[919],E,"Represents a mutation that turns a field definition's type…",N,N],[3,R[920],E,"Context for applying a list of `FieldRefMutation` instances.",N,N],[4,R[916],E,E,N,N],[13,"Type",E,E,5,N],[13,"FunctionReturn",E,E,5,N],[13,"FunctionArg",E,E,5,N],[13,"Locals",E,E,5,N],[11,R[904],E,E,6,[[]]],[11,"new",E,E,7,[[[R[749]],["vec",[R[905]]],[R[905]]],["self"]]],[11,"apply",E,E,7,[[],[["vec",[R[493]]],[R[493]]]]],[11,R[904],E,E,8,[[]]],[11,"new",E,E,9,[[[R[906]],[R[749]],["vec",[R[906]]]],["self"]]],[11,"apply",E,E,9,[[],[["vec",[R[493]]],[R[493]]]]],[11,"into",R[907],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[908],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"clone",R[907],E,0,[[["self"]],[R[909]]]],[11,"clone",R[908],E,6,[[["self"]],[R[905]]]],[11,"clone",E,E,8,[[["self"]],[R[906]]]],[11,"clone",E,E,5,[[["self"]],[R[910]]]],[11,"as_ref",R[907],E,1,[[["self"]],[R[16]]]],[11,"as_ref",E,E,3,[[["self"]],[R[16]]]],[11,"as_ref",R[908],E,6,[[["self"]],[R[16]]]],[11,"as_ref",E,E,8,[[["self"]],[R[16]]]],[11,"eq",R[907],E,0,[[["self"],[R[909]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[909]]],["bool"]]],[11,"eq",R[908],E,5,[[["self"],[R[910]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[910]]],["bool"]]],[11,"hash",R[907],E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[908],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]]],"p":[[4,R[911]],[3,R[912]],[3,R[913]],[3,R[914]],[3,R[915]],[4,R[916]],[3,R[917]],[3,R[918]],[3,R[919]],[3,R[920]]]};
searchIndex["ir_to_bytecode"]={"doc":E,"i":[[0,"compiler",R[1120],E,N,N],[5,R[1615],"ir_to_bytecode::compiler","Compile a transaction program.",N,[[[R[265]],["program"]],[R[0]]]],[5,R[1803],E,"Compile a transaction script.",N,[[[R[265]],["script"]],[R[0]]]],[5,"compile_module",E,"Compile a module.",N,[[[R[265]],[R[609]]],[R[0]]]],[0,"errors",R[1120],E,N,N],[4,R[1125],R[1123],E,N,N],[13,"BoundsCheckErrors",E,E,0,N],[0,"parser",R[1120],E,N,N],[0,"ast",R[1122],E,N,N],[3,"Spanned",R[1121],R[1126],N,N],[12,"span",E,R[1127],1,N],[12,"value",E,R[1128],1,N],[6,"Loc",E,R[1254],N,N],[3,"Program",E,R[1129],N,N],[12,"modules",E,R[1130],2,N],[12,"script",E,R[729],2,N],[4,R[644],E,R[1177],N,N],[13,"Script",E,R[1178],3,N],[13,"Module",E,R[1179],3,N],[3,"Script",E,R[1131],N,N],[12,"imports",E,R[1132],4,N],[12,"main",E,R[1133],4,N],[3,R[651],E,R[1134],N,N],[3,R[638],E,R[1135],N,N],[12,"name",E,R[1136],5,N],[12,R[333],E,R[1137],5,N],[3,R[639],E,R[1138],N,N],[12,"name",E,R[1139],6,N],[12,"imports",E,R[1140],6,N],[12,"structs",E,R[1141],6,N],[12,R[775],E,R[1142],6,N],[4,R[645],E,R[1180],N,N],[13,R[404],E,E,7,N],[13,"Qualified",E,E,7,N],[3,R[640],E,R[1143],N,N],[12,"ident",E,R[1144],8,N],[12,"alias",E,R[1145],8,N],[3,"Var",E,R[1146],N,N],[6,"Var_",E,R[1255],N,N],[3,"TypeVar",E,R[1147],N,N],[6,"TypeVar_",E,R[1256],N,N],[4,"Kind",E,R[1181],N,N],[13,"All",E,R[1182],9,N],[13,"Resource",E,R[736],9,N],[13,R[737],E,R[738],9,N],[4,"Type",E,R[1183],N,N],[13,R[739],E,"`address`",10,N],[13,"U64",E,"`u64`",10,N],[13,"Bool",E,"`bool`",10,N],[13,R[305],E,R[1184],10,N],[13,"String",E,R[1185],10,N],[13,"Struct",E,R[1186],10,N],[13,R[682],E,R[1187],10,N],[13,R[681],E,R[1188],10,N],[3,R[641],E,R[1148],N,N],[12,"module",E,R[1149],11,N],[12,"name",E,R[1150],11,N],[6,"Field",E,R[1257],N,N],[6,"Field_",E,R[1258],N,N],[6,"Fields",E,R[1259],N,N],[3,R[652],E,R[1151],N,N],[3,R[642],E,R[1152],N,N],[12,R[721],E,R[1153],12,N],[12,"name",E,R[1154],12,N],[12,R[605],E,R[1155],12,N],[12,"fields",E,R[1156],12,N],[6,R[1260],E,R[1261],N,N],[4,R[646],E,R[1189],N,N],[13,"Move",E,R[1190],13,N],[12,"fields","ir_to_bytecode::parser::ast::StructDefinitionFields",E,13,N],[13,"Native",R[1121],R[1191],13,N],[3,R[653],E,R[1157],N,N],[3,R[643],E,R[1158],N,N],[12,"formals",E,R[1159],14,N],[12,R[1160],E,R[1161],14,N],[12,R[605],E,R[1162],14,N],[4,R[647],E,R[1192],N,N],[13,"Public",E,R[1193],15,N],[13,"Internal",E,R[1194],15,N],[4,R[648],E,R[1195],N,N],[13,"Move",E,R[1196],16,N],[12,"locals","ir_to_bytecode::parser::ast::FunctionBody",E,16,N],[12,"code",E,E,16,N],[13,"Native",R[1121],R[1197],16,N],[3,R[1396],E,R[1163],N,N],[12,R[1377],E,R[1164],17,N],[12,R[412],E,R[1165],17,N],[12,R[1399],E,R[725],17,N],[12,"body",E,R[1166],17,N],[6,"Function_",E,R[1262],N,N],[4,"Builtin",E,R[1198],N,N],[13,"Exists",E,R[1199],18,N],[13,R[1200],E,R[1201],18,N],[13,R[743],E,R[1202],18,N],[13,R[744],E,R[1203],18,N],[13,R[748],E,R[1204],18,N],[13,R[1205],E,R[1206],18,N],[13,R[747],E,R[1207],18,N],[13,R[745],E,R[1208],18,N],[13,R[1464],E,R[1209],18,N],[13,R[746],E,R[1210],18,N],[13,"Freeze",E,R[1211],18,N],[4,R[607],E,R[1212],N,N],[13,"Builtin",E,R[1213],19,N],[13,R[1214],E,R[1215],19,N],[12,"module","ir_to_bytecode::parser::ast::FunctionCall",E,19,N],[12,"name",E,E,19,N],[12,R[988],E,E,19,N],[6,R[1263],R[1121],R[1264],N,N],[4,"LValue",E,R[1216],N,N],[13,"Var",E,"`x`",20,N],[13,"Mutate",E,"`*e`",20,N],[13,"Pop",E,"`_`",20,N],[6,"LValue_",E,E,N,N],[4,"Cmd",E,R[1217],N,N],[13,"Assign",E,R[1218],21,N],[13,"Unpack",E,R[1219],21,N],[13,"Abort",E,"`abort e`",21,N],[13,"Return",E,R[1220],21,N],[13,"Break",E,"`break`",21,N],[13,R[1429],E,"`continue`",21,N],[13,"Exp",E,E,21,N],[6,"Cmd_",E,R[1265],N,N],[3,"IfElse",E,R[1167],N,N],[12,"cond",E,R[1168],22,N],[12,R[619],E,R[1169],22,N],[12,R[1401],E,R[1170],22,N],[3,"While",E,R[1171],N,N],[12,"cond",E,R[1172],23,N],[12,"block",E,R[1173],23,N],[3,"Loop",E,R[1174],N,N],[12,"block",E,R[1175],24,N],[4,R[649],E,E,N,N],[13,R[1221],E,"`c;`",25,N],[13,R[1222],E,R[1223],25,N],[13,R[1224],E,R[1225],25,N],[13,R[1226],E,R[1227],25,N],[13,R[1228],E,R[1229],25,N],[3,"Block",E,"`{ s }`",N,N],[12,"stmts",E,R[1176],26,N],[6,"Block_",E,R[1266],N,N],[4,R[650],E,R[1230],N,N],[13,R[739],E,R[1231],27,N],[13,"U64",E,R[1232],27,N],[13,"Bool",E,R[1233],27,N],[13,R[305],E,R[1234],27,N],[13,"String",E,R[1235],27,N],[6,R[1267],E,R[1268],N,N],[6,"ExpFields",E,R[1269],N,N],[4,"UnaryOp",E,R[1236],N,N],[13,"Not",E,R[1237],28,N],[4,"BinOp",E,R[1238],N,N],[13,"Add",E,"`+`",29,N],[13,"Sub",E,"`-`",29,N],[13,"Mul",E,"`*`",29,N],[13,"Mod",E,"`%`",29,N],[13,"Div",E,"`/`",29,N],[13,"BitOr",E,"`|`",29,N],[13,"BitAnd",E,"`&`",29,N],[13,"Xor",E,"`^`",29,N],[13,"And",E,"`&&`",29,N],[13,"Or",E,"`||`",29,N],[13,"Eq",E,"`==`",29,N],[13,"Neq",E,"`!=`",29,N],[13,"Lt",E,"`<`",29,N],[13,"Gt",E,"`>`",29,N],[13,"Le",E,"`<=`",29,N],[13,"Ge",E,"`>=`",29,N],[4,"Exp",E,R[1239],N,N],[13,R[1240],E,"`*e`",30,N],[13,R[1424],E,"`op e`",30,N],[13,R[1425],E,R[1241],30,N],[13,"Value",E,R[1242],30,N],[13,"Pack",E,R[1243],30,N],[13,"Borrow",E,R[1244],30,N],[12,"is_mutable","ir_to_bytecode::parser::ast::Exp",R[1245],30,N],[12,"exp",E,R[1246],30,N],[12,"field",E,R[1247],30,N],[13,"Move",R[1121],"`move(x)`",30,N],[13,"Copy",E,"`copy(x)`",30,N],[13,R[1248],E,R[1249],30,N],[13,R[607],E,R[1250],30,N],[13,"ExprList",E,R[1251],30,N],[6,"Exp_",E,R[1270],N,N],[5,R[1252],E,R[1253],N,[[],[[R[608],["error"]],[R[0],["field",R[608]]],["field"]]]],[5,R[1367],R[1122],R[1368],N,[[["char"]],["bool"]]],[5,R[1369],E,R[1370],N,[[["char"]],["bool"]]],[5,R[1371],E,R[1372],N,[[["char"]],["bool"]]],[5,"parse_script_or_module",E,"Given the raw input of a file, creates a `ScriptOrModule`…",N,[[["str"]],[[R[625]],[R[0],[R[625]]]]]],[5,"parse_program",E,"Given the raw input of a file, creates a `Program` struct…",N,[[["str"]],[[R[0],["program"]],["program"]]]],[5,"parse_script",E,"Given the raw input of a file, creates a `Script` struct…",N,[[["str"]],[[R[0],["script"]],["script"]]]],[5,"parse_module",E,"Given the raw input of a file, creates a single…",N,[[["str"]],[[R[0],[R[609]]],[R[609]]]]],[5,"parse_cmd",E,"Given the raw input of a file, creates a single `Cmd`…",N,[[[R[265]],["str"]],[[R[0],["cmd"]],["cmd"]]]],[11,R[13],R[1123],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[59],E,E,0,[[["self"]],["fail"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[13],R[1121],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[451],E,E,1,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[452],E,E,1,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,R[453],E,R[454],1,[[["self"]],[["u5"],["vec",["u5"]]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[455],E,E,1,[[],[[R[0],["vec"]],["vec",["u5"]]]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[58]]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,R[246],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[58]]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[57],E,E,31,[[["self"]],[R[58]]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[1038],E,E,31,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[1038],E,E,5,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[58]]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[1038],E,E,7,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[57],E,E,32,[[["self"]],[R[58]]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[1038],E,E,32,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[57],E,E,33,[[["self"]],[R[58]]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[1038],E,E,33,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[58]]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[1038],E,E,9,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[1038],E,E,11,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[57],E,E,34,[[["self"]],[R[58]]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[1038],E,E,34,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[57],E,E,35,[[["self"]],[R[58]]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[1038],E,E,35,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[58]]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[57],E,E,17,[[["self"]],[R[58]]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[57],E,E,18,[[["self"]],[R[58]]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[57],E,E,19,[[["self"]],[R[58]]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[57],E,E,20,[[["self"]],[R[58]]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[57],E,E,21,[[["self"]],[R[58]]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[57],E,E,22,[[["self"]],[R[58]]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[57],E,E,23,[[["self"]],[R[58]]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[57],E,E,24,[[["self"]],[R[58]]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[57],E,E,25,[[["self"]],[R[58]]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,R[246],E,E,26,[[],["i"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[57],E,E,26,[[["self"]],[R[58]]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[57],E,E,27,[[["self"]],[R[58]]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[57],E,E,28,[[["self"]],[R[58]]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[57],E,E,29,[[["self"]],[R[58]]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[57],E,E,30,[[["self"]],[R[58]]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"as_ref",E,E,1,[[["self"]],[T]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"clone",E,E,15,[[["self"]],[R[629]]]],[11,"clone",E,E,5,[[["self"]],[R[632]]]],[11,"clone",E,E,25,[[["self"]],[R[620]]]],[11,"clone",E,E,2,[[["self"]],["program"]]],[11,"clone",E,E,13,[[["self"]],[R[634]]]],[11,"clone",E,E,33,[[["self"]],["typevar"]]],[11,"clone",E,E,34,[[["self"]],[R[615]]]],[11,"clone",E,E,1,[[["self"]],["spanned"]]],[11,"clone",E,E,29,[[["self"]],["binop"]]],[11,"clone",E,E,3,[[["self"]],[R[625]]]],[11,"clone",E,E,7,[[["self"]],[R[626]]]],[11,"clone",E,E,19,[[["self"]],[R[637]]]],[11,"clone",E,E,8,[[["self"]],[R[610]]]],[11,"clone",E,E,17,[[["self"]],[R[636]]]],[11,"clone",E,E,30,[[["self"]],["exp"]]],[11,"clone",E,E,24,[[["self"]],["loop"]]],[11,"clone",E,E,10,[[["self"]],["type"]]],[11,"clone",E,E,18,[[["self"]],["builtin"]]],[11,"clone",E,E,21,[[["self"]],["cmd"]]],[11,"clone",E,E,16,[[["self"]],[R[630]]]],[11,"clone",E,E,4,[[["self"]],["script"]]],[11,"clone",E,E,32,[[["self"]],["var"]]],[11,"clone",E,E,35,[[["self"]],[R[628]]]],[11,"clone",E,E,14,[[["self"]],[R[635]]]],[11,"clone",E,E,27,[[["self"]],[R[631]]]],[11,"clone",E,E,9,[[["self"]],["kind"]]],[11,"clone",E,E,6,[[["self"]],[R[609]]]],[11,"clone",E,E,23,[[["self"]],["while"]]],[11,"clone",E,E,26,[[["self"]],["block"]]],[11,"clone",E,E,12,[[["self"]],[R[633]]]],[11,"clone",E,E,11,[[["self"]],[R[627]]]],[11,"clone",E,E,22,[[["self"]],["ifelse"]]],[11,"clone",E,E,20,[[["self"]],["lvalue"]]],[11,"clone",E,E,28,[[["self"]],["unaryop"]]],[11,"clone",E,E,31,[[["self"]],[R[611]]]],[11,"next",E,E,4,[[["self"]],[[R[24],[R[620]]],[R[620]]]]],[11,"next",E,E,26,[[["self"]],[[R[24],[R[620]]],[R[620]]]]],[11,R[247],E,E,5,[[["self"],[R[632]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,5,[[["self"],[R[632]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[632]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[632]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[632]]],["bool"]]],[11,R[247],E,E,7,[[["self"],[R[626]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,7,[[["self"],[R[626]]],["bool"]]],[11,"le",E,E,7,[[["self"],[R[626]]],["bool"]]],[11,"gt",E,E,7,[[["self"],[R[626]]],["bool"]]],[11,"ge",E,E,7,[[["self"],[R[626]]],["bool"]]],[11,R[247],E,E,34,[[["self"],[R[615]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,34,[[["self"],[R[615]]],["bool"]]],[11,"le",E,E,34,[[["self"],[R[615]]],["bool"]]],[11,"gt",E,E,34,[[["self"],[R[615]]],["bool"]]],[11,"ge",E,E,34,[[["self"],[R[615]]],["bool"]]],[11,R[247],E,E,11,[[["self"],[R[627]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,11,[[["self"],[R[627]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[627]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[627]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[627]]],["bool"]]],[11,R[247],E,E,31,[[["self"],[R[611]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,31,[[["self"],[R[611]]],["bool"]]],[11,"le",E,E,31,[[["self"],[R[611]]],["bool"]]],[11,"gt",E,E,31,[[["self"],[R[611]]],["bool"]]],[11,"ge",E,E,31,[[["self"],[R[611]]],["bool"]]],[11,R[247],E,E,35,[[["self"],[R[628]]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,35,[[["self"],[R[628]]],["bool"]]],[11,"le",E,E,35,[[["self"],[R[628]]],["bool"]]],[11,"gt",E,E,35,[[["self"],[R[628]]],["bool"]]],[11,"ge",E,E,35,[[["self"],[R[628]]],["bool"]]],[11,R[247],E,E,32,[[["self"],["var"]],[[R[32]],[R[24],[R[32]]]]]],[11,"lt",E,E,32,[[["self"],["var"]],["bool"]]],[11,"le",E,E,32,[[["self"],["var"]],["bool"]]],[11,"gt",E,E,32,[[["self"],["var"]],["bool"]]],[11,"ge",E,E,32,[[["self"],["var"]],["bool"]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,R[75],E,E,1,[[],["spanned"]]],[11,"cmp",E,E,7,[[["self"],[R[626]]],[R[32]]]],[11,"cmp",E,E,5,[[["self"],[R[632]]],[R[32]]]],[11,"cmp",E,E,34,[[["self"],[R[615]]],[R[32]]]],[11,"cmp",E,E,11,[[["self"],[R[627]]],[R[32]]]],[11,"cmp",E,E,31,[[["self"],[R[611]]],[R[32]]]],[11,"cmp",E,E,32,[[["self"],["var"]],[R[32]]]],[11,"cmp",E,E,35,[[["self"],[R[628]]],[R[32]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"eq",E,E,10,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,22,[[["self"],["ifelse"]],["bool"]]],[11,"ne",E,E,22,[[["self"],["ifelse"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[610]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[610]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["typevar"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["typevar"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[629]]],["bool"]]],[11,"eq",E,E,29,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["script"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[631]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[631]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["builtin"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["builtin"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[630]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[630]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[620]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[620]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["lvalue"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["lvalue"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,9,[[["self"],["kind"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["spanned"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["spanned"]],["bool"]]],[11,"eq",E,E,30,[[["self"],["exp"]],["bool"]]],[11,"ne",E,E,30,[[["self"],["exp"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["unaryop"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,26,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[637]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[637]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[626]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[626]]],["bool"]]],[11,"eq",E,E,32,[[["self"],["var"]],["bool"]]],[11,"ne",E,E,32,[[["self"],["var"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["while"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["while"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[615]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[615]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[632]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[632]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[627]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[627]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[628]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[628]]],["bool"]]],[11,"eq",E,E,24,[[["self"],["loop"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["loop"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["cmd"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["cmd"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[609]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[609]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[611]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[611]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[634]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[634]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[633]]],["bool"]]],[11,"clone",R[1123],E,0,[[["self"]],[R[1124]]]],[11,R[247],E,E,0,[[["self"],[R[1124]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,0,[[["self"],[R[1124]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[1124]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[1124]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[1124]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1124]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1124]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[1124]]],[R[32]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,0,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,"no_loc",R[1121],E,1,[[[T]],["spanned"]]],[11,"new",E,R[1271],2,[[["vec",[R[609]]],["script"],[R[609]]],["program"]]],[11,"new",E,R[1272],4,[[[R[636]],["spanned",[R[636]]],["vec",[R[610]]],[R[610]]],["script"]]],[11,"body",E,R[1273],4,[[["self"]],["block"]]],[11,R[613],E,R[614],4,[[["self"]],[["vec",[R[484]]],[R[484]]]]],[11,"new",E,R[1274],31,[[[R[264]]],[R[611]]]],[11,"parse",E,R[1275],31,[[],[[R[611]],[R[0],[R[611],R[608]]],[R[608],["error"]]]]],[11,"self_name",E,R[1276],31,[[],[R[271]]]],[11,R[1277],E,R[1278],31,[[],[R[611]]]],[11,R[280],E,R[616],31,[[],[R[264]]]],[11,R[618],E,R[1279],31,[[["self"]],[R[271]]]],[11,"new",E,R[1280],5,[[[R[611]],[R[265]]],[R[632]]]],[11,"name",E,R[1281],5,[[["self"]],[R[611]]]],[11,R[333],E,R[1282],5,[[["self"]],[R[265]]]],[11,"new",E,R[1283],6,[[["vec",["spanned"]],["spanned",[R[633]]],["vec"],["vec",[R[610]]],[R[610]]],[[R[0],[R[609],R[608]]],[R[608],["error"]],[R[609]]]]],[11,R[613],E,R[614],6,[[["self"]],[["vec",[R[484]]],[R[484]]]]],[11,"name",E,E,7,[[["self"]],[R[611]]]],[11,"new",E,R[1293],8,[[[R[611]],[R[626]],[R[24],[R[611]]]],[R[610]]]],[11,"new",E,R[1303],32,[[[R[264]]],["var"]]],[11,"new_",E,R[1304],32,[[[R[264]]],[["spanned",["var"]],["var"]]]],[11,"parse",E,R[1305],32,[[],[[R[0],["var",R[608]]],[R[608],["error"]],["var"]]]],[11,"name",E,R[1306],32,[[["self"]],[R[271]]]],[11,"new",E,R[1307],33,[[[R[264]]],["typevar"]]],[11,"parse",E,R[1308],33,[[],[["typevar"],[R[0],["typevar",R[608]]],[R[608],["error"]]]]],[11,"name",E,R[1309],33,[[["self"]],[R[271]]]],[11,"struct",E,R[1284],10,[[["type"],["vec",["type"]],[R[627]]],["type"]]],[11,R[996],E,R[1285],10,[[["type"],["bool"]],["type"]]],[11,R[333],E,R[1286],10,[[],["type"]]],[11,"u64",E,R[1287],10,[[],["type"]]],[11,"bool",E,R[1288],10,[[],["type"]]],[11,R[274],E,R[1289],10,[[],["type"]]],[11,"new",E,R[1290],11,[[[R[611]],[R[615]]],[R[627]]]],[11,"module",E,R[1291],11,[[["self"]],[R[611]]]],[11,"name",E,R[1292],11,[[["self"]],[R[615]]]],[11,"new",E,R[1294],34,[[[R[264]]],[R[615]]]],[11,"parse",E,R[1295],34,[[],[[R[0],[R[615],R[608]]],[R[615]],[R[608],["error"]]]]],[11,R[280],E,R[616],34,[[],[R[264]]]],[11,R[618],E,R[1296],34,[[["self"]],[R[271]]]],[11,R[1297],E,R[617],12,[[["vec"],["vec"],["bool"]],[[R[0],[R[633],R[608]]],[R[633]],[R[608],["error"]]]]],[11,"native",E,R[617],12,[[["vec"],["bool"]],[[R[0],[R[633],R[608]]],[R[633]],[R[608],["error"]]]]],[11,"new",E,R[1298],35,[[[R[264]]],[R[628]]]],[11,"parse",E,R[1299],35,[[],[[R[628]],[R[608],["error"]],[R[0],[R[628],R[608]]]]]],[11,R[280],E,R[616],35,[[],[R[264]]]],[11,R[618],E,R[1300],35,[[["self"]],[R[271]]]],[11,"new",E,R[1301],14,[[["type"],["vec",["type"]],["vec"],["vec"]],[R[635]]]],[11,"new",E,R[1302],17,[[[R[629]],["vec"],[R[615]],["type"],["vec"],["vec",["type"]],["vec",[R[615]]],[R[630]]],[R[636]]]],[11,R[1310],E,R[1311],19,[[[R[628]],["type"],[R[611]],["vec",["type"]]],[R[637]]]],[11,"builtin",E,R[1312],19,[[["builtin"]],[[R[637]],["spanned",[R[637]]]]]],[11,R[1313],E,R[1314],21,[[],["cmd"]]],[11,"return_",E,R[1315],21,[[["spanned",["exp"]],["exp"]],["cmd"]]],[11,R[619],E,R[1316],22,[[["spanned",["block"]],["spanned",["exp"]],["block"],["exp"]],["ifelse"]]],[11,"if_else",E,R[1317],22,[[["spanned",["block"]],["spanned",["exp"]],["block"],["exp"]],["ifelse"]]],[11,"cmd",E,R[1318],25,[[["spanned",["cmd"]],["cmd"]],[R[620]]]],[11,R[619],E,R[1319],25,[[["spanned",["block"]],["spanned",["exp"]],["block"],["exp"]],[R[620]]]],[11,"if_else",E,R[1320],25,[[["spanned",["block"]],["spanned",["exp"]],["block"],["exp"]],[R[620]]]],[11,"new",E,R[1321],26,[[["vec",[R[620]]],[R[620]]],["block"]]],[11,"empty",E,R[1322],26,[[],["block"]]],[11,R[333],E,R[1323],30,[[[R[265]]],[["spanned",["exp"]],["exp"]]]],[11,"value",E,R[1324],30,[[[R[631]]],[["spanned",["exp"]],["exp"]]]],[11,"u64",E,R[1325],30,[[["u64"]],[["spanned",["exp"]],["exp"]]]],[11,"bool",E,R[1326],30,[[["bool"]],[["spanned",["exp"]],["exp"]]]],[11,R[655],E,R[1327],30,[[[R[274]]],[["spanned",["exp"]],["exp"]]]],[11,R[1328],E,R[1329],30,[[[R[615]],["type"],["vec",["type"]],["vec"]],[["spanned",["exp"]],["exp"]]]],[11,"binop",E,R[1330],30,[[["spanned",["exp"]],["binop"],["exp"]],[["spanned",["exp"]],["exp"]]]],[11,"add",E,R[1331],30,[[["spanned",["exp"]],["exp"]],[["spanned",["exp"]],["exp"]]]],[11,"sub",E,R[1332],30,[[["spanned",["exp"]],["exp"]],[["spanned",["exp"]],["exp"]]]],[11,R[1333],E,R[1334],30,[[["spanned",["exp"]],["exp"]],[["spanned",["exp"]],["exp"]]]],[11,R[5],E,R[1335],30,[[["field"],["spanned",["exp"]],["box",["spanned"]],["bool"]],[["spanned",["exp"]],["exp"]]]],[11,"copy",E,R[1336],30,[[["spanned",["var"]],["var"]],[["spanned",["exp"]],["exp"]]]],[11,"move_",E,R[1337],30,[[["spanned",["var"]],["var"]],[["spanned",["exp"]],["exp"]]]],[11,R[1338],E,R[1339],30,[[["spanned",["exp"]],["spanned",[R[637]]],[R[637]],["exp"]],[["spanned",["exp"]],["exp"]]]],[11,"expr_list",E,E,30,[[["spanned",["exp"]],["vec",["spanned"]]],[["spanned",["exp"]],["exp"]]]]],"p":[[4,R[1125]],[3,"Spanned"],[3,"Program"],[4,R[644]],[3,"Script"],[3,R[638]],[3,R[639]],[4,R[645]],[3,R[640]],[4,"Kind"],[4,"Type"],[3,R[641]],[3,R[642]],[4,R[646]],[3,R[643]],[4,R[647]],[4,R[648]],[3,R[1396]],[4,"Builtin"],[4,R[607]],[4,"LValue"],[4,"Cmd"],[3,"IfElse"],[3,"While"],[3,"Loop"],[4,R[649]],[3,"Block"],[4,R[650]],[4,"UnaryOp"],[4,"BinOp"],[4,"Exp"],[3,R[651]],[3,"Var"],[3,"TypeVar"],[3,R[652]],[3,R[653]]]};
searchIndex["ir_to_bytecode_syntax"]={"doc":"Grammar ## Identifiers `text f ∈ FieldName //…","i":[[0,"ast",R[622],E,N,N],[3,"Spanned",R[606],R[1126],N,N],[12,"span",E,R[1127],0,N],[12,"value",E,R[1128],0,N],[3,"Program",E,R[1129],N,N],[12,"modules",E,R[1130],1,N],[12,"script",E,R[729],1,N],[3,"Script",E,R[1131],N,N],[12,"imports",E,R[1132],2,N],[12,"main",E,R[1133],2,N],[3,R[651],E,R[1134],N,N],[3,R[638],E,R[1135],N,N],[12,"name",E,R[1136],3,N],[12,R[333],E,R[1137],3,N],[3,R[639],E,R[1138],N,N],[12,"name",E,R[1139],4,N],[12,"imports",E,R[1140],4,N],[12,"structs",E,R[1141],4,N],[12,R[775],E,R[1142],4,N],[3,R[640],E,R[1143],N,N],[12,"ident",E,R[1144],5,N],[12,"alias",E,R[1145],5,N],[3,"Var",E,R[1146],N,N],[3,"TypeVar",E,R[1147],N,N],[3,R[641],E,R[1148],N,N],[12,"module",E,R[1149],6,N],[12,"name",E,R[1150],6,N],[3,R[652],E,R[1151],N,N],[3,R[642],E,R[1152],N,N],[12,R[721],E,R[1153],7,N],[12,"name",E,R[1154],7,N],[12,R[605],E,R[1155],7,N],[12,"fields",E,R[1156],7,N],[3,R[653],E,R[1157],N,N],[3,R[643],E,R[1158],N,N],[12,"formals",E,R[1159],8,N],[12,R[1160],E,R[1161],8,N],[12,R[605],E,R[1162],8,N],[3,R[1396],E,R[1163],N,N],[12,R[1377],E,R[1164],9,N],[12,R[412],E,R[1165],9,N],[12,R[1399],E,R[725],9,N],[12,"body",E,R[1166],9,N],[3,"IfElse",E,R[1167],N,N],[12,"cond",E,R[1168],10,N],[12,R[619],E,R[1169],10,N],[12,R[1401],E,R[1170],10,N],[3,"While",E,R[1171],N,N],[12,"cond",E,R[1172],11,N],[12,"block",E,R[1173],11,N],[3,"Loop",E,R[1174],N,N],[12,"block",E,R[1175],12,N],[3,"Block",E,"`{ s }`",N,N],[12,"stmts",E,R[1176],13,N],[4,R[644],E,R[1177],N,N],[13,"Script",E,R[1178],14,N],[13,"Module",E,R[1179],14,N],[4,R[645],E,R[1180],N,N],[13,R[404],E,E,15,N],[13,"Qualified",E,E,15,N],[4,"Kind",E,R[1181],N,N],[13,"All",E,R[1182],16,N],[13,"Resource",E,R[736],16,N],[13,R[737],E,R[738],16,N],[4,"Type",E,R[1183],N,N],[13,R[739],E,"`address`",17,N],[13,"U64",E,"`u64`",17,N],[13,"Bool",E,"`bool`",17,N],[13,R[305],E,R[1184],17,N],[13,"String",E,R[1185],17,N],[13,"Struct",E,R[1186],17,N],[13,R[682],E,R[1187],17,N],[13,R[681],E,R[1188],17,N],[4,R[646],E,R[1189],N,N],[13,"Move",E,R[1190],18,N],[12,"fields","ir_to_bytecode_syntax::ast::StructDefinitionFields",E,18,N],[13,"Native",R[606],R[1191],18,N],[4,R[647],E,R[1192],N,N],[13,"Public",E,R[1193],19,N],[13,"Internal",E,R[1194],19,N],[4,R[648],E,R[1195],N,N],[13,"Move",E,R[1196],20,N],[12,"locals","ir_to_bytecode_syntax::ast::FunctionBody",E,20,N],[12,"code",E,E,20,N],[13,"Native",R[606],R[1197],20,N],[4,"Builtin",E,R[1198],N,N],[13,"Exists",E,R[1199],21,N],[13,R[1200],E,R[1201],21,N],[13,R[743],E,R[1202],21,N],[13,R[744],E,R[1203],21,N],[13,R[748],E,R[1204],21,N],[13,R[1205],E,R[1206],21,N],[13,R[747],E,R[1207],21,N],[13,R[745],E,R[1208],21,N],[13,R[1464],E,R[1209],21,N],[13,R[746],E,R[1210],21,N],[13,"Freeze",E,R[1211],21,N],[4,R[607],E,R[1212],N,N],[13,"Builtin",E,R[1213],22,N],[13,R[1214],E,R[1215],22,N],[12,"module","ir_to_bytecode_syntax::ast::FunctionCall",E,22,N],[12,"name",E,E,22,N],[12,R[988],E,E,22,N],[4,"LValue",R[606],R[1216],N,N],[13,"Var",E,"`x`",23,N],[13,"Mutate",E,"`*e`",23,N],[13,"Pop",E,"`_`",23,N],[4,"Cmd",E,R[1217],N,N],[13,"Assign",E,R[1218],24,N],[13,"Unpack",E,R[1219],24,N],[13,"Abort",E,"`abort e`",24,N],[13,"Return",E,R[1220],24,N],[13,"Break",E,"`break`",24,N],[13,R[1429],E,"`continue`",24,N],[13,"Exp",E,E,24,N],[4,R[649],E,E,N,N],[13,R[1221],E,"`c;`",25,N],[13,R[1222],E,R[1223],25,N],[13,R[1224],E,R[1225],25,N],[13,R[1226],E,R[1227],25,N],[13,R[1228],E,R[1229],25,N],[4,R[650],E,R[1230],N,N],[13,R[739],E,R[1231],26,N],[13,"U64",E,R[1232],26,N],[13,"Bool",E,R[1233],26,N],[13,R[305],E,R[1234],26,N],[13,"String",E,R[1235],26,N],[4,"UnaryOp",E,R[1236],N,N],[13,"Not",E,R[1237],27,N],[4,"BinOp",E,R[1238],N,N],[13,"Add",E,"`+`",28,N],[13,"Sub",E,"`-`",28,N],[13,"Mul",E,"`*`",28,N],[13,"Mod",E,"`%`",28,N],[13,"Div",E,"`/`",28,N],[13,"BitOr",E,"`|`",28,N],[13,"BitAnd",E,"`&`",28,N],[13,"Xor",E,"`^`",28,N],[13,"And",E,"`&&`",28,N],[13,"Or",E,"`||`",28,N],[13,"Eq",E,"`==`",28,N],[13,"Neq",E,"`!=`",28,N],[13,"Lt",E,"`<`",28,N],[13,"Gt",E,"`>`",28,N],[13,"Le",E,"`<=`",28,N],[13,"Ge",E,"`>=`",28,N],[4,"Exp",E,R[1239],N,N],[13,R[1240],E,"`*e`",29,N],[13,R[1424],E,"`op e`",29,N],[13,R[1425],E,R[1241],29,N],[13,"Value",E,R[1242],29,N],[13,"Pack",E,R[1243],29,N],[13,"Borrow",E,R[1244],29,N],[12,"is_mutable","ir_to_bytecode_syntax::ast::Exp",R[1245],29,N],[12,"exp",E,R[1246],29,N],[12,"field",E,R[1247],29,N],[13,"Move",R[606],"`move(x)`",29,N],[13,"Copy",E,"`copy(x)`",29,N],[13,R[1248],E,R[1249],29,N],[13,R[607],E,R[1250],29,N],[13,"ExprList",E,R[1251],29,N],[5,R[1252],E,R[1253],N,[[],[["field"],[R[0],["field",R[608]]],[R[608],["error"]]]]],[6,"Loc",E,R[1254],N,N],[6,"Var_",E,R[1255],N,N],[6,"TypeVar_",E,R[1256],N,N],[6,"Field",E,R[1257],N,N],[6,"Field_",E,R[1258],N,N],[6,"Fields",E,R[1259],N,N],[6,R[1260],E,R[1261],N,N],[6,"Function_",E,R[1262],N,N],[6,R[1263],E,R[1264],N,N],[6,"LValue_",E,E,N,N],[6,"Cmd_",E,R[1265],N,N],[6,"Block_",E,R[1266],N,N],[6,R[1267],E,R[1268],N,N],[6,"ExpFields",E,R[1269],N,N],[6,"Exp_",E,R[1270],N,N],[11,"new",E,R[1271],1,[[["vec",[R[609]]],["script"],[R[609]]],["self"]]],[11,"new",E,R[1272],2,[[["vec",[R[610]]],["function_"],[R[610]]],["self"]]],[11,"body",E,R[1273],2,[[["self"]],["block"]]],[11,R[613],E,R[614],2,[[["self"]],[["vec",[R[484]]],[R[484]]]]],[11,"new",E,R[1274],30,[[[R[264]]],["self"]]],[11,"parse",E,R[1275],30,[[],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,"self_name",E,R[1276],30,[[],[R[271]]]],[11,R[1277],E,R[1278],30,[[],["self"]]],[11,R[280],E,R[616],30,[[],[R[264]]]],[11,R[618],E,R[1279],30,[[["self"]],[R[271]]]],[11,"new",E,R[1280],3,[[[R[611]],[R[265]]],["self"]]],[11,"name",E,R[1281],3,[[["self"]],[R[611]]]],[11,R[333],E,R[1282],3,[[["self"]],[R[265]]]],[11,"name",E,E,15,[[["self"]],[R[611]]]],[11,"new",E,R[1283],4,[[[R[610]],["vec",[R[612]]],[R[612]],["vec"],["vec",[R[610]]]],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,R[613],E,R[614],4,[[["self"]],[["vec",[R[484]]],[R[484]]]]],[11,"struct",E,R[1284],17,[[[R[627]],["type"],["vec",["type"]]],["type"]]],[11,R[996],E,R[1285],17,[[["type"],["bool"]],["type"]]],[11,R[333],E,R[1286],17,[[],["type"]]],[11,"u64",E,R[1287],17,[[],["type"]]],[11,"bool",E,R[1288],17,[[],["type"]]],[11,R[274],E,R[1289],17,[[],["type"]]],[11,"new",E,R[1290],6,[[[R[611]],[R[615]]],["self"]]],[11,"module",E,R[1291],6,[[["self"]],[R[611]]]],[11,"name",E,R[1292],6,[[["self"]],[R[615]]]],[11,"new",E,R[1293],5,[[[R[626]],[R[24],[R[611]]],[R[611]]],["self"]]],[11,"new",E,R[1294],31,[[[R[264]]],["self"]]],[11,"parse",E,R[1295],31,[[],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,R[280],E,R[616],31,[[],[R[264]]]],[11,R[618],E,R[1296],31,[[["self"]],[R[271]]]],[11,R[1297],E,R[617],7,[[["type"],["fields",["type"]],["vec"],["bool"]],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,"native",E,R[617],7,[[["vec"],["bool"]],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,"new",E,R[1298],32,[[[R[264]]],["self"]]],[11,"parse",E,R[1299],32,[[],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,R[280],E,R[616],32,[[],[R[264]]]],[11,R[618],E,R[1300],32,[[["self"]],[R[271]]]],[11,"new",E,R[1301],8,[[["type"],["vec"],["vec"],["vec",["type"]]],["self"]]],[11,"new",E,R[1302],9,[[["vec",["type"]],["vec",[R[615]]],["vec"],[R[630]],["vec"],["type"],[R[615]],[R[629]]],["self"]]],[11,"new",E,R[1303],33,[[[R[264]]],["self"]]],[11,"new_",E,R[1304],33,[[[R[264]]],["var_"]]],[11,"parse",E,R[1305],33,[[],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,"name",E,R[1306],33,[[["self"]],[R[271]]]],[11,"new",E,R[1307],34,[[[R[264]]],["self"]]],[11,"parse",E,R[1308],34,[[],[[R[0],[R[608]]],[R[608],["error"]]]]],[11,"name",E,R[1309],34,[[["self"]],[R[271]]]],[11,R[1310],E,R[1311],22,[[["type"],[R[611]],[R[628]],["vec",["type"]]],["self"]]],[11,"builtin",E,R[1312],22,[[["builtin"]],[R[621]]]],[11,R[1313],E,R[1314],24,[[],["self"]]],[11,"return_",E,R[1315],24,[[["exp_"]],["self"]]],[11,R[619],E,R[1316],10,[[["exp_"],["block_"]],["self"]]],[11,"if_else",E,R[1317],10,[[["exp_"],["block_"]],["self"]]],[11,"cmd",E,R[1318],25,[[["cmd_"]],["self"]]],[11,R[619],E,R[1319],25,[[["exp_"],["block_"]],["self"]]],[11,"if_else",E,R[1320],25,[[["exp_"],["block_"]],["self"]]],[11,"new",E,R[1321],13,[[["vec",[R[620]]],[R[620]]],["self"]]],[11,"empty",E,R[1322],13,[[],["self"]]],[11,R[333],E,R[1323],29,[[[R[265]]],["exp_"]]],[11,"value",E,R[1324],29,[[[R[631]]],["exp_"]]],[11,"u64",E,R[1325],29,[[["u64"]],["exp_"]]],[11,"bool",E,R[1326],29,[[["bool"]],["exp_"]]],[11,R[655],E,R[1327],29,[[[R[274]]],["exp_"]]],[11,R[1328],E,R[1329],29,[[["type"],["expfields"],[R[615]],["vec",["type"]]],["exp_"]]],[11,"binop",E,R[1330],29,[[["exp_"],["binop"]],["exp_"]]],[11,"add",E,R[1331],29,[[["exp_"]],["exp_"]]],[11,"sub",E,R[1332],29,[[["exp_"]],["exp_"]]],[11,R[1333],E,R[1334],29,[[["exp_"]],["exp_"]]],[11,R[5],E,R[1335],29,[[["exp_"],["field"],["box",["exp_"]],["bool"]],["exp_"]]],[11,"copy",E,R[1336],29,[[["var_"]],["exp_"]]],[11,"move_",E,R[1337],29,[[["var_"]],["exp_"]]],[11,R[1338],E,R[1339],29,[[["exp_"],[R[621]]],["exp_"]]],[11,"expr_list",E,E,29,[[["exp_"],["vec",["exp_"]]],["exp_"]]],[11,"no_loc",E,E,0,[[[T]],["spanned"]]],[0,"syntax",R[622],E,N,N],[4,R[654],R[623],E,N,N],[13,"InvalidToken",E,E,35,N],[12,R[823],R[624],E,35,N],[13,"UnrecognizedToken",R[623],E,35,N],[12,"token",R[624],E,35,N],[12,"expected",E,E,35,N],[13,"User",R[623],E,35,N],[12,"error",R[624],E,35,N],[5,"parse_cmd_string",R[623],E,N,[[["str"]],[["cmd"],[R[608],["usize","token","error"]],[R[0],["cmd",R[608]]]]]],[5,"parse_module_string",E,E,N,[[["str"]],[[R[609]],[R[608],["usize","token","error"]],[R[0],[R[609],R[608]]]]]],[5,"parse_program_string",E,E,N,[[["str"]],[[R[0],["program",R[608]]],["program"],[R[608],["usize","token","error"]]]]],[5,"parse_script_string",E,E,N,[[["str"]],[["script"],[R[608],["usize","token","error"]],[R[0],["script",R[608]]]]]],[5,"parse_script_or_module_string",E,E,N,[[["str"]],[[R[625]],[R[608],["usize","token","error"]],[R[0],[R[625],R[608]]]]]],[11,R[13],R[606],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[451],E,E,0,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[452],E,E,0,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[453],E,R[454],0,[[["self"]],[["vec",["u5"]],["u5"]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[455],E,E,0,[[],[["vec",["u5"]],[R[0],["vec"]]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,R[246],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[57],E,E,2,[[["self"]],[R[58]]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[57],E,E,30,[[["self"]],[R[58]]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[58]]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[58]]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[57],E,E,33,[[["self"]],[R[58]]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[57],E,E,34,[[["self"]],[R[58]]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[58]]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[57],E,E,31,[[["self"]],[R[58]]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[57],E,E,7,[[["self"]],[R[58]]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[57],E,E,32,[[["self"]],[R[58]]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[58]]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,R[246],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[58]]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[58]]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[57],E,E,17,[[["self"]],[R[58]]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[57],E,E,20,[[["self"]],[R[58]]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[57],E,E,21,[[["self"]],[R[58]]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[57],E,E,22,[[["self"]],[R[58]]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[57],E,E,23,[[["self"]],[R[58]]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[57],E,E,24,[[["self"]],[R[58]]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[57],E,E,25,[[["self"]],[R[58]]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[57],E,E,26,[[["self"]],[R[58]]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[57],E,E,27,[[["self"]],[R[58]]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[57],E,E,28,[[["self"]],[R[58]]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[57],E,E,29,[[["self"]],[R[58]]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[13],R[623],E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[57],E,E,35,[[["self"]],[R[58]]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[75],R[606],E,0,[[],["spanned"]]],[11,"clone",E,E,0,[[["self"]],["spanned"]]],[11,"clone",E,E,1,[[["self"]],["program"]]],[11,"clone",E,E,14,[[["self"]],[R[625]]]],[11,"clone",E,E,2,[[["self"]],["script"]]],[11,"clone",E,E,30,[[["self"]],[R[611]]]],[11,"clone",E,E,3,[[["self"]],[R[632]]]],[11,"clone",E,E,4,[[["self"]],[R[609]]]],[11,"clone",E,E,15,[[["self"]],[R[626]]]],[11,"clone",E,E,5,[[["self"]],[R[610]]]],[11,"clone",E,E,33,[[["self"]],["var"]]],[11,"clone",E,E,34,[[["self"]],["typevar"]]],[11,"clone",E,E,16,[[["self"]],["kind"]]],[11,"clone",E,E,17,[[["self"]],["type"]]],[11,"clone",E,E,6,[[["self"]],[R[627]]]],[11,"clone",E,E,31,[[["self"]],[R[615]]]],[11,"clone",E,E,7,[[["self"]],[R[633]]]],[11,"clone",E,E,18,[[["self"]],[R[634]]]],[11,"clone",E,E,32,[[["self"]],[R[628]]]],[11,"clone",E,E,8,[[["self"]],[R[635]]]],[11,"clone",E,E,19,[[["self"]],[R[629]]]],[11,"clone",E,E,20,[[["self"]],[R[630]]]],[11,"clone",E,E,9,[[["self"]],[R[636]]]],[11,"clone",E,E,21,[[["self"]],["builtin"]]],[11,"clone",E,E,22,[[["self"]],[R[637]]]],[11,"clone",E,E,23,[[["self"]],["lvalue"]]],[11,"clone",E,E,24,[[["self"]],["cmd"]]],[11,"clone",E,E,10,[[["self"]],["ifelse"]]],[11,"clone",E,E,11,[[["self"]],["while"]]],[11,"clone",E,E,12,[[["self"]],["loop"]]],[11,"clone",E,E,25,[[["self"]],[R[620]]]],[11,"clone",E,E,13,[[["self"]],["block"]]],[11,"clone",E,E,26,[[["self"]],[R[631]]]],[11,"clone",E,E,27,[[["self"]],["unaryop"]]],[11,"clone",E,E,28,[[["self"]],["binop"]]],[11,"clone",E,E,29,[[["self"]],["exp"]]],[11,"clone",R[623],E,35,[[["self"]],[R[608]]]],[11,"as_ref",R[606],E,0,[[["self"]],[T]]],[11,R[247],E,E,30,[[["self"],[R[611]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,30,[[["self"],[R[611]]],["bool"]]],[11,"le",E,E,30,[[["self"],[R[611]]],["bool"]]],[11,"gt",E,E,30,[[["self"],[R[611]]],["bool"]]],[11,"ge",E,E,30,[[["self"],[R[611]]],["bool"]]],[11,R[247],E,E,3,[[["self"],[R[632]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,3,[[["self"],[R[632]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[632]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[632]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[632]]],["bool"]]],[11,R[247],E,E,15,[[["self"],[R[626]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,15,[[["self"],[R[626]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[626]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[626]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[626]]],["bool"]]],[11,R[247],E,E,33,[[["self"],["var"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,33,[[["self"],["var"]],["bool"]]],[11,"le",E,E,33,[[["self"],["var"]],["bool"]]],[11,"gt",E,E,33,[[["self"],["var"]],["bool"]]],[11,"ge",E,E,33,[[["self"],["var"]],["bool"]]],[11,R[247],E,E,6,[[["self"],[R[627]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,6,[[["self"],[R[627]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[627]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[627]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[627]]],["bool"]]],[11,R[247],E,E,31,[[["self"],[R[615]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,31,[[["self"],[R[615]]],["bool"]]],[11,"le",E,E,31,[[["self"],[R[615]]],["bool"]]],[11,"gt",E,E,31,[[["self"],[R[615]]],["bool"]]],[11,"ge",E,E,31,[[["self"],[R[615]]],["bool"]]],[11,R[247],E,E,32,[[["self"],[R[628]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,32,[[["self"],[R[628]]],["bool"]]],[11,"le",E,E,32,[[["self"],[R[628]]],["bool"]]],[11,"gt",E,E,32,[[["self"],[R[628]]],["bool"]]],[11,"ge",E,E,32,[[["self"],[R[628]]],["bool"]]],[11,R[247],R[623],E,35,[[["self"],[R[608]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,35,[[["self"],[R[608]]],["bool"]]],[11,"le",E,E,35,[[["self"],[R[608]]],["bool"]]],[11,"gt",E,E,35,[[["self"],[R[608]]],["bool"]]],[11,"ge",E,E,35,[[["self"],[R[608]]],["bool"]]],[11,"eq",R[606],E,0,[[["self"],["spanned"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["spanned"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[611]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[611]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[632]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[632]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[609]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[609]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[626]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[626]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[610]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[610]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["var"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["var"]],["bool"]]],[11,"eq",E,E,34,[[["self"],["typevar"]],["bool"]]],[11,"ne",E,E,34,[[["self"],["typevar"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["kind"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[627]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[627]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[615]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[615]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[634]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[634]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[628]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[628]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[629]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[630]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[630]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,21,[[["self"],["builtin"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["builtin"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[637]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[637]]],["bool"]]],[11,"eq",E,E,23,[[["self"],["lvalue"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["lvalue"]],["bool"]]],[11,"eq",E,E,24,[[["self"],["cmd"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["cmd"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["ifelse"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["ifelse"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["while"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["while"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["loop"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["loop"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[620]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[620]]],["bool"]]],[11,"eq",E,E,13,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[631]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[631]]],["bool"]]],[11,"eq",E,E,27,[[["self"],["unaryop"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,29,[[["self"],["exp"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["exp"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["script"]],["bool"]]],[11,"eq",R[623],E,35,[[["self"],[R[608]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[608]]],["bool"]]],[11,"cmp",R[606],E,30,[[["self"],[R[611]]],[R[32]]]],[11,"cmp",E,E,3,[[["self"],[R[632]]],[R[32]]]],[11,"cmp",E,E,15,[[["self"],[R[626]]],[R[32]]]],[11,"cmp",E,E,33,[[["self"],["var"]],[R[32]]]],[11,"cmp",E,E,6,[[["self"],[R[627]]],[R[32]]]],[11,"cmp",E,E,31,[[["self"],[R[615]]],[R[32]]]],[11,"cmp",E,E,32,[[["self"],[R[628]]],[R[32]]]],[11,"cmp",R[623],E,35,[[["self"],[R[608]]],[R[32]]]],[11,"next",R[606],E,2,[[["self"]],[[R[620]],[R[24],[R[620]]]]]],[11,"next",E,E,13,[[["self"]],[[R[620]],[R[24],[R[620]]]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[623],E,35,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[606],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[623],E,35,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,"Spanned"],[3,"Program"],[3,"Script"],[3,R[638]],[3,R[639]],[3,R[640]],[3,R[641]],[3,R[642]],[3,R[643]],[3,R[1396]],[3,"IfElse"],[3,"While"],[3,"Loop"],[3,"Block"],[4,R[644]],[4,R[645]],[4,"Kind"],[4,"Type"],[4,R[646]],[4,R[647]],[4,R[648]],[4,"Builtin"],[4,R[607]],[4,"LValue"],[4,"Cmd"],[4,R[649]],[4,R[650]],[4,"UnaryOp"],[4,"BinOp"],[4,"Exp"],[3,R[651]],[3,R[652]],[3,R[653]],[3,"Var"],[3,"TypeVar"],[4,R[654]]]};
searchIndex["jellyfish_merkle"]={"doc":"This module implements [`JellyfishMerkleTree`] backed by…","i":[[3,R[671],R[656],"Indicates a node becomes stale since `stale_since_version`.",N,N],[12,"stale_since_version",E,"The version since when the node is overwritten and becomes…",0,N],[12,"node_key",E,"The `NodeKey` identifying the node associated with this…",0,N],[3,R[672],E,"This is a wrapper of `NodeBatch`, `StaleNodeIndexBatch`…",N,N],[12,"node_batch",E,E,1,N],[12,"stale_node_index_batch",E,E,1,N],[12,"num_new_leaves",E,E,1,N],[12,"num_stale_leaves",E,E,1,N],[3,R[679],E,"The Jellyfish Merkle tree data structure. See [`crate`]…",N,N],[0,"iterator",E,"This module implements `JellyfishMerkleIterator`.…",N,N],[3,R[673],R[663],"The `JellyfishMerkleIterator` implementation.",N,N],[11,"new",E,"Constructs a new iterator. This puts the internal state in…",2,[[[R[279]],[R[149]],["r"]],[R[0]]]],[0,"node_type",R[656],"Node types of `JellyfishMerkleTree`",N,N],[3,"NodeKey",R[657],"The unique key of each node.",N,N],[3,"Child",E,"Each child of [`InternalNode`] encapsulates a nibble…",N,N],[12,"hash",E,E,3,N],[12,R[279],E,E,3,N],[12,"is_leaf",E,E,3,N],[3,R[675],E,"Represents a 4-level subtree with 16 children at the…",N,N],[3,"LeafNode",E,"Represents an account.",N,N],[4,"Node",E,"The concrete node type of `JellyfishMerkleTree`.",N,N],[13,"Null",E,"Represents `null`.",4,N],[13,"Internal",E,"A wrapper of [`InternalNode`].",4,N],[13,"Leaf",E,"A wrapper of [`LeafNode`].",4,N],[4,R[674],E,"Error thrown when a [`Node`] fails to be deserialized out…",N,N],[13,"EmptyInput",E,"Input is empty.",5,N],[13,"UnknownTag",E,"The first byte of the input is not a known tag…",5,N],[12,"unknown_tag",R[658],E,5,N],[13,"NoChildren",R[657],"No children found in internal node",5,N],[13,"ExtraLeaves",E,"Extra leaf bits set",5,N],[12,"existing",R[658],E,5,N],[12,"leaves",E,E,5,N],[11,"new",R[657],"Creates a new `NodeKey`.",6,[[[R[279]],[R[659]]],["self"]]],[11,"new_empty_path",E,"A shortcut to generate a node key consisting of a version…",6,[[[R[279]]],["self"]]],[11,R[279],E,"Gets the version.",6,[[["self"]],[R[279]]]],[11,"nibble_path",E,"Gets the nibble path.",6,[[["self"]],[R[659]]]],[11,"gen_child_node_key",E,"Generates a child node key based on this node key.",6,[[["self"],[R[279]],[R[33]]],["self"]]],[11,"gen_parent_node_key",E,"Generates parent node key at the same version based on…",6,[[["self"]],["self"]]],[11,"set_version",E,"Sets the version to the given version.",6,[[["self"],[R[279]]]]],[11,"encode",E,"Serializes to bytes for physical storage enforcing the…",6,[[["self"]],[["vec",["u8"]],[R[0],["vec"]]]]],[11,"decode",E,R[660],6,[[],[[R[0],[R[665]]],[R[665]]]]],[11,"new",E,E,3,[[[R[279]],[R[149]],["bool"]],["self"]]],[11,"new",E,"Creates a new Internal node.",7,[[["hashmap",[R[33],"child"]],[R[33]],["child"]],["self"]]],[11,R[142],E,E,7,[[["self"],["vec"]],[R[0]]]],[11,R[193],E,E,7,[[],[R[0]]]],[11,"child",E,"Gets the `n`-th child.",7,[[["self"],[R[33]]],[[R[24],["child"]],["child"]]]],[11,R[1973],E,"Return the total number of existing children.",7,[[["self"]],["usize"]]],[11,"generate_bitmaps",E,"Generates `existence_bitmap` and `leaf_bitmap` as a pair…",7,[[["self"]]]],[11,"get_child_with_siblings",E,"Gets the child and its corresponding siblings that are…",7,[[["self"],[R[665]],[R[33]]]]],[11,"new",E,"Creates a new leaf node.",8,[[[R[149]],[R[277]]],["self"]]],[11,"account_key",E,"Gets the account key, the hashed account address.",8,[[["self"]],[R[149]]]],[11,"blob_hash",E,"Gets the hash of associated blob.",8,[[["self"]],[R[149]]]],[11,"blob",E,"Gets the associated blob itself.",8,[[["self"]],[R[277]]]],[11,"new_null",E,"Creates the `Null` variant.",4,[[],["self"]]],[11,"new_internal",E,"Creates the `Internal` variant.",4,[[["hashmap",[R[33],"child"]],[R[33]],["child"]],["self"]]],[11,"new_leaf",E,"Creates the `Leaf` variant.",4,[[[R[149]],[R[277]]],["self"]]],[11,"is_leaf",E,"Returns `true` if the node is a leaf node.",4,[[["self"]],["bool"]]],[11,"encode",E,"Serializes to bytes for physical storage.",4,[[["self"]],[["vec",["u8"]],[R[0],["vec"]]]]],[11,"hash",E,"Computes the hash of nodes.",4,[[["self"]],[R[149]]]],[11,"decode",E,R[660],4,[[],[["node"],[R[0],["node"]]]]],[0,"restore",R[656],"This module implements the functionality to restore a…",N,N],[3,R[676],R[664],E,N,N],[11,"new",E,E,9,[[[R[279]],["s"]],[R[0]]]],[11,"add_chunk",E,"Restores a chunk of accounts. This function assumes that…",9,[[["self"],["vec"]],[R[0]]]],[11,"finish",E,"Finishes the restoration process. This tells the code that…",9,[[],[R[0]]]],[6,"NodeBatch",R[656],"Node batch that will be written into db atomically with…",N,N],[6,"StaleNodeIndexBatch",E,"`StaleNodeIndex` batch that will be written into db…",N,N],[8,R[677],E,"`TreeReader` defines the interface between…",N,N],[11,"get_node",E,"Gets node given a node key. Returns error if the node does…",10,[[["self"],[R[665]]],[["node"],[R[0],["node"]]]]],[10,"get_node_option",E,"Gets node given a node key. Returns `None` if the node…",10,[[["self"],[R[665]]],[[R[24],["node"]],[R[0],[R[24]]]]]],[10,"get_rightmost_leaf",E,"Gets the rightmost leaf. Note that this assumes we are in…",10,[[["self"]],[[R[0],[R[24]]],[R[24]]]]],[8,R[678],E,E,N,N],[10,"write_node_batch",E,"Writes a node batch into storage.",11,[[["self"],["nodebatch"]],[R[0]]]],[11,"new",E,"Creates a `JellyfishMerkleTree` backed by the given…",12,[[["r"]],["self"]]],[11,"put_blob_sets",E,"Returns the new nodes and account state blobs in a batch…",12,[[["self"],["vec",["vec"]],[R[279]],["vec"]],[R[0]]]],[11,R[680],E,"Returns the account state blob (if applicable) and the…",12,[[["self"],[R[149]],[R[279]]],[R[0]]]],[11,R[661],E,"Gets the proof that shows a list of keys up to…",12,[[["self"],[R[149]],[R[279]]],[[R[0],[R[662]]],[R[662]]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",R[663],E,2,[[],[U]]],[11,R[246],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],R[657],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,R[169],E,E,8,[[["self"]],[R[149]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[59],E,E,5,[[["self"]],["fail"]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",R[664],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[75],R[656],E,1,[[],[R[666]]]],[11,"clone",R[657],E,6,[[["self"]],[R[665]]]],[11,"clone",E,E,3,[[["self"]],["child"]]],[11,"clone",E,E,7,[[["self"]],[R[668]]]],[11,"clone",E,E,8,[[["self"]],[R[669]]]],[11,"clone",E,E,4,[[["self"]],["node"]]],[11,"clone",R[656],E,0,[[["self"]],[R[667]]]],[11,"clone",E,E,1,[[["self"]],[R[666]]]],[11,R[247],R[657],E,6,[[["self"],[R[665]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,6,[[["self"],[R[665]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[665]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[665]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[665]]],["bool"]]],[11,R[247],R[656],E,0,[[["self"],[R[667]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,0,[[["self"],[R[667]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[667]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[667]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[667]]],["bool"]]],[11,"eq",R[657],E,6,[[["self"],[R[665]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[665]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["child"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["child"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[668]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[668]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[669]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[669]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["node"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["node"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[670]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[670]]],["bool"]]],[11,"eq",R[656],E,0,[[["self"],[R[667]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[667]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[666]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[666]]],["bool"]]],[11,"cmp",R[657],E,6,[[["self"],[R[665]]],[R[32]]]],[11,"cmp",R[656],E,0,[[["self"],[R[667]]],[R[32]]]],[11,"from",R[657],E,4,[[[R[668]]],["self"]]],[11,"from",E,E,4,[[[R[669]]],["self"]]],[11,"next",R[663],E,2,[[["self"]],[R[24]]]],[11,"hash",R[657],E,6,[[["self"],["__h"]]]],[11,"hash",R[656],E,0,[[["self"],["__h"]]]],[11,"fmt",R[657],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[656],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[657],E,5,[[["self"],[R[17]]],[R[0]]]],[11,"name",E,E,5,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,5,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,5,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,R[193],E,E,8,[[["__d"]],[R[0]]]],[11,R[142],E,E,8,[[["self"],["__s"]],[R[0]]]],[11,R[34],E,E,6,[[]]],[11,R[34],E,E,3,[[]]],[11,R[34],E,E,7,[[]]],[11,R[34],R[656],E,0,[[]]],[11,"hash",R[657],E,7,[[["self"]],[R[149]]]],[11,"hash",E,E,8,[[["self"]],[R[149]]]]],"p":[[3,R[671]],[3,R[672]],[3,R[673]],[3,"Child"],[4,"Node"],[4,R[674]],[3,"NodeKey"],[3,R[675]],[3,"LeafNode"],[3,R[676]],[8,R[677]],[8,R[678]],[3,R[679]]]};
searchIndex["language_benchmarks"]={"doc":E,"i":[[0,R[353],"language_benchmarks",E,N,N],[3,R[1965],"language_benchmarks::transactions","Benchmarking support for transactions.",N,N],[18,"DEFAULT_NUM_ACCOUNTS",E,"The number of accounts created by default.",0,N],[18,"DEFAULT_NUM_TRANSACTIONS",E,"The number of transactions created by default.",0,N],[11,"new",E,"Creates a new transaction bencher with default settings.",0,[[["s"]],["self"]]],[11,R[1796],E,"Sets a custom number of accounts.",0,[[["self"],["usize"]],["self"]]],[11,"num_transactions",E,"Sets a custom number of transactions.",0,[[["self"],["usize"]],["self"]]],[11,"bench",E,"Runs the bencher.",0,[[["self"],["bencher"]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],["transactionbencher"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,R[1965]]]};
searchIndex["language_e2e_tests"]={"doc":"Test infrastructure for the Libra VM.","i":[[5,"assert_status_eq",R[1790],E,N,[[[R[493]]],["bool"]]],[5,"transaction_status_eq",E,E,N,[[[R[416]]],["bool"]]],[0,"account",E,"Test infrastructure for modeling Libra accounts.",N,N],[3,"Account",R[1811],"Details about a Libra account.",N,N],[12,"privkey",E,"The current private key for this account.",0,N],[12,"pubkey",E,"The current public key for this account.",0,N],[3,R[1609],E,"Represents an account along with initial state about it.",N,N],[11,"new",E,"Creates a new account in memory.",0,[[],["self"]]],[11,R[1784],E,"Creates a new account with the given keypair.",0,[[[R[181]],[R[192]]],["self"]]],[11,"new_genesis_account",E,"Creates a new account in memory representing an account…",0,[[[R[265]]],["self"]]],[11,"new_association",E,"Creates a new account representing the association in…",0,[[],["self"]]],[11,R[333],E,R[1789],0,[[["self"]],[R[265]]]],[11,R[1787],E,R[1788],0,[[["self"]],[R[267]]]],[11,R[1798],E,R[1786],0,[[["self"],[R[181]],[R[192]]]]],[11,"auth_key",E,"Computes the authentication key for this account, as…",0,[[["self"]],[R[274]]]],[11,R[1849],E,"Returns a [`SignedTransaction`] with a payload and this…",0,[[["self"],[R[408]],["u64"]],[R[394]]]],[11,"create_signed_txn_with_args",E,R[1783],0,[[["self"],["vec",[R[406]]],[R[406]],["vec",["u8"]],["u64"],["u8"]],[R[394]]]],[11,"create_signed_txn_with_args_and_sender",E,R[1783],0,[[["self"],[R[265]],[R[406]],["u64"],["vec",[R[406]]],["vec",["u8"]],["u8"]],[R[394]]]],[11,"create_signed_txn_impl",E,R[1783],0,[[["self"],[R[265]],[R[408]],["u64"]],[R[394]]]],[11,"new",E,"Creates a new `AccountData` with a new account.",1,[[["u64"]],["self"]]],[11,"with_account",E,R[1785],1,[[["u64"],["account"]],["self"]]],[11,R[1784],E,R[1785],1,[[[R[181]],[R[192]],["u64"]],["self"]]],[11,"with_account_and_event_counts",E,"Creates a new `AccountData` with custom parameters.",1,[[["account"],["u64"],["bool"]],["self"]]],[11,R[1798],E,R[1786],1,[[["self"],[R[181]],[R[192]]]]],[11,"to_resource",E,"Creates and returns a resource [`Value`] for this data.",1,[[["self"]],["value"]]],[11,R[1787],E,R[1788],1,[[["self"]],[R[267]]]],[11,R[333],E,R[1789],1,[[["self"]],[R[265]]]],[11,"account",E,"Returns the underlying [`Account`] instance.",1,[[["self"]],["account"]]],[11,"into_account",E,"Converts this data into an `Account` instance.",1,[[],["account"]]],[11,"balance",E,"Returns the initial balance.",1,[[["self"]],["u64"]]],[11,R[281],E,"Returns the initial sequence number.",1,[[["self"]],["u64"]]],[11,"sent_events_key",E,"Returns the unique key for this sent events stream.",1,[[["self"]]]],[11,R[1799],E,"Returns the initial sent events count.",1,[[["self"]],["u64"]]],[11,"received_events_key",E,"Returns the unique key for this received events stream.",1,[[["self"]]]],[11,R[1800],E,"Returns the initial received events count.",1,[[["self"]],["u64"]]],[0,"account_universe",R[1790],"A model to test properties of common Libra transactions.",N,N],[3,R[1829],R[1812],"Represents a create-account transaction performed in the…",N,N],[3,R[1830],E,"Represents a create-account transaction in the account…",N,N],[3,R[1831],E,R[1791],N,N],[3,R[1832],E,R[1791],N,N],[3,R[1833],E,"Represents a rotate-key transaction performed in the…",N,N],[3,R[1822],E,"A set of accounts which can be used to construct an…",N,N],[3,R[1823],E,"A set of accounts that has been set up and can now be used…",N,N],[3,R[1824],E,"Allows pairs of accounts to be uniformly randomly selected…",N,N],[3,R[1820],E,"Mutable references to a pair of distinct accounts picked…",N,N],[12,"idx_1",E,"The index of the first account picked.",2,N],[12,"idx_2",E,"The index of the second account picked.",2,N],[12,"account_1",E,"A mutable reference to the first account picked.",2,N],[12,"account_2",E,"A mutable reference to the second account picked.",2,N],[3,R[1826],E,"Represents the current state of account in a universe,…",N,N],[4,R[1821],E,"Determines the sampling algorithm used to pick accounts…",N,N],[13,"Unlimited",E,"An account may be picked as many times as possible.",3,N],[13,"Limited",E,"An account may only be picked these many times.",3,N],[5,"txn_one_account_result",E,"Computes the result for running a transfer out of one…",N,[[[R[1819]],["u64"]]]],[5,"log_balance_strategy",E,"Returns a [`Strategy`] that provides a variety of balances…",N,[[["u64"]]]],[11,R[904],E,R[1792],4,[[]]],[11,"success_strategy",E,R[1792],4,[[["usize"]]]],[11,"set_pick_style",E,"Sets the pick style used by this account universe.",4,[[["self"],[R[1818]]],["self"]]],[11,R[1796],E,"Returns the number of accounts in this account universe.",4,[[["self"]],["usize"]]],[11,"setup",E,R[1793],4,[[[R[1794]]],[R[1795]]]],[11,"setup_gas_cost_stability",E,R[1793],4,[[[R[1794]]],[R[1795]]]],[11,R[1796],E,"Returns the number of accounts currently in this universe.",5,[[["self"]],["usize"]]],[11,"accounts",E,"Returns the accounts currently in this universe.",5,[[["self"]]]],[11,"add_account",E,"Adds an account to the universe so that future…",5,[[["self"],[R[1604]]]]],[11,"pick",E,"Picks an account using the provided `Index` as a source of…",5,[[["self"],["index"]]]],[11,"pick",E,"Picks two accounts uniformly randomly from this universe…",6,[[["self"],[R[1795]]],["accountpair"]]],[8,R[1825],E,"Represents any sort of transaction that can be done in an…",N,N],[10,"apply",E,"Applies this transaction onto the universe, updating…",7,[[["self"],[R[1795]]]]],[11,"arced",E,"Creates an arced version of this transaction, suitable for…",7,[[],[[R[1797]],["arc",[R[1797]]]]]],[11,"account",E,"Returns the underlying account.",8,[[["self"]],["account"]]],[11,R[1798],E,"Rotates the key in this account.",8,[[["self"],[R[181]],[R[192]]]]],[11,"balance",E,"Returns the current balance for this account, assuming all…",8,[[["self"]],["u64"]]],[11,R[281],E,"Returns the current sequence number for this account,…",8,[[["self"]],["u64"]]],[11,R[1799],E,"Returns the current sent events count for this account,…",8,[[["self"]],["u64"]]],[11,R[1800],E,"Returns the current received events count for this…",8,[[["self"]],["u64"]]],[11,"create_account_gas_cost",E,"Returns the gas cost of a create-account transaction.",8,[[["self"]],["u64"]]],[11,"create_account_low_balance_gas_cost",E,R[1801],8,[[["self"]],["u64"]]],[11,"create_existing_account_gas_cost",E,R[1801],8,[[["self"]],["u64"]]],[11,"peer_to_peer_gas_cost",E,"Returns the gas cost of a peer-to-peer transaction.",8,[[["self"]],["u64"]]],[11,"peer_to_peer_too_low_gas_cost",E,R[1802],8,[[["self"]],["u64"]]],[11,"peer_to_peer_new_receiver_gas_cost",E,R[1801],8,[[["self"]],["u64"]]],[11,"peer_to_peer_new_receiver_too_low_gas_cost",E,R[1801],8,[[["self"]],["u64"]]],[11,"rotate_key_gas_cost",E,R[1802],8,[[["self"]],["u64"]]],[0,"common_transactions",R[1790],"Support for encoding transactions for common situations.",N,N],[3,R[1834],R[1813],"A serialized transaction to create a new account.",N,N],[3,"MINT",E,"A serialized transaction to mint new funds.",N,N],[3,R[1808],E,"A serialized transaction to transfer coin from one account…",N,N],[3,R[1835],E,"A serialized transaction to change the keys for an account.",N,N],[5,"create_account_txn",E,"Returns a transaction to create a new account with the…",N,[[["u64"],["account"]],[R[394]]]],[5,"peer_to_peer_txn",E,"Returns a transaction to transfer coin from one account to…",N,[[["u64"],["account"]],[R[394]]]],[5,"rotate_key_txn",E,"Returns a transaction to change the keys for the given…",N,[[[R[265]],["u64"],["account"]],[R[394]]]],[5,"mint_txn",E,"Returns a transaction to mint new funds with the given…",N,[[["u64"],["account"]],[R[394]]]],[0,"compile",R[1790],"Support for compiling scripts and modules in tests.",N,N],[5,R[1803],"language_e2e_tests::compile",R[1804],N,[[["str"]],[["vec",["u8"]],["u8"]]]],[5,"compile_script_with_address",E,R[1804],N,[[[R[265]],["str"]],[["vec",["u8"]],["u8"]]]],[5,"compile_module_with_address",E,R[1804],N,[[[R[265]],["str"]],[R[408]]]],[0,"data_store",R[1790],"Support for mocking the Libra data store.",N,N],[3,R[1836],R[1814],"The write set encoded in the genesis transaction.",N,N],[3,R[1837],E,E,N,N],[3,R[1827],E,"An in-memory implementation of [`StateView`] and…",N,N],[11,"new",E,"Creates a new `FakeDataStore` with the provided initial…",9,[[["hashmap",[R[267],"vec"]],[R[267]],["vec",["u8"]]],["self"]]],[11,"add_write_set",E,"Adds a [`WriteSet`] to this data store.",9,[[["self"],[R[411]]]]],[11,"set",E,"Sets a (key, value) pair within this data store.",9,[[["self"],[R[267]],["vec",["u8"]],["u8"]],[[R[24],["vec"]],["vec",["u8"]]]]],[11,"remove",E,"Deletes a key from this data store.",9,[[["self"],[R[267]]],[[R[24],["vec"]],["vec",["u8"]]]]],[11,R[1806],E,"Adds an [`AccountData`] to this data store.",9,[[["self"],[R[1604]]]]],[11,"add_module",E,"Adds a [`CompiledModule`] to this data store.",9,[[["self"],[R[750]],[R[484]]]]],[0,"executor",R[1790],"Support for running the VM to execute and verify…",N,N],[3,R[1828],R[1815],"Provides an environment to run a VM instance.",N,N],[5,"test_all_genesis_impl",E,E,N,[[["f"]],[R[0]]]],[5,"test_all_genesis",E,E,N,[[]]],[11,"from_genesis",E,"Creates an executor from a genesis [`WriteSet`].",10,[[[R[411]],[R[24],[R[928]]],[R[928]]],["self"]]],[11,"from_genesis_file",E,R[1805],10,[[],["self"]]],[11,"from_genesis_with_options",E,R[1805],10,[[[R[928]]],["self"]]],[11,"from_validator_set",E,E,10,[[[R[278]],[R[928]]],["self"]]],[11,"no_genesis",E,"Creates an executor in which no genesis state has been…",10,[[],["self"]]],[11,"create_accounts",E,"Creates a number of [`Account`] instances all with the…",10,[[["self"],["usize"],["u64"]],[["vec",["account"]],["account"]]]],[11,"apply_write_set",E,"Applies a [`WriteSet`] to this executor's data store.",10,[[["self"],[R[411]]]]],[11,R[1806],E,"Adds an account to this executor's data store.",10,[[["self"],[R[1604]]]]],[11,"add_module",E,"Adds a module to this executor's data store.",10,[[["self"],[R[750]],[R[484]]]]],[11,"read_account_resource",E,"Reads the resource [`Value`] for an account from this…",10,[[["self"],["account"]],[[R[273]],[R[24],[R[273]]]]]],[11,R[1674],E,"Executes the given block of transactions.",10,[[["self"],["vec",[R[394]]],[R[394]]],[["vec",[R[510]]],[R[493]],[R[0],["vec",R[493]]]]]],[11,"execute_transaction",E,E,10,[[["self"],[R[394]]],[R[510]]]],[11,"read_from_access_path",E,"Get the blob for the associated AccessPath",10,[[["self"],[R[267]]],[[R[24],["vec"]],["vec",["u8"]]]]],[11,"verify_transaction",E,"Verifies the given transaction by running it through the…",10,[[["self"],[R[394]]],[[R[24],[R[493]]],[R[493]]]]],[11,"get_state_view",E,E,10,[[["self"]],[R[1817]]]],[0,"gas_costs",R[1790],"Gas costs for common transactions.",N,N],[3,R[1838],R[1816],"The gas cost of a first time create-account transaction.",N,N],[3,R[1839],E,"The gas cost of a create-account transaction.",N,N],[3,R[1840],E,R[1807],N,N],[3,R[1841],E,R[1807],N,N],[3,R[1842],E,R[1807],N,N],[3,R[1843],E,R[1807],N,N],[3,R[1808],E,"The gas cost of a peer-to-peer transaction.",N,N],[3,R[1844],E,"The gas cost of a peer-to-peer transaction with an…",N,N],[3,R[1845],E,R[1809],N,N],[3,R[1846],E,R[1809],N,N],[3,R[1847],E,R[1810],N,N],[3,R[1848],E,R[1810],N,N],[3,R[1835],E,"The gas cost of a rotate-key transaction.",N,N],[17,"TXN_RESERVED",E,"The gas each transaction is configured to reserve. If the…",N,N],[11,R[904],R[1811],"Returns a [`Strategy`] that creates `AccountData` instances.",1,[[]]],[14,"assert_prologue_parity",R[1790],E,N,N],[14,"assert_prologue_disparity",E,E,N,N],[11,R[13],R[1811],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[13],R[1812],E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[1038],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",R[1813],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",R[1814],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[172],E,E,9,[[]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",R[1815],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",R[1816],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"apply",R[1812],E,11,[[["self"],[R[1795]]]]],[11,"apply",E,E,12,[[["self"],[R[1795]]]]],[11,"apply",E,E,13,[[["self"],[R[1795]]]]],[11,"apply",E,E,14,[[["self"],[R[1795]]]]],[11,"apply",E,E,15,[[["self"],[R[1795]]]]],[11,R[75],R[1811],E,0,[[],["self"]]],[11,R[75],R[1814],E,9,[[],[R[1817]]]],[11,"clone",R[1811],E,0,[[["self"]],["account"]]],[11,"clone",E,E,1,[[["self"]],[R[1604]]]],[11,"clone",R[1812],E,11,[[["self"]],["createaccountgen"]]],[11,"clone",E,E,12,[[["self"]],["createexistingaccountgen"]]],[11,"clone",E,E,13,[[["self"]],["p2ptransfergen"]]],[11,"clone",E,E,14,[[["self"]],["p2pnewreceivergen"]]],[11,"clone",E,E,15,[[["self"]],["rotatekeygen"]]],[11,"clone",E,E,4,[[["self"]],["accountuniversegen"]]],[11,"clone",E,E,5,[[["self"]],[R[1795]]]],[11,"clone",E,E,6,[[["self"]],["accountpairgen"]]],[11,"clone",E,E,3,[[["self"]],[R[1818]]]],[11,"clone",E,E,8,[[["self"]],[R[1819]]]],[11,"eq",R[1811],E,0,[[["self"],["account"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["account"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1604]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1604]]],["bool"]]],[11,"eq",R[1812],E,8,[[["self"],[R[1819]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[1819]]],["bool"]]],[11,"deref",R[1813],E,16,[[["self"]],["vec"]]],[11,"deref",E,E,17,[[["self"]],["vec"]]],[11,"deref",E,E,18,[[["self"]],["vec"]]],[11,"deref",E,E,19,[[["self"]],["vec"]]],[11,"deref",R[1814],E,20,[[["self"]],[R[411]]]],[11,"deref",E,E,21,[[["self"]],["vec"]]],[11,"deref",R[1816],E,22,[[["self"]],["u64"]]],[11,"deref",E,E,23,[[["self"]],["u64"]]],[11,"deref",E,E,24,[[["self"]],["u64"]]],[11,"deref",E,E,25,[[["self"]],["u64"]]],[11,"deref",E,E,26,[[["self"]],["u64"]]],[11,"deref",E,E,27,[[["self"]],["u64"]]],[11,"deref",E,E,28,[[["self"]],["u64"]]],[11,"deref",E,E,29,[[["self"]],["u64"]]],[11,"deref",E,E,30,[[["self"]],["u64"]]],[11,"deref",E,E,31,[[["self"]],["u64"]]],[11,"deref",E,E,32,[[["self"]],["u64"]]],[11,"deref",E,E,33,[[["self"]],["u64"]]],[11,"deref",E,E,34,[[["self"]],["u64"]]],[11,"fmt",R[1811],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1812],E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1814],E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1815],E,10,[[["self"],[R[17]]],[R[0]]]],[11,R[34],R[1812],E,11,[[]]],[11,R[34],E,E,12,[[]]],[11,R[34],E,E,13,[[]]],[11,R[34],E,E,14,[[]]],[11,R[34],E,E,15,[[]]],[11,R[34],E,E,6,[[]]],[11,R[34],R[1811],E,0,[[]]],[11,R[172],R[1813],E,16,[[["self"]]]],[11,R[172],E,E,17,[[["self"]]]],[11,R[172],E,E,18,[[["self"]]]],[11,R[172],E,E,19,[[["self"]]]],[11,R[172],R[1814],E,20,[[["self"]]]],[11,R[172],E,E,21,[[["self"]]]],[11,R[172],R[1816],E,22,[[["self"]]]],[11,R[172],E,E,23,[[["self"]]]],[11,R[172],E,E,24,[[["self"]]]],[11,R[172],E,E,25,[[["self"]]]],[11,R[172],E,E,26,[[["self"]]]],[11,R[172],E,E,27,[[["self"]]]],[11,R[172],E,E,28,[[["self"]]]],[11,R[172],E,E,29,[[["self"]]]],[11,R[172],E,E,30,[[["self"]]]],[11,R[172],E,E,31,[[["self"]]]],[11,R[172],E,E,32,[[["self"]]]],[11,R[172],E,E,33,[[["self"]]]],[11,R[172],E,E,34,[[["self"]]]],[11,"get",R[1814],E,9,[[["self"],[R[267]]],[[R[24],["vec"]],[R[0],[R[24]]]]]],[11,"multi_get",E,E,9,[[["self"]],[["vec",[R[24]]],[R[0],["vec"]]]]],[11,R[1655],E,E,9,[[["self"]],["bool"]]],[11,"get",E,E,9,[[["self"],[R[267]]],[[R[24],["vec"]],[R[985],[R[24]]]]]]],"p":[[3,"Account"],[3,R[1609]],[3,R[1820]],[4,R[1821]],[3,R[1822]],[3,R[1823]],[3,R[1824]],[8,R[1825]],[3,R[1826]],[3,R[1827]],[3,R[1828]],[3,R[1829]],[3,R[1830]],[3,R[1831]],[3,R[1832]],[3,R[1833]],[3,R[1834]],[3,"MINT"],[3,R[1808]],[3,R[1835]],[3,R[1836]],[3,R[1837]],[3,R[1838]],[3,R[1839]],[3,R[1840]],[3,R[1841]],[3,R[1842]],[3,R[1843]],[3,R[1808]],[3,R[1844]],[3,R[1845]],[3,R[1846]],[3,R[1847]],[3,R[1848]],[3,R[1835]]]};
searchIndex["libra_canonical_serialization"]={"doc":"Libra Canonical Serialization (LCS)","i":[[4,"Error","libra_canonical_serialization",E,N,N],[13,"Eof",E,E,0,N],[13,"ExceededMaxLen",E,E,0,N],[13,"ExpectedBoolean",E,E,0,N],[13,"ExpectedMapKey",E,E,0,N],[13,"ExpectedMapValue",E,E,0,N],[13,"ExpectedOption",E,E,0,N],[13,"Custom",E,E,0,N],[13,"MissingLen",E,E,0,N],[13,"NotSupported",E,E,0,N],[13,"RemainingInput",E,E,0,N],[13,"Utf8",E,E,0,N],[5,R[430],E,"Deserializes a `&[u8]` into a type.",N,[[],[R[0]]]],[5,"from_bytes_seed",E,"Perform a stateful deserialization from a `&[u8]` using…",N,[[[T]],[R[0]]]],[5,R[144],E,"Serialize the given data structure as a `Vec<u8>` of LCS.",N,[[[T]],[["vec",["u8"]],[R[0],["vec"]]]]],[6,"Result",E,E,N,N],[17,"MAX_SEQUENCE_LENGTH",E,"Variable length sequences in LCS are limited to max length…",N,N],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clone",E,E,0,[[["self"]],["error"]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[61],E,E,0,[[["self"]],["str"]]],[11,"custom",E,E,0,[[["display"]],["self"]]],[11,"custom",E,E,0,[[["display"]],["self"]]]],"p":[[4,"Error"]]};
searchIndex["libra_config"]={"doc":E,"i":[[0,"config",R[930],E,N,N],[3,R[953],R[937],"Config pulls in configuration information from the config…",N,N],[12,"base",E,E,0,N],[12,"metrics",E,E,0,N],[12,"execution",E,E,0,N],[12,R[1506],E,E,0,N],[12,R[1580],E,E,0,N],[12,"storage",E,E,0,N],[12,"networks",E,E,0,N],[12,"consensus",E,E,0,N],[12,"mempool",E,E,0,N],[12,"state_sync",E,E,0,N],[12,"log_collector",E,E,0,N],[12,"vm_config",E,E,0,N],[3,R[954],E,E,N,N],[12,"data_dir_path",E,E,1,N],[12,"node_sync_retries",E,E,1,N],[12,"node_sync_channel_buffer_size",E,E,1,N],[12,"node_async_log_chan_size",E,E,1,N],[3,R[955],E,E,N,N],[12,"dir",E,E,2,N],[12,"collection_interval_ms",E,E,2,N],[12,"push_server_addr",E,E,2,N],[3,R[956],E,E,N,N],[12,R[333],E,E,3,N],[12,"port",E,E,3,N],[12,"testnet_genesis",E,E,3,N],[12,"genesis_file_location",E,E,3,N],[3,R[957],E,E,N,N],[12,"is_async",E,E,4,N],[12,"chan_size",E,E,4,N],[3,R[958],E,E,N,N],[12,R[333],E,E,5,N],[12,"admission_control_service_port",E,E,5,N],[12,"need_to_check_mempool_before_validation",E,E,5,N],[12,"max_concurrent_inbound_syncs",E,E,5,N],[12,"upstream_proxy_timeout",E,E,5,N],[3,R[959],E,E,N,N],[12,"admission_control_node_debug_port",E,E,6,N],[12,"storage_node_debug_port",E,E,6,N],[12,"metrics_server_port",E,E,6,N],[12,"public_metrics_server_port",E,E,6,N],[12,R[333],E,E,6,N],[3,R[960],E,E,N,N],[12,R[333],E,E,7,N],[12,"port",E,E,7,N],[12,"dir",E,E,7,N],[12,"grpc_max_receive_len",E,E,7,N],[3,R[961],E,E,N,N],[12,"peer_id",E,E,8,N],[12,"listen_address",E,E,8,N],[12,R[2028],E,E,8,N],[12,R[2031],E,E,8,N],[12,R[2032],E,E,8,N],[12,"enable_encryption_and_authentication",E,E,8,N],[12,"is_permissioned",E,E,8,N],[12,"role",E,E,8,N],[12,"network_keypairs",E,E,8,N],[12,"network_keypairs_file",E,E,8,N],[12,"network_peers",E,E,8,N],[12,"network_peers_file",E,E,8,N],[12,R[932],E,E,8,N],[12,"seed_peers_file",E,E,8,N],[3,R[962],E,E,N,N],[12,R[922],E,E,9,N],[12,"proposer_type",E,E,9,N],[12,R[921],E,E,9,N],[12,R[923],E,E,9,N],[12,R[924],E,E,9,N],[12,"consensus_keypair",E,E,9,N],[12,"consensus_keypair_file",E,E,9,N],[12,"consensus_peers",E,E,9,N],[12,"consensus_peers_file",E,E,9,N],[3,R[963],E,E,N,N],[12,"broadcast_transactions",E,E,10,N],[12,"shared_mempool_tick_interval_ms",E,E,10,N],[12,"shared_mempool_batch_size",E,E,10,N],[12,"shared_mempool_max_concurrent_inbound_syncs",E,E,10,N],[12,"capacity",E,E,10,N],[12,"capacity_per_user",E,E,10,N],[12,"system_transaction_timeout_secs",E,E,10,N],[12,"system_transaction_gc_interval_ms",E,E,10,N],[12,"mempool_service_port",E,E,10,N],[12,R[333],E,E,10,N],[3,R[964],E,E,N,N],[12,"chunk_limit",E,E,11,N],[12,"tick_interval_ms",E,E,11,N],[12,"long_poll_timeout_ms",E,E,11,N],[12,"max_chunk_limit",E,E,11,N],[12,"max_timeout_ms",E,E,11,N],[12,R[936],E,E,11,N],[3,R[968],E,E,N,N],[3,"VMConfig",E,"Holds the VM configuration, currently this is only the…",N,N],[12,"publishing_options",E,E,12,N],[4,"RoleType",E,E,N,N],[13,"Validator",E,E,13,N],[13,"FullNode",E,E,13,N],[4,R[965],E,E,N,N],[13,"FixedProposer",E,E,14,N],[13,"RotatingProposer",E,E,14,N],[13,"MultipleOrderedProposers",E,E,14,N],[4,R[966],E,"Defines and holds the publishing policies for the VM.…",N,N],[13,"Locked",E,"Only allow scripts on a whitelist to be run",15,N],[13,"CustomScripts",E,"Allow custom scripts, but not custom module publishing",15,N],[13,"Open",E,"Allow both custom scripts and custom module publishing",15,N],[8,R[967],E,E,N,N],[11,"load_config",E,E,16,[[["asref",["path"]],["path"]],["self"]]],[11,"save_config",E,E,16,[[["self"],["asref",["path"]],["path"]]]],[11,"parse",E,E,16,[[["str"]],[R[0]]]],[11,"new",E,"Constructs a new BaseConfig with an empty temp directory",1,[[["usize"],["pathbuf"],["u64"]],["self"]]],[11,"load",E,E,8,[[["self"],["asref",["path"]],["path"]],[R[0]]]],[11,"load",E,E,9,[[["self"],["asref",["path"]],["path"]],[R[0]]]],[11,"get_proposer_type",E,E,9,[[["self"]],[R[948]]]],[11,R[921],E,E,9,[[["self"]],["u32"]]],[11,R[922],E,E,9,[[["self"]],["u64"]]],[11,R[923],E,E,9,[[["self"]],[R[24]]]],[11,R[924],E,E,9,[[["self"]],[R[24]]]],[11,"load",E,"Reads the config file and returns the configuration object…",0,[[["asref",["path"]],["path"]],[R[0]]]],[11,R[1865],E,R[925],0,[[["self"]],["bool"]]],[11,"get_role",E,R[925],0,[[["self"]],[R[952]]]],[11,"get_validator_network_config",E,"Returns the validator network config for this node.",0,[[["self"]],[[R[24],[R[926]]],[R[926]]]]],[11,"get_genesis_transaction_file",E,E,0,[[["self"]],["pathbuf"]]],[11,"get_genesis_transaction",E,E,0,[[["self"]],[[R[0],[R[351]]],[R[351]]]]],[11,"get_storage_dir",E,E,0,[[["self"]],["pathbuf"]]],[11,"get_metrics_dir",E,E,0,[[["self"]],[[R[24],["pathbuf"]],["pathbuf"]]]],[11,"is_upstream_network",E,"Returns true if network_config is for an upstream network",0,[[["self"],[R[926]]],["bool"]]],[11,"get_upstream_peer_ids",E,E,0,[[["self"]],[["vec",["peerid"]],["peerid"]]]],[11,"get_single_node_test_config",E,R[927],17,[[["bool"]],[R[929]]]],[11,"get_single_node_test_config_publish_options",E,R[927],17,[[[R[928]],[R[24],[R[928]]],["bool"]],[R[929]]]],[11,"randomize_config_ports",E,E,17,[[[R[929]]]]],[11,"is_open",E,E,15,[[["self"]],["bool"]]],[11,"get_whitelist_set",E,E,15,[[["self"]],[[R[24],["hashset"]],["hashset"]]]],[0,"keys",R[930],E,N,N],[3,R[969],R[938],E,N,N],[3,R[970],E,E,N,N],[5,"serialize_opt_key",E,E,N,[[[R[24]],["s"]],[R[0]]]],[5,"deserialize_opt_key",E,E,N,[[["d"]],[[R[0],[R[24]]],[R[24]]]]],[11,"load",E,E,18,[[[R[192]],[R[190]]],["self"]]],[11,"take_network_signing_private",E,R[931],18,[[["self"]],[[R[24],[R[192]]],[R[192]]]]],[11,"get_network_identity_private",E,E,18,[[["self"]],[R[190]]]],[11,"get_network_identity_public",E,E,18,[[["self"]],[R[187]]]],[11,"get_network_identity_keypair",E,E,18,[[["self"]]]],[11,"load",E,E,19,[[[R[24],[R[192]]],[R[192]]],["self"]]],[11,"take_consensus_private",E,R[931],19,[[["self"]],[[R[24],[R[192]]],[R[192]]]]],[11,"is_present",E,E,19,[[["self"]],["bool"]]],[0,R[932],R[930],E,N,N],[3,R[971],R[939],E,N,N],[12,R[932],E,E,20,N],[3,R[972],E,E,N,N],[11,R[1782],E,R[933],21,[[[R[934]],["u16"],[R[24],["u16"]]],[R[935]]]],[11,"get_test_config_with_ipver",E,R[933],21,[[[R[934]],["u16"],[R[24],["u16"]],["bool"]],[R[935]]]],[0,R[2029],R[930],E,N,N],[3,R[973],R[940],E,N,N],[12,"network_signing_pubkey",E,E,22,N],[12,"network_identity_pubkey",E,E,22,N],[3,R[974],E,E,N,N],[12,"network_signing_private_key",E,E,23,N],[12,"network_identity_private_key",E,E,23,N],[3,R[975],E,E,N,N],[12,"peers",E,E,24,N],[3,R[976],E,E,N,N],[12,"consensus_pubkey",E,E,25,N],[3,R[977],E,E,N,N],[12,"consensus_private_key",E,E,26,N],[3,R[978],E,E,N,N],[12,"peers",E,E,27,N],[3,R[979],E,E,N,N],[12,R[936],E,"List of PeerIds serialized as string.",28,N],[3,R[980],E,E,N,N],[5,"serialize_key",E,E,N,[[["k"],["s"]],[R[0]]]],[5,"deserialize_key",E,E,N,[[["d"]],[R[0]]]],[5,"serialize_ordered_map",E,E,N,[[["s"],["hashmap"]],[R[0]]]],[11,"get_validator_set",E,"Return a sorted vector of ValidatorPublicKey's",27,[[["self"],[R[934]]],[R[278]]]],[11,"get_validator_verifier",E,E,27,[[["self"]],[R[296]]]],[11,"gen_validator_nodes",E,E,29,[[["usize"],[R[24]]]]],[11,"gen_full_nodes",E,E,29,[[["usize"],[R[24]]]]],[0,"utils",R[930],E,N,N],[5,"get_available_port","libra_config::utils","Return an ephemeral, available port. On unix systems, the…",N,[[],["u16"]]],[5,"get_local_ip",E,"Extracts one local non-loopback IP address, if one exists.…",N,[[],[[R[24],[R[85]]],[R[85]]]]],[5,"deserialize_whitelist",E,E,N,[[["d"]],[[R[0],["hashset"]],["hashset"]]]],[5,"serialize_whitelist",E,E,N,[[["hashset"],["s"]],[R[0]]]],[11,R[13],R[937],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[169],E,E,0,[[["self"]],[R[149]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[172],E,E,2,[[]]],[11,R[169],E,E,2,[[["self"]],[R[149]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[172],E,E,3,[[]]],[11,R[169],E,E,3,[[["self"]],[R[149]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,R[169],E,E,4,[[["self"]],[R[149]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[172],E,E,5,[[]]],[11,R[169],E,E,5,[[["self"]],[R[149]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[172],E,E,6,[[]]],[11,R[169],E,E,6,[[["self"]],[R[149]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[172],E,E,7,[[]]],[11,R[169],E,E,7,[[["self"]],[R[149]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[172],E,E,8,[[]]],[11,R[169],E,E,8,[[["self"]],[R[149]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[172],E,E,9,[[]]],[11,R[169],E,E,9,[[["self"]],[R[149]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[172],E,E,10,[[]]],[11,R[169],E,E,10,[[["self"]],[R[149]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[172],E,E,11,[[]]],[11,R[169],E,E,11,[[["self"]],[R[149]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[172],E,E,12,[[]]],[11,R[169],E,E,12,[[["self"]],[R[149]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[58]]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,R[169],E,E,15,[[["self"]],[R[149]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],R[938],E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[172],E,E,18,[[]]],[11,R[169],E,E,18,[[["self"]],[R[149]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"clear",E,E,19,[[["self"]]]],[11,R[172],E,E,19,[[]]],[11,R[169],E,E,19,[[["self"]],[R[149]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],R[939],E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"clear",E,E,20,[[["self"]]]],[11,R[172],E,E,20,[[]]],[11,R[169],E,E,20,[[["self"]],[R[149]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[13],R[940],E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,R[169],E,E,22,[[["self"]],[R[149]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"clear",E,E,24,[[["self"]]]],[11,R[172],E,E,24,[[]]],[11,R[169],E,E,24,[[["self"]],[R[149]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,R[169],E,E,25,[[["self"]],[R[149]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"clear",E,E,27,[[["self"]]]],[11,R[172],E,E,27,[[]]],[11,R[169],E,E,27,[[["self"]],[R[149]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[172],E,E,28,[[]]],[11,R[169],E,E,28,[[["self"]],[R[149]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[75],R[937],E,1,[[],["baseconfig"]]],[11,R[75],E,E,2,[[],[R[941]]]],[11,R[75],E,E,3,[[],[R[942]]]],[11,R[75],E,E,4,[[],[R[943]]]],[11,R[75],E,E,5,[[],[R[944]]]],[11,R[75],E,E,6,[[],[R[945]]]],[11,R[75],E,E,7,[[],[R[946]]]],[11,R[75],E,E,8,[[],[R[926]]]],[11,R[75],E,E,9,[[],[R[947]]]],[11,R[75],E,E,10,[[],[R[949]]]],[11,R[75],E,E,11,[[],["self"]]],[11,R[75],E,E,12,[[],["vmconfig"]]],[11,R[75],R[938],E,18,[[],["self"]]],[11,R[75],E,E,19,[[],["self"]]],[11,R[75],R[939],E,20,[[],[R[935]]]],[11,R[75],R[940],E,24,[[],[R[934]]]],[11,R[75],E,E,27,[[],[R[950]]]],[11,R[75],E,E,28,[[],[R[951]]]],[11,"clone",R[937],E,0,[[["self"]],[R[929]]]],[11,"clone",E,E,13,[[["self"]],[R[952]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],[R[941]]]],[11,"clone",E,E,3,[[["self"]],[R[942]]]],[11,"clone",E,E,4,[[["self"]],[R[943]]]],[11,"clone",E,E,5,[[["self"]],[R[944]]]],[11,"clone",E,E,6,[[["self"]],[R[945]]]],[11,"clone",E,E,7,[[["self"]],[R[946]]]],[11,"clone",E,E,8,[[["self"]],[R[926]]]],[11,"clone",E,E,9,[[["self"]],[R[947]]]],[11,"clone",E,E,14,[[["self"]],[R[948]]]],[11,"clone",E,E,10,[[["self"]],[R[949]]]],[11,"clone",E,E,11,[[["self"]],[R[2102]]]],[11,"clone",E,E,12,[[["self"]],["vmconfig"]]],[11,"clone",E,E,15,[[["self"]],[R[928]]]],[11,"clone",R[938],E,18,[[["self"]],["networkkeypairs"]]],[11,"clone",E,E,19,[[["self"]],["consensuskeypair"]]],[11,"clone",R[939],E,20,[[["self"]],[R[935]]]],[11,"clone",R[940],E,22,[[["self"]],["networkpeerinfo"]]],[11,"clone",E,E,24,[[["self"]],[R[934]]]],[11,"clone",E,E,25,[[["self"]],["consensuspeerinfo"]]],[11,"clone",E,E,27,[[["self"]],[R[950]]]],[11,"clone",E,E,28,[[["self"]],[R[951]]]],[11,"eq",R[937],E,13,[[["self"],[R[952]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[948]]],["bool"]]],[11,"from",E,E,13,[[[T]],[R[952]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[938],E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[939],E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[940],E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[937],E,13,[[["self"],[R[17]]],[R[0]]]],[11,R[193],E,E,0,[[["__d"]],[R[0]]]],[11,R[193],E,E,1,[[["__d"]],[R[0]]]],[11,R[193],E,E,2,[[["__d"]],[R[0]]]],[11,R[193],E,E,3,[[["__d"]],[R[0]]]],[11,R[193],E,E,4,[[["__d"]],[R[0]]]],[11,R[193],E,E,5,[[["__d"]],[R[0]]]],[11,R[193],E,E,6,[[["__d"]],[R[0]]]],[11,R[193],E,E,7,[[["__d"]],[R[0]]]],[11,R[193],E,E,8,[[["__d"]],[R[0]]]],[11,R[193],E,E,9,[[["__d"]],[R[0]]]],[11,R[193],E,E,10,[[["__d"]],[R[0]]]],[11,R[193],E,E,11,[[["__d"]],[R[0]]]],[11,R[193],E,E,12,[[["__d"]],[R[0]]]],[11,R[193],E,E,15,[[["__d"]],[R[0]]]],[11,R[193],R[938],E,18,[[["__d"]],[R[0]]]],[11,R[193],E,E,19,[[["__d"]],[R[0]]]],[11,R[193],R[939],E,20,[[["__d"]],[R[0]]]],[11,R[193],R[940],E,22,[[["__d"]],[R[0]]]],[11,R[193],E,E,24,[[["__d"]],[R[0]]]],[11,R[193],E,E,25,[[["__d"]],[R[0]]]],[11,R[193],E,E,27,[[["__d"]],[R[0]]]],[11,R[193],E,E,28,[[["__d"]],[R[0]]]],[11,R[142],R[937],E,0,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,1,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,3,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,4,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,5,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,7,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,8,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,9,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,10,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,11,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,12,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,15,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[938],E,18,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,19,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[939],E,20,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[940],E,22,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,24,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,25,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,27,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,28,[[["self"],["__s"]],[R[0]]]]],"p":[[3,R[953]],[3,R[954]],[3,R[955]],[3,R[956]],[3,R[957]],[3,R[958]],[3,R[959]],[3,R[960]],[3,R[961]],[3,R[962]],[3,R[963]],[3,R[964]],[3,"VMConfig"],[4,"RoleType"],[4,R[965]],[4,R[966]],[8,R[967]],[3,R[968]],[3,R[969]],[3,R[970]],[3,R[971]],[3,R[972]],[3,R[973]],[3,R[974]],[3,R[975]],[3,R[976]],[3,R[977]],[3,R[978]],[3,R[979]],[3,R[980]]]};
searchIndex["libra_crypto"]={"doc":"A library supplying various cryptographic primitives","i":[[0,"bls12381",R[145],"This module implements the Verifying/Signing API for…",N,N],[3,R[218],R[170],"A BLS12-381 private key.",N,N],[3,R[194],E,"A BLS12-381 public key.",N,N],[3,R[195],E,"A BLS12-381 signature.",N,N],[17,"BLS12381_PRIVATE_KEY_LENGTH",E,"The length of the BLS12381PrivateKey.",N,N],[17,"BLS12381_PUBLIC_KEY_LENGTH",E,"The length of the BLS12381PublicKey.",N,N],[17,"BLS12381_SIGNATURE_LENGTH",E,"The length of the BLS12381Signature.",N,N],[11,R[144],E,"Serializes a BLS12381PublicKey.",0,[[["self"]]]],[11,R[144],E,"Serializes a BLS12381Signature.",1,[[["self"]]]],[0,"ed25519",R[145],"This module provides an API for the PureEdDSA signature…",N,N],[3,R[196],R[146],R[1616],N,N],[3,R[197],E,R[581],N,N],[3,R[198],E,R[582],N,N],[0,R[36],E,R[162],N,N],[5,R[163],"libra_crypto::ed25519::compat",R[164],N,[[[T]]]],[5,R[165],E,R[166],N,[[]]],[5,R[1617],E,R[1618],N,[[]]],[17,R[1619],R[146],R[1620],N,N],[17,R[1621],E,R[1622],N,N],[17,R[1623],E,R[1624],N,N],[11,R[144],E,R[1625],2,[[["self"]]]],[11,R[144],E,R[597],3,[[["self"]]]],[11,R[144],E,R[598],4,[[["self"]]]],[11,R[599],E,R[600],4,[[],[[R[147]],[R[0],[R[147]]]]]],[0,"hash",R[145],"This module defines traits and implementations of…",N,N],[3,R[202],R[171],"Output value of our hash function. Intentionally opaque…",N,N],[3,R[219],E,"An iterator over `HashValue` that generates one bit for…",N,N],[3,R[220],E,"The hasher used to compute the hash of an AccessPath object.",N,N],[3,R[221],E,"The hasher used to compute the hash of an AccountAddress…",N,N],[3,R[222],E,"The hasher used to compute the hash of a LedgerInfo object.",N,N],[3,R[223],E,R[148],N,N],[3,R[224],E,R[148],N,N],[3,R[225],E,R[148],N,N],[3,R[226],E,"The hasher used to compute the hash of a leaf node in the…",N,N],[3,R[227],E,"The hasher used to compute the hash of the blob content of…",N,N],[3,R[228],E,"The hasher used to compute the hash of a TransactionInfo…",N,N],[3,R[229],E,"The hasher used to compute the hash of a RawTransaction…",N,N],[3,R[230],E,"The hasher used to complete the hash of a Transaction…",N,N],[3,R[231],E,"The hasher used to compute the hash (block_id) of a Block…",N,N],[3,R[232],E,"The hasher used to compute the hash of a TimeoutProposal",N,N],[3,R[233],E,"The hasher used to compute the hash of a VoteData object.",N,N],[3,R[234],E,"The hasher used to compute the hash of a ContractEvent…",N,N],[3,R[235],E,"The hasher used only for testing. It doesn't have a salt.",N,N],[3,R[236],E,"The hasher used to compute the hash of a DiscoveryMsg…",N,N],[3,R[237],E,"Placeholder hash of `Accumulator`.",N,N],[3,R[238],E,"Placeholder hash of `SparseMerkleTree`.",N,N],[3,R[239],E,"Block id reserved as the id of parent block of the genesis…",N,N],[3,R[240],E,"Genesis block id is used as a parent of the very first…",N,N],[8,R[199],E,R[583],N,N],[16,"Hasher",E,R[584],5,N],[10,"hash",E,R[585],5,[[["self"]],[R[149]]]],[8,R[200],E,"A trait for generating hash from arbitrary stream of bytes.",N,N],[10,"finish",E,"Finish constructing the [`HashValue`].",6,[[],[R[149]]]],[10,"write",E,"Write bytes into the hasher.",6,[[["self"]],["self"]]],[11,"write_u8",E,"Write a single byte into the hasher.",6,[[["self"],["u8"]]]],[8,R[201],E,"Provides a test_only_hash() method that can be used in…",N,N],[10,R[169],E,"Generates a hash used only for tests.",7,[[["self"]],[R[149]]]],[18,"LENGTH",E,"The length of the hash in bytes.",8,N],[18,"LENGTH_IN_BITS",E,"The length of the hash in bits.",8,N],[18,"LENGTH_IN_NIBBLES",E,"The length of the hash in nibbles.",8,N],[11,"new",E,"Create a new [`HashValue`] from a byte array.",8,[[],["self"]]],[11,"from_slice",E,"Create from a slice (e.g. retrieved from storage).",8,[[],[R[0]]]],[11,"to_vec",E,"Dumps into a vector.",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"zero",E,"Creates a zero-initialized instance.",8,[[],["self"]]],[11,"is_zero",E,"Check if the hash value is zero.",8,[[["self"]],["bool"]]],[11,"random",E,"Create a cryptographically random instance.",8,[[],["self"]]],[11,"random_with_rng",E,"Creates a random instance with given rng. Useful in unit…",8,[[["r"]],["self"]]],[11,"from_sha3_256",E,"Convenience function to compute a sha3-256 HashValue of…",8,[[],["self"]]],[11,"iter_bits",E,"Returns a `HashValueBitIterator` over all the bits that…",8,[[["self"]],["hashvaluebititerator"]]],[11,"from_bit_iter",E,"Constructs a `HashValue` from an iterator of bits.",8,[[],[R[0]]]],[11,"common_prefix_bits_len",E,R[150],8,[[["self"],[R[149]]],["usize"]]],[11,"common_prefix_nibbles_len",E,R[150],8,[[["self"],[R[149]]],["usize"]]],[11,"get_nibble",E,"Returns the `index`-th nibble.",8,[[["self"],["usize"]],[R[33]]]],[11,R[269],E,"Returns first SHORT_STRING_LENGTH bytes as String in hex",8,[[["self"]],[R[58]]]],[0,"hkdf",R[145],"An implementation of HKDF, the HMAC-based…",N,N],[3,"Hkdf",R[173],"Structure representing the HKDF, capable of HKDF-Extract…",N,N],[4,R[203],E,"An error type for HKDF key derivation issues.",N,N],[13,"InvalidOutputLengthError",E,"HKDF expand output exceeds the maximum allowed or is zero.",9,N],[13,"NotSupportedHashFunctionError",E,"Hash function is not supported because its output is less…",9,N],[13,"WrongPseudorandomKeyError",E,"PRK on HKDF-Expand should not be less than the underlying…",9,N],[13,R[152],E,R[153],9,N],[11,"extract",E,"The RFC5869 HKDF-Extract operation.",10,[[[R[24]]],[["vec",["u8"]],[R[0],["vec",R[151]]],[R[151]]]]],[11,"expand",E,"The RFC5869 HKDF-Expand operation.",10,[[[R[24]],["usize"]],[["vec",["u8"]],[R[0],["vec",R[151]]],[R[151]]]]],[11,"extract_then_expand",E,"HKDF Extract then Expand operation as a single step.",10,[[[R[24]],["usize"]],[["vec",["u8"]],[R[0],["vec",R[151]]],[R[151]]]]],[0,"slip0010",R[145],"This module provides an API for SLIP-0010 and for the…",N,N],[3,R[205],R[174],"Extended private key that includes additional child_path…",N,N],[3,"Slip0010",E,"SLIP-0010 structure.",N,N],[4,R[204],E,"An error type for SLIP-0010 key derivation issues.",N,N],[13,"KeyPathError",E,"Invalid key path.",11,N],[13,"SecretKeyError",E,"Any error related to key derivation.",11,N],[13,R[152],E,R[153],11,N],[11,"new",E,"Construct a new ExtendedPrivKey.",12,[[[R[58]],[R[155]]],[[R[0],[R[154]]],[R[154]]]]],[11,R[578],E,"Get public key.",12,[[["self"]],[R[270]]]],[11,"get_key_path",E,"Get key path.",12,[[["self"]],["str"]]],[11,"get_private",E,"Get private key.",12,[[["self"]],[R[155]]]],[11,"get_chain_code",E,"Get chain code.",12,[[["self"]]]],[11,"generate_master",E,"Generate master key from seed.",13,[[],[[R[0],[R[156],R[154]]],[R[156]],[R[154]]]]],[11,"derive_child_key",E,"Generate a child private key.",13,[[[R[156]],["u32"]],[[R[0],[R[156],R[154]]],[R[156]],[R[154]]]]],[11,"is_valid_path",E,"Match a valid path of the form \"m/A/B..\"; each sub-path…",13,[[["str"]],["bool"]]],[11,"derive_from_path",E,"Derive a key from a path and a seed.",13,[[["str"]],[[R[0],[R[156],R[154]]],[R[156]],[R[154]]]]],[0,"traits",R[145],"This module provides a generic set of traits for dealing…",N,N],[4,R[206],R[175],"An error type for key and signature validation issues, see…",N,N],[13,"DeserializationError",E,"Key or signature material does not deserialize correctly.",14,N],[13,"ValidationError",E,"Key or signature material deserializes, but is otherwise…",14,N],[13,"WrongLengthError",E,"Key or signature material does not have the expected size.",14,N],[13,"CanonicalRepresentationError",E,"Part of the signature or key is not canonical resulting to…",14,N],[13,"SmallSubgroupError",E,"A curve point (i.e., a public key) lies on a small group.",14,N],[13,"PointNotOnCurveError",E,"A curve point (i.e., a public key) does not satisfy the…",14,N],[8,R[245],E,"Key material with a notion of byte validation.",N,N],[10,R[144],E,"Convert the valid key to bytes.",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[8,R[207],E,R[1626],N,N],[11,R[1627],E,R[1628],16,[[["str"]],[[R[147]],[R[0],[R[147]]]]]],[11,R[1629],E,R[1630],16,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[8,R[208],E,"A type family for key material that should remain secret…",N,N],[16,"PublicKeyMaterial",E,R[157],17,N],[11,R[168],E,"Returns the associated public key",17,[[["self"]]]],[8,R[209],E,"A type family of valid keys that know how to sign.",N,N],[16,R[159],E,"The associated verifying key type for this signing key.",18,N],[16,R[158],E,"The associated signature type for this signing key.",18,N],[10,R[178],E,"Signs an input message.",18,[[["self"],[R[149]]]]],[11,"verifying_key",E,"Returns the associated verifying key",18,[[["self"]]]],[8,R[210],E,"A type for key material that can be publicly shared, and…",N,N],[16,"PrivateKeyMaterial",E,R[157],19,N],[8,R[211],E,"A type family of public keys that are used for signing.",N,N],[16,R[160],E,"The associated signing key type for this verifying key.",20,N],[16,R[158],E,"The associated signature type for this verifying key.",20,N],[11,R[440],E,"We provide the logical implementation which dispatches to…",20,[[["self"],[R[149]]],[R[0]]]],[11,R[161],E,"We provide the implementation which dispatches to the…",20,[[["vec"],[R[149]]],[R[0]]]],[8,R[212],E,"A type family for signature material that knows which…",N,N],[16,R[159],E,"The associated verifying key type for this signature.",21,N],[16,R[160],E,"The associated signing key type for this signature",21,N],[10,"verify",E,"The verification function.",21,[[["self"],[R[149]]],[R[0]]]],[10,R[179],E,"Native verification function.",21,[[["self"]],[R[0]]]],[10,R[144],E,"Convert the signature into a byte representation.",21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[161],E,"The implementer can override a batch verification…",21,[[["vec"],[R[149]]],[R[0]]]],[8,"Uniform",E,"A type family for schemes which know how to generate key…",N,N],[10,R[182],E,"Generate key material from an RNG for testing purposes.",22,[[["r"]],["self"]]],[8,"Genesis",E,"A type family with a by-convention notion of genesis…",N,N],[10,R[432],E,"Produces the genesis private key.",23,[[],["self"]]],[8,R[213],E,"A type family for Diffie-Hellman private key material",N,N],[16,"DHPublicKeyMaterial",E,"The associated PublicKey type",24,N],[16,"DHSharedKeyMaterial",E,"The associated SharedKey type obtained as a result of the…",24,N],[10,"dh",E,"Generates a SharedKey using a peer PublicKey",24,[[]]],[0,"vrf",R[145],"This module contains implementations of a verifiable…",N,N],[0,"ecvrf","libra_crypto::vrf","This module implements an instantiation of a verifiable…",N,N],[3,R[214],R[176],"An ECVRF private key",N,N],[3,R[216],E,"An ECVRF public key",N,N],[3,R[215],E,"A longer private key which is slightly optimized for proof…",N,N],[3,"Proof",E,"A VRF proof that can be used to validate an input with a…",N,N],[3,"Output",E,"The ECVRF output produced from the proof",N,N],[17,"OUTPUT_LENGTH",E,"The number of bytes of [`Output`]",N,N],[17,"PROOF_LENGTH",E,"The number of bytes of [`Proof`]",N,N],[11,"prove",E,"Produces a proof for an input (using the private key)",25,[[["self"]],["proof"]]],[11,"prove",E,"Produces a proof for an input (using the expanded private…",26,[[["self"],[R[188]]],["proof"]]],[11,"verify",E,"Given a [`Proof`] and an input, returns whether or not the…",27,[[["self"],["proof"]],[R[0]]]],[11,"new",E,"Produces a new Proof struct from its fields",28,[[["edwardspoint"],["ed25519_scalar"]],["proof"]]],[11,R[144],E,"Converts a Proof into bytes",28,[[["self"]]]],[11,R[144],E,"Converts an Output into bytes",29,[[["self"]]]],[0,"x25519",R[145],"An implementation of x25519 elliptic curve key pairs…",N,N],[3,R[241],R[167],"An x25519 ephemeral private (secret) key",N,N],[3,R[217],E,"An x25519 static private (secret) key",N,N],[3,R[242],E,"An x25519 public key",N,N],[3,R[243],E,"An x25519 public key to match the X25519Static key type,…",N,N],[3,R[244],E,"An x25519 shared key",N,N],[0,R[36],E,R[162],N,N],[5,R[163],"libra_crypto::x25519::compat",R[164],N,[[[T]]]],[5,R[165],E,R[166],N,[[]]],[17,"X25519_PUBLIC_KEY_LENGTH",R[167],"TODO: move traits to the right file (possibly traits.rs)…",N,N],[17,"X25519_PRIVATE_KEY_LENGTH",E,"The length of the DHPrivateKey",N,N],[11,"derive_keypair_from_seed",E,"Derives a keypair `(X25519PrivateKey, X25519PublicKey)`…",30,[[[R[24]]]]],[11,"generate_keypair_hybrid",E,"Generates a random keypair `(PrivateKey, PublicKey)` by…",30,[[[R[24]]]]],[0,"test_utils",R[145],"Internal module containing convenience utility functions…",N,N],[3,"KeyPair",R[177],R[1631],N,N],[12,R[1632],E,R[1633],31,N],[12,R[168],E,R[1634],31,N],[17,"TEST_SEED",E,"A deterministic seed for PRNGs related to keys",N,N],[11,R[169],R[170],E,32,[[["self"]],[R[149]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[57],E,E,32,[[["self"]],[R[58]]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[169],E,E,0,[[["self"]],[R[149]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[169],R[146],E,2,[[["self"]],[R[149]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[57],E,E,2,[[["self"]],[R[58]]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[169],E,E,3,[[["self"]],[R[149]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[58]]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[169],E,E,4,[[["self"]],[R[149]]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[169],R[171],E,8,[[["self"]],[R[149]]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[172],E,E,8,[[]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,33,[[],[U]]],[11,R[246],E,E,33,[[],["i"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"clear",E,E,34,[[["self"]]]],[11,R[172],E,E,34,[[]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,"clear",E,E,35,[[["self"]]]],[11,R[172],E,E,35,[[]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[2],E,E,36,[[[U]],[R[0]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[R[7]]]],[11,"clear",E,E,36,[[["self"]]]],[11,R[172],E,E,36,[[]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[2],E,E,37,[[[U]],[R[0]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[R[7]]]],[11,"clear",E,E,37,[[["self"]]]],[11,R[172],E,E,37,[[]]],[11,"vzip",E,E,37,[[],["v"]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[2],E,E,38,[[[U]],[R[0]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[R[7]]]],[11,"clear",E,E,38,[[["self"]]]],[11,R[172],E,E,38,[[]]],[11,"vzip",E,E,38,[[],["v"]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[2],E,E,39,[[[U]],[R[0]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[R[7]]]],[11,"clear",E,E,39,[[["self"]]]],[11,R[172],E,E,39,[[]]],[11,"vzip",E,E,39,[[],["v"]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[2],E,E,40,[[[U]],[R[0]]]],[11,R[3],E,E,40,[[],[R[0]]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[R[7]]]],[11,"clear",E,E,40,[[["self"]]]],[11,R[172],E,E,40,[[]]],[11,"vzip",E,E,40,[[],["v"]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[2],E,E,41,[[[U]],[R[0]]]],[11,R[3],E,E,41,[[],[R[0]]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[R[7]]]],[11,"clear",E,E,41,[[["self"]]]],[11,R[172],E,E,41,[[]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[2],E,E,42,[[[U]],[R[0]]]],[11,R[3],E,E,42,[[],[R[0]]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[R[7]]]],[11,"clear",E,E,42,[[["self"]]]],[11,R[172],E,E,42,[[]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[2],E,E,43,[[[U]],[R[0]]]],[11,R[3],E,E,43,[[],[R[0]]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[R[7]]]],[11,"clear",E,E,43,[[["self"]]]],[11,R[172],E,E,43,[[]]],[11,"vzip",E,E,43,[[],["v"]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[2],E,E,44,[[[U]],[R[0]]]],[11,R[3],E,E,44,[[],[R[0]]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[R[7]]]],[11,"clear",E,E,44,[[["self"]]]],[11,R[172],E,E,44,[[]]],[11,"vzip",E,E,44,[[],["v"]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[2],E,E,45,[[[U]],[R[0]]]],[11,R[3],E,E,45,[[],[R[0]]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[R[7]]]],[11,"clear",E,E,45,[[["self"]]]],[11,R[172],E,E,45,[[]]],[11,"vzip",E,E,45,[[],["v"]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[2],E,E,46,[[[U]],[R[0]]]],[11,R[3],E,E,46,[[],[R[0]]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[R[7]]]],[11,"clear",E,E,46,[[["self"]]]],[11,R[172],E,E,46,[[]]],[11,"vzip",E,E,46,[[],["v"]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[2],E,E,47,[[[U]],[R[0]]]],[11,R[3],E,E,47,[[],[R[0]]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[R[7]]]],[11,"clear",E,E,47,[[["self"]]]],[11,R[172],E,E,47,[[]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[2],E,E,48,[[[U]],[R[0]]]],[11,R[3],E,E,48,[[],[R[0]]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[R[7]]]],[11,"clear",E,E,48,[[["self"]]]],[11,R[172],E,E,48,[[]]],[11,"vzip",E,E,48,[[],["v"]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[2],E,E,49,[[[U]],[R[0]]]],[11,R[3],E,E,49,[[],[R[0]]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[R[7]]]],[11,"clear",E,E,49,[[["self"]]]],[11,R[172],E,E,49,[[]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[2],E,E,50,[[[U]],[R[0]]]],[11,R[3],E,E,50,[[],[R[0]]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[R[7]]]],[11,"clear",E,E,50,[[["self"]]]],[11,R[172],E,E,50,[[]]],[11,"vzip",E,E,50,[[],["v"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[2],E,E,51,[[[U]],[R[0]]]],[11,R[3],E,E,51,[[],[R[0]]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[R[7]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[2],E,E,52,[[[U]],[R[0]]]],[11,R[3],E,E,52,[[],[R[0]]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[R[7]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[2],E,E,53,[[[U]],[R[0]]]],[11,R[3],E,E,53,[[],[R[0]]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[R[7]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[2],E,E,54,[[[U]],[R[0]]]],[11,R[3],E,E,54,[[],[R[0]]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[R[7]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,R[13],R[173],E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[58]]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,R[59],E,E,9,[[["self"]],["fail"]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",R[174],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,R[59],E,E,11,[[["self"]],["fail"]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],R[175],E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,R[59],E,E,14,[[["self"]],["fail"]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[169],R[176],E,25,[[["self"]],[R[149]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[169],E,E,27,[[["self"]],[R[149]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",R[167],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[57],E,E,55,[[["self"]],[R[58]]]],[11,R[2],E,E,55,[[[U]],[R[0]]]],[11,R[3],E,E,55,[[],[R[0]]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[R[7]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,R[169],E,E,30,[[["self"]],[R[149]]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[57],E,E,30,[[["self"]],[R[58]]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[2],E,E,56,[[[U]],[R[0]]]],[11,R[3],E,E,56,[[],[R[0]]]],[11,R[4],E,E,56,[[["self"]],[T]]],[11,R[5],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[R[7]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,R[169],E,E,57,[[["self"]],[R[149]]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[2],E,E,57,[[[U]],[R[0]]]],[11,R[3],E,E,57,[[],[R[0]]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[R[7]]]],[11,"vzip",E,E,57,[[],["v"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[57],E,E,58,[[["self"]],[R[58]]]],[11,R[2],E,E,58,[[[U]],[R[0]]]],[11,R[3],E,E,58,[[],[R[0]]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[R[7]]]],[11,"vzip",E,E,58,[[],["v"]]],[11,R[169],R[177],E,31,[[["self"]],[R[149]]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"finish",R[171],E,34,[[],[R[149]]]],[11,"write",E,E,34,[[["self"]],["self"]]],[11,"finish",E,E,35,[[],[R[149]]]],[11,"write",E,E,35,[[["self"]],["self"]]],[11,"finish",E,E,36,[[],[R[149]]]],[11,"write",E,E,36,[[["self"]],["self"]]],[11,"finish",E,E,37,[[],[R[149]]]],[11,"write",E,E,37,[[["self"]],["self"]]],[11,"finish",E,E,38,[[],[R[149]]]],[11,"write",E,E,38,[[["self"]],["self"]]],[11,"finish",E,E,39,[[],[R[149]]]],[11,"write",E,E,39,[[["self"]],["self"]]],[11,"finish",E,E,40,[[],[R[149]]]],[11,"write",E,E,40,[[["self"]],["self"]]],[11,"finish",E,E,41,[[],[R[149]]]],[11,"write",E,E,41,[[["self"]],["self"]]],[11,"finish",E,E,42,[[],[R[149]]]],[11,"write",E,E,42,[[["self"]],["self"]]],[11,"finish",E,E,43,[[],[R[149]]]],[11,"write",E,E,43,[[["self"]],["self"]]],[11,"finish",E,E,44,[[],[R[149]]]],[11,"write",E,E,44,[[["self"]],["self"]]],[11,"finish",E,E,45,[[],[R[149]]]],[11,"write",E,E,45,[[["self"]],["self"]]],[11,"finish",E,E,46,[[],[R[149]]]],[11,"write",E,E,46,[[["self"]],["self"]]],[11,"finish",E,E,47,[[],[R[149]]]],[11,"write",E,E,47,[[["self"]],["self"]]],[11,"finish",E,E,48,[[],[R[149]]]],[11,"write",E,E,48,[[["self"]],["self"]]],[11,"finish",E,E,49,[[],[R[149]]]],[11,"write",E,E,49,[[["self"]],["self"]]],[11,"finish",E,E,50,[[],[R[149]]]],[11,"write",E,E,50,[[["self"]],["self"]]],[11,R[144],R[170],E,32,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[144],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[144],R[146],E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[144],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[144],R[167],E,30,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[144],E,E,57,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[178],R[170],E,32,[[["self"],[R[149]]],[R[184]]]],[11,R[178],R[146],E,2,[[["self"],[R[149]]],[R[185]]]],[11,"verify",R[170],"Checks that `signature` is valid for `message` using…",1,[[["self"],[R[180]],[R[149]]],[R[0]]]],[11,R[179],E,"Checks that `signature` is valid for an arbitrary &[u8]…",1,[[["self"],[R[180]]],[R[0]]]],[11,R[144],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"verify",R[146],R[591],4,[[["self"],[R[181]],[R[149]]],[R[0]]]],[11,R[179],E,R[592],4,[[["self"],[R[181]]],[R[0]]]],[11,R[144],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[161],E,R[593],4,[[["vec"],[R[149]]],[R[0]]]],[11,R[182],R[170],"This method generates a private signing key for BLS. It…",32,[[["r"]],["self"]]],[11,R[182],R[146],E,2,[[["r"]],["self"]]],[11,R[182],R[176],E,25,[[["r"]],["self"]]],[11,R[182],R[167],E,55,[[["r"]],["self"]]],[11,R[182],E,E,30,[[["r"]],["self"]]],[11,R[182],R[177],E,31,[[["r"]],["self"]]],[11,R[432],R[170],E,32,[[],["self"]]],[11,R[432],R[146],E,2,[[],["self"]]],[11,"dh",R[167],E,55,[[[R[186]]],[R[183]]]],[11,"dh",E,E,30,[[[R[187]]],[R[183]]]],[11,R[75],R[171],E,8,[[],["self"]]],[11,R[75],E,E,34,[[],["self"]]],[11,R[75],E,E,35,[[],["self"]]],[11,R[75],E,E,36,[[],["self"]]],[11,R[75],E,E,37,[[],["self"]]],[11,R[75],E,E,38,[[],["self"]]],[11,R[75],E,E,39,[[],["self"]]],[11,R[75],E,E,40,[[],["self"]]],[11,R[75],E,E,41,[[],["self"]]],[11,R[75],E,E,42,[[],["self"]]],[11,R[75],E,E,43,[[],["self"]]],[11,R[75],E,E,44,[[],["self"]]],[11,R[75],E,E,45,[[],["self"]]],[11,R[75],E,E,46,[[],["self"]]],[11,R[75],E,E,47,[[],["self"]]],[11,R[75],E,E,48,[[],["self"]]],[11,R[75],E,E,49,[[],["self"]]],[11,R[75],E,E,50,[[],["self"]]],[11,"clone",R[170],E,0,[[["self"]],[R[180]]]],[11,"clone",E,E,1,[[["self"]],[R[184]]]],[11,"clone",R[146],E,3,[[["self"]],[R[181]]]],[11,"clone",E,E,4,[[["self"]],[R[185]]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",R[171],E,8,[[["self"]],[R[149]]]],[11,"clone",E,E,34,[[["self"]],["accesspathhasher"]]],[11,"clone",E,E,35,[[["self"]],["accountaddresshasher"]]],[11,"clone",E,E,36,[[["self"]],["ledgerinfohasher"]]],[11,"clone",E,E,37,[[["self"]],[R[2152]]]],[11,"clone",E,E,38,[[["self"]],["eventaccumulatorhasher"]]],[11,"clone",E,E,39,[[["self"]],["sparsemerkleinternalhasher"]]],[11,"clone",E,E,40,[[["self"]],["sparsemerkleleafhasher"]]],[11,"clone",E,E,41,[[["self"]],["accountstateblobhasher"]]],[11,"clone",E,E,42,[[["self"]],["transactioninfohasher"]]],[11,"clone",E,E,43,[[["self"]],["rawtransactionhasher"]]],[11,"clone",E,E,44,[[["self"]],["transactionhasher"]]],[11,"clone",E,E,45,[[["self"]],["blockhasher"]]],[11,"clone",E,E,46,[[["self"]],["timeouthasher"]]],[11,"clone",E,E,47,[[["self"]],["votedatahasher"]]],[11,"clone",E,E,48,[[["self"]],["contracteventhasher"]]],[11,"clone",E,E,49,[[["self"]],["testonlyhasher"]]],[11,"clone",E,E,50,[[["self"]],["discoverymsghasher"]]],[11,"clone",R[173],E,10,[[["self"]],["hkdf"]]],[11,"clone",E,E,9,[[["self"]],[R[151]]]],[11,"clone",R[174],E,11,[[["self"]],[R[154]]]],[11,"clone",R[175],E,14,[[["self"]],[R[147]]]],[11,"clone",R[167],E,30,[[["self"]],[R[190]]]],[11,"clone",E,E,56,[[["self"]],[R[186]]]],[11,"clone",E,E,57,[[["self"]],[R[187]]]],[11,"clone",R[177],E,31,[[["self"]],[R[248]]]],[11,"next_back",R[171],E,33,[[["self"]],[R[24]]]],[11,"as_ref",E,E,8,[[["self"]]]],[11,R[247],E,E,8,[[["self"],[R[149]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,8,[[["self"],[R[149]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[149]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[149]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[149]]],["bool"]]],[11,"eq",R[170],E,0,[[["self"],[R[180]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[180]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[184]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[184]]],["bool"]]],[11,"eq",E,E,32,[[["self"]],["bool"]]],[11,"eq",R[146],E,2,[[["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[181]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[185]]],["bool"]]],[11,"eq",R[171],E,8,[[["self"],[R[149]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[149]]],["bool"]]],[11,"eq",R[173],E,9,[[["self"],[R[151]]],["bool"]]],[11,"eq",R[174],E,11,[[["self"],[R[154]]],["bool"]]],[11,"eq",R[175],E,14,[[["self"],[R[147]]],["bool"]]],[11,"eq",R[176],E,27,[[["self"],[R[188]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[188]]],["bool"]]],[11,"eq",R[167],E,57,[[["self"],[R[187]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[187]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[186]]],["bool"]]],[11,"eq",R[177],E,31,[[["self"],[R[248]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[248]]],["bool"]]],[11,"cmp",R[171],E,8,[[["self"],[R[149]]],[R[32]]]],[11,"from",R[170],E,0,[[[R[191]]],["self"]]],[11,"from",R[146],E,3,[[[R[192]]],["self"]]],[11,"from",R[176],E,27,[[[R[189]]],["self"]]],[11,"from",E,E,26,[[[R[189]]],["self"]]],[11,"from",E,E,29,[[["proof"]],["output"]]],[11,"from",R[167],E,56,[[["x25519ephemeralprivatekey"]],[R[186]]]],[11,"from",E,E,57,[[[R[190]]],[R[187]]]],[11,"from",R[177],E,31,[[["s"]],["self"]]],[11,"next",R[171],E,33,[[["self"]],[R[24]]]],[11,"size_hint",E,E,33,[[["self"]]]],[11,"hash",R[170],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[146],E,3,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"hash",R[171],E,8,[[["self"],["__h"]]]],[11,"hash",R[167],E,57,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["h"]]]],[11,"deref",R[170],E,32,[[["self"]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,"deref",R[171],E,51,[[["self"]],[R[149]]]],[11,"deref",E,E,52,[[["self"]],[R[149]]]],[11,"deref",E,E,53,[[["self"]],[R[149]]]],[11,"deref",E,E,54,[[["self"]],[R[149]]]],[11,"deref",R[176],E,25,[[["self"]]]],[11,"deref",E,E,27,[[["self"]]]],[11,"deref",R[167],E,56,[[["self"]]]],[11,"index",R[171],E,8,[[["self"],["usize"]],["u8"]]],[11,"fmt",R[170],E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[146],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[171],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[173],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[174],E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[175],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[176],E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[167],E,55,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,56,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,57,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,58,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[177],E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[170],E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[146],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[171],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[173],E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[174],E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[175],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[167],E,55,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,58,[[["self"],[R[17]]],[R[0]]]],[11,R[2],R[170],E,32,[[],[[R[0],[R[191],R[147]]],[R[191]],[R[147]]]]],[11,R[2],E,E,0,[[],[[R[147]],[R[0],[R[180],R[147]]],[R[180]]]]],[11,R[2],E,E,1,[[],[[R[147]],[R[0],[R[184],R[147]]],[R[184]]]]],[11,R[2],R[146],R[1635],2,[[],[[R[0],[R[192],R[147]]],[R[192]],[R[147]]]]],[11,R[2],E,R[594],3,[[],[[R[147]],[R[181]],[R[0],[R[181],R[147]]]]]],[11,R[2],E,E,4,[[],[[R[0],[R[185],R[147]]],[R[185]],[R[147]]]]],[11,R[2],R[176],E,25,[[],[[R[0],[R[189],R[147]]],[R[189]],[R[147]]]]],[11,R[2],E,E,27,[[],[[R[0],[R[188],R[147]]],[R[147]],[R[188]]]]],[11,R[2],E,E,28,[[],[[R[147]],["proof"],[R[0],["proof",R[147]]]]]],[11,R[2],R[167],E,30,[[],[[R[147]],[R[0],[R[190],R[147]]],[R[190]]]]],[11,R[2],E,E,57,[[],[[R[187]],[R[0],[R[187],R[147]]],[R[147]]]]],[11,"fmt",R[171],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"name",R[173],E,9,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,9,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,9,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,"name",R[174],E,11,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,11,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,11,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,"name",R[175],E,14,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,14,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,14,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,R[193],R[170],E,32,[[["__d"]],[R[0]]]],[11,R[193],E,E,0,[[["__d"]],[R[0]]]],[11,R[193],E,E,1,[[["__d"]],[R[0]]]],[11,R[193],R[146],E,2,[[["d"]],[R[0]]]],[11,R[193],E,E,3,[[["d"]],[R[0]]]],[11,R[193],E,E,4,[[["d"]],[R[0]]]],[11,R[193],R[171],E,8,[[["d"]],[R[0]]]],[11,R[193],R[176],E,25,[[["__d"]],[R[0]]]],[11,R[193],E,E,27,[[["__d"]],[R[0]]]],[11,R[193],R[167],E,30,[[["d"]],[R[0]]]],[11,R[193],E,E,57,[[["d"]],[R[0]]]],[11,R[193],R[177],E,31,[[["__d"]],[R[0]]]],[11,R[142],R[170],E,32,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,0,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,1,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[146],E,2,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,3,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,4,[[["self"],["s"]],[R[0]]]],[11,R[142],R[171],E,8,[[["self"],["s"]],[R[0]]]],[11,R[142],R[176],E,25,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,27,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[167],E,30,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,57,[[["self"],["s"]],[R[0]]]],[11,R[142],R[177],E,31,[[["self"],["__s"]],[R[0]]]],[11,R[34],R[146],E,3,[[]]],[11,R[34],R[171],E,8,[[]]],[11,R[34],R[167],E,57,[[]]],[11,R[172],R[171],E,51,[[["self"]]]],[11,R[172],E,E,52,[[["self"]]]],[11,R[172],E,E,53,[[["self"]]]],[11,R[172],E,E,54,[[["self"]]]]],"p":[[3,R[194]],[3,R[195]],[3,R[196]],[3,R[197]],[3,R[198]],[8,R[199]],[8,R[200]],[8,R[201]],[3,R[202]],[4,R[203]],[3,"Hkdf"],[4,R[204]],[3,R[205]],[3,"Slip0010"],[4,R[206]],[8,R[245]],[8,R[207]],[8,R[208]],[8,R[209]],[8,R[210]],[8,R[211]],[8,R[212]],[8,"Uniform"],[8,"Genesis"],[8,R[213]],[3,R[214]],[3,R[215]],[3,R[216]],[3,"Proof"],[3,"Output"],[3,R[217]],[3,"KeyPair"],[3,R[218]],[3,R[219]],[3,R[220]],[3,R[221]],[3,R[222]],[3,R[223]],[3,R[224]],[3,R[225]],[3,R[226]],[3,R[227]],[3,R[228]],[3,R[229]],[3,R[230]],[3,R[231]],[3,R[232]],[3,R[233]],[3,R[234]],[3,R[235]],[3,R[236]],[3,R[237]],[3,R[238]],[3,R[239]],[3,R[240]],[3,R[241]],[3,R[242]],[3,R[243]],[3,R[244]]]};
searchIndex["libra_crypto_derive"]={"doc":"This crate contains three types of derive macros: - the…","i":[[24,"SilentDisplay","libra_crypto_derive",E,N,N],[24,"SilentDebug",E,E,N,N],[24,"Deref",E,E,N,N],[24,R[245],E,E,N,N],[24,R[210],E,E,N,N],[24,R[208],E,E,N,N],[24,R[211],E,E,N,N],[24,R[209],E,E,N,N],[24,R[212],E,E,N,N]],"p":[]};
searchIndex["libra_failure_ext"]={"doc":"A common error handling library for the Libra project.","i":[[14,"bail",R[56],R[37],N,N],[14,"ensure",E,R[38],N,N],[5,"err_msg",E,R[39],N,[[["d"]],["error"]]],[14,R[40],E,R[41],N,N],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,R[59],E,"Converts a reference to `Self` into a dynamic trait object…",0,[[["self"]],["fail"]]],[3,R[73],E,"A `Backtrace`.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,"Context",E,"An error with context around it.",N,N],[3,"Error",E,R[42],N,N],[8,"Fail",E,R[43],N,N],[11,"name",E,R[44],1,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"cause",E,R[45],1,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,R[46],1,[[["self"]],[[R[35]],[R[24],[R[35]]]]]],[11,R[25],E,R[47],1,[[["d"]],[R[25]]]],[11,R[36],E,R[48],1,[[],[R[36]]]],[24,"Fail",E,E,N,N],[8,R[49],E,R[50],N,N],[10,R[36],E,R[51],2,[[],[[R[0],[R[36]]],[R[36]]]]],[10,R[25],E,R[52],2,[[["d"]],[[R[0],[R[25]]],[R[25]]]]],[10,R[53],E,R[54],2,[[["f"]],[[R[0],[R[25]]],[R[25]]]]],[3,R[74],E,"Wrapper for `std` errors to make them `Sync`.",N,N],[14,R[55],E,R[37],N,N],[0,"prelude",E,"Prelude module containing most commonly used types/macros…",N,N],[14,"bail",R[60],R[37],N,N],[14,"ensure",E,R[38],N,N],[5,"err_msg",E,R[39],N,[[["d"]],["error"]]],[14,R[40],E,R[41],N,N],[3,"Error",E,R[42],N,N],[8,"Fail",E,R[43],N,N],[11,"name",E,R[44],1,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"cause",E,R[45],1,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,R[46],1,[[["self"]],[[R[35]],[R[24],[R[35]]]]]],[11,R[25],E,R[47],1,[[["d"]],[R[25]]]],[11,R[36],E,R[48],1,[[],[R[36]]]],[24,"Fail",E,E,N,N],[8,R[49],E,R[50],N,N],[10,R[36],E,R[51],2,[[],[[R[0],[R[36]]],[R[36]]]]],[10,R[25],E,R[52],2,[[["d"]],[[R[0],[R[25]]],[R[25]]]]],[10,R[53],E,R[54],2,[[["f"]],[[R[0],[R[25]]],[R[25]]]]],[14,R[55],E,R[37],N,N],[6,"Result",R[56],E,N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[58]]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"into",E,E,4,[[],[U]]],[11,R[246],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[59],E,E,5,[[["self"]],["fail"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[58]]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[59],E,E,6,[[["self"]],["fail"]]],[11,"into",R[60],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[57],E,E,7,[[["self"]],[R[58]]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,R[59],E,E,7,[[["self"]],["fail"]]],[11,"into",R[56],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,R[59],E,E,8,[[["self"]],["fail"]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[60],E,7,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[56],E,3,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,R[61],E,E,5,[[["self"]],["str"]]],[11,"clone",E,E,5,[[["self"]],[R[36]]]],[11,R[59],R[60],E,1,[[["self"]],["fail"]]],[11,R[59],E,E,7,[[["self"]],["fail"]]],[11,R[75],R[56],E,3,[[],[R[35]]]],[11,R[75],E,E,5,[[],[R[36]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"name",E,E,6,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"cause",E,E,6,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,6,[[["self"]],[[R[35]],[R[24],[R[35]]]]]],[11,"from",E,E,6,[[["d"]],[R[25]]]],[11,"from",R[60],E,7,[[["f"]],["error"]]],[11,"fmt",R[56],E,3,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[60],E,7,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[56],E,8,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"as_ref",R[60],E,7,[[["self"]],["fail"]]],[11,"next",R[56],E,4,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,"eq",E,E,5,[[["self"],[R[36]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[36]]],["bool"]]],[11,"new",E,"Constructs a new backtrace. This will only create a real…",3,[[],[R[35]]]],[11,R[280],E,"Unwraps this into the inner error.",5,[[],["e"]]],[11,"get_ref",E,"Gets a reference to the inner error.",5,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",6,[[["d"]],[R[25]]]],[11,"get_context",E,"Returns a reference to the context provided with this error.",6,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",6,[[["f"]],[R[25]]]],[11,R[1866],R[60],R[1867],7,[[["box",["error"]],["error"]],["error"]]],[11,R[59],E,R[1868],7,[[["self"]],["fail"]]],[11,"name",E,R[1869],7,[[["self"]],[[R[24],["str"]],["str"]]]],[11,"cause",E,R[45],7,[[["self"]],["fail"]]],[11,R[35],E,R[1870],7,[[["self"]],[R[35]]]],[11,R[25],E,R[1871],7,[[["d"]],[R[25]]]],[11,R[36],E,R[1872],7,[[],[["error"],[R[36],["error"]]]]],[11,"downcast",E,R[62],7,[[],[["error"],[R[0],["error"]]]]],[11,R[66],E,R[1873],7,[[["self"]],["fail"]]],[11,R[67],E,R[1874],7,[[["self"]],[R[68]]]],[11,R[69],E,R[70],7,[[["self"]],[R[68]]]],[11,R[63],E,R[62],7,[[["self"]],[[T],[R[24]]]]],[11,R[64],E,R[62],7,[[["self"]],[[T],[R[24]]]]],[11,R[71],E,R[72],7,[[["self"]],["fail"]]],[11,R[68],E,R[1875],7,[[["self"]],[R[68]]]],[11,R[63],E,R[65],1,[[["self"]],[[T],[R[24]]]]],[11,R[64],E,R[65],1,[[["self"]],[[T],[R[24]]]]],[11,R[66],E,"Returns the \"root cause\" of this `Fail` - the last value…",1,[[["self"]],["fail"]]],[11,R[67],E,"Returns a iterator over the causes of this `Fail` with the…",1,[[["self"]],[R[68]]]],[11,R[69],E,R[70],1,[[["self"]],[R[68]]]],[11,R[71],E,R[72],1,[[["self"]],["fail"]]],[11,R[68],E,"Deprecated alias to `iter_chain`.",1,[[["self"]],[R[68]]]],[11,"new",R[56],"Wraps a non-`Sync` `Error` in order to make it implement…",8,[[["e"]],["syncfailure"]]]],"p":[[8,"AsFail"],[8,"Fail"],[8,R[49]],[3,R[73]],[3,"Causes"],[3,"Compat"],[3,"Context"],[3,"Error"],[3,R[74]]]};
searchIndex["libra_failure_macros"]={"doc":"Collection of convenience macros for error handling","i":[[14,R[55],"libra_failure_macros",R[37],N,N]],"p":[]};
searchIndex["libra_fuzzer"]={"doc":E,"i":[[3,"FuzzTarget",R[2210],"A fuzz target.",N,N],[0,"commands",E,E,N,N],[5,"make_corpus","libra_fuzzer::commands","Generates data for this fuzz target into the output…",N,[[["path"],["usize"],[R[2211]],["bool"]],[["usize"],[R[0],["usize"]]]]],[5,"fuzz_target",E,"Fuzz a target by running `cargo fuzz run`.",N,[[["pathbuf"],["vec",["osstring"]],["osstring"],[R[2211]]],[R[0]]]],[5,"list_targets",E,"List all known fuzz targets.",N,[[["bool"]]]],[0,"fuzz_targets",R[2210],E,N,N],[11,"from_env",E,"Get the current fuzz target from the environment.",0,[[],[R[0]]]],[11,"by_name",E,"Get a fuzz target by name.",0,[[["str"]],[R[24]]]],[11,"all_targets",E,"A list of all fuzz targets.",0,[[]]],[8,R[2212],E,"Implementation for a particular target of a fuzz operation.",N,N],[10,"name",E,"The name of the fuzz target.",1,[[["self"]],["str"]]],[10,R[61],E,"A description for this target.",1,[[["self"]],["str"]]],[10,"generate",E,"Generates a new example for this target to store in the…",1,[[["self"],[R[2197]],["usize"]],[[R[24],["vec"]],["vec",["u8"]]]]],[10,"fuzz",E,"Fuzz the target with this data. The fuzzer tests for…",1,[[["self"]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],[R[2211]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[1861],E,E,0,[[["str"]],[R[0]]]]],"p":[[3,"FuzzTarget"],[8,R[2212]]]};
searchIndex["libra_logger"]={"doc":"A default logger for Libra project.","i":[[14,R[122],"libra_logger",R[123],N,N],[14,R[124],E,R[125],N,N],[14,R[126],E,R[127],N,N],[14,R[128],E,R[129],N,N],[14,R[130],E,R[131],N,N],[14,R[132],E,R[133],N,N],[14,"crit",E,R[134],N,N],[14,"debug",E,R[135],N,N],[14,"error",E,R[136],N,N],[14,"info",E,R[137],N,N],[14,"trace",E,R[138],N,N],[14,"warn",E,R[139],N,N],[5,"set_simple_logger",E,"Simple logger mostly intended for use in test code It…",N,[[["str"]]]],[5,"set_simple_logger_prefix",E,"Sets thread local prefix for log lines This is useful for…",N,[[[R[58]]]]],[5,"set_default_global_logger",E,"Creates and sets default global logger. Caller must keep…",N,[[[R[24],["usize"]],["usize"],["bool"]],["globalloggerguard"]]],[5,"try_init_for_testing",E,"Create and setup default global logger following the…",N,[[]]],[5,"init_for_e2e_testing",E,"Create and setup default global logger for use in end to…",N,[[]]],[0,"prelude",E,"Logger prelude which includes all logging macros.",N,N],[14,R[122],"libra_logger::prelude",R[123],N,N],[14,R[124],E,R[125],N,N],[14,R[126],E,R[127],N,N],[14,R[128],E,R[129],N,N],[14,R[130],E,R[131],N,N],[14,R[132],E,R[133],N,N],[14,"crit",E,R[134],N,N],[14,"debug",E,R[135],N,N],[14,"error",E,R[136],N,N],[14,"info",E,R[137],N,N],[14,"trace",E,R[138],N,N],[14,"warn",E,R[139],N,N],[4,R[141],E,E,N,N],[13,"InvalidTransactionAC",E,"Admission Control received a transaction with an invalid…",0,N],[13,"InvalidTransactionMP",E,"Mempool received a transaction with an invalid signature",0,N],[13,"InvalidTransactionConsensus",E,"Consensus received a transaction with an invalid signature",0,N],[13,"InvalidChunkExecutor",E,"Executor received an invalid transactions chunk",0,N],[13,"InvalidNetworkEventMP",E,"Mempool received an invalid network event",0,N],[13,"DuplicateConsensusVote",E,R[140],0,N],[13,"InvalidConsensusProposal",E,"Consensus received an invalid proposal",0,N],[13,"InvalidConsensusVote",E,R[140],0,N],[13,"InvalidConsensusRound",E,"Consensus received an invalid new round message",0,N],[13,"InvalidSyncInfoMsg",E,"Consensus received an invalid sync info message",0,N],[13,"InvalidBlock",E,"A block being committed or executed is invalid",0,N],[13,"InvalidNetworkPeer",E,"Network identified an invalid peer",0,N],[13,"InvalidDiscoveryMsg",E,"Network discovery received an invalid DiscoveryMsg",0,N],[5,"security_log",E,"Creates a `SecurityLog` struct that can be decorated with…",N,[[["securityevent"]],["securitylog"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[142],E,E,0,[[["self"],["__s"]],[R[0]]]]],"p":[[4,R[141]]]};
searchIndex["libra_mempool"]={"doc":"Mempool is used to hold transactions that have been…","i":[[3,R[2122],R[2118],"Handle for Mempool Runtime",N,N],[12,"grpc_server",E,"gRPC server to serve request from AC and Consensus",0,N],[12,"shared_mempool",E,"separate shared mempool runtime",0,N],[0,"proto",E,E,N,N],[0,"mempool",R[2117],E,N,N],[3,R[2123],R[2119],E,N,N],[12,R[351],E,"Transaction from a wallet",1,N],[12,"max_gas_cost",E,"Max amount of gas required to execute the transaction…",1,N],[12,"latest_sequence_number",E,"Latest sequence number of the involved account from state…",1,N],[12,"account_balance",E,"Latest account balance of the involved account from state…",1,N],[3,R[2124],E,E,N,N],[12,"current_version",E,"The ledger version at the time of the transaction…",2,N],[12,"status",E,"The result of the transaction submission",2,N],[3,R[2125],E,"…",N,N],[12,R[922],E,E,3,N],[12,R[353],E,E,3,N],[3,R[2126],E,E,N,N],[12,"block",E,E,4,N],[3,R[2127],E,E,N,N],[12,"sender",E,E,5,N],[12,R[281],E,E,5,N],[3,R[2128],E,"…",N,N],[12,R[353],E,E,6,N],[12,"block_timestamp_usecs",E,"agreed monotonic timestamp microseconds since the epoch…",6,N],[3,R[2133],E,E,N,N],[3,R[2129],E,E,N,N],[12,"sender",E,E,7,N],[12,R[281],E,E,7,N],[12,"is_rejected",E,E,7,N],[3,R[2134],E,"…",N,N],[3,R[2130],E,E,N,N],[12,"is_healthy",E,"Indicate whether Mempool is in healthy condition.",8,N],[3,R[2131],E,E,N,N],[5,"create_mempool",E,E,N,[[["clone"],["mempool"],["send"]],["service"]]],[8,"Mempool",E,E,N,N],[10,R[2111],E,E,9,[[["self"],[R[1530],[R[2106]]],[R[2106]],[R[2110]],[R[1508]]]]],[10,"get_block",E,E,9,[[["self"],[R[2112]],[R[2107]],[R[1530],[R[2107]]],[R[1508]]]]],[10,R[2114],E,E,9,[[["self"],[R[2113]],[R[1530],[R[2108]]],[R[2108]],[R[1508]]]]],[10,R[2116],E,E,9,[[["self"],[R[1530],[R[2109]]],[R[2115]],[R[2109]],[R[1508]]]]],[11,"new",E,E,10,[[["channel"]],["self"]]],[11,"add_transaction_with_validation_opt",E,E,10,[[["self"],[R[2110]],[R[1495]]],[[R[0],[R[2106]]],[R[2106]]]]],[11,R[2111],E,E,10,[[["self"],[R[2110]]],[[R[0],[R[2106]]],[R[2106]]]]],[11,"add_transaction_with_validation_async_opt",E,E,10,[[["self"],[R[2110]],[R[1495]]],[[R[0],[R[1494]]],[R[1494],[R[2106]]]]]],[11,"add_transaction_with_validation_async",E,E,10,[[["self"],[R[2110]]],[[R[0],[R[1494]]],[R[1494],[R[2106]]]]]],[11,"get_block_opt",E,E,10,[[["self"],[R[2112]],[R[1495]]],[[R[0],[R[2107]]],[R[2107]]]]],[11,"get_block",E,E,10,[[["self"],[R[2112]]],[[R[0],[R[2107]]],[R[2107]]]]],[11,"get_block_async_opt",E,E,10,[[["self"],[R[2112]],[R[1495]]],[[R[0],[R[1494]]],[R[1494],[R[2107]]]]]],[11,"get_block_async",E,E,10,[[["self"],[R[2112]]],[[R[0],[R[1494]]],[R[1494],[R[2107]]]]]],[11,"commit_transactions_opt",E,E,10,[[["self"],[R[2113]],[R[1495]]],[[R[0],[R[2108]]],[R[2108]]]]],[11,R[2114],E,E,10,[[["self"],[R[2113]]],[[R[0],[R[2108]]],[R[2108]]]]],[11,"commit_transactions_async_opt",E,E,10,[[["self"],[R[2113]],[R[1495]]],[[R[0],[R[1494]]],[R[1494],[R[2108]]]]]],[11,"commit_transactions_async",E,E,10,[[["self"],[R[2113]]],[[R[0],[R[1494]]],[R[1494],[R[2108]]]]]],[11,"health_check_opt",E,E,10,[[["self"],[R[2115]],[R[1495]]],[[R[2109]],[R[0],[R[2109]]]]]],[11,R[2116],E,E,10,[[["self"],[R[2115]]],[[R[2109]],[R[0],[R[2109]]]]]],[11,"health_check_async_opt",E,E,10,[[["self"],[R[2115]],[R[1495]]],[[R[1494],[R[2109]]],[R[0],[R[1494]]]]]],[11,"health_check_async",E,E,10,[[["self"],[R[2115]]],[[R[1494],[R[2109]]],[R[0],[R[1494]]]]]],[11,"spawn",E,E,10,[[["self"],["f"]]]],[0,"mempool_client",R[2117],E,N,N],[8,R[2132],"libra_mempool::proto::mempool_client",E,N,N],[11,R[2111],E,E,11,[[["self"],[R[2110]]],[[R[0],[R[2106]]],[R[2106]]]]],[11,R[2116],E,E,11,[[["self"],[R[2115]]],[[R[2109]],[R[0],[R[2109]]]]]],[11,"bootstrap",R[2118],"setup Mempool runtime",0,[[["mempoolnetworkevents"],[R[929]],[R[2135]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[2119],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[172],E,E,2,[[]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[172],E,E,3,[[]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[172],E,E,5,[[]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[172],E,E,6,[[]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[172],E,E,12,[[]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[172],E,E,7,[[]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[172],E,E,13,[[]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[172],E,E,8,[[]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[2111],E,E,10,[[["self"],[R[2110]]],[[R[0],[R[2106]]],[R[2106]]]]],[11,R[2116],E,E,10,[[["self"],[R[2115]]],[[R[2109]],[R[0],[R[2109]]]]]],[11,R[75],E,E,1,[[],[R[2110]]]],[11,R[75],E,E,2,[[],[R[2106]]]],[11,R[75],E,E,3,[[],[R[2112]]]],[11,R[75],E,E,4,[[],[R[2107]]]],[11,R[75],E,E,5,[[],[R[2120]]]],[11,R[75],E,E,6,[[],[R[2113]]]],[11,R[75],E,E,12,[[],[R[2108]]]],[11,R[75],E,E,7,[[],[R[2121]]]],[11,R[75],E,E,13,[[],[R[2115]]]],[11,R[75],E,E,8,[[],[R[2109]]]],[11,"clone",E,E,1,[[["self"]],[R[2110]]]],[11,"clone",E,E,2,[[["self"]],[R[2106]]]],[11,"clone",E,E,3,[[["self"]],[R[2112]]]],[11,"clone",E,E,4,[[["self"]],[R[2107]]]],[11,"clone",E,E,5,[[["self"]],[R[2120]]]],[11,"clone",E,E,6,[[["self"]],[R[2113]]]],[11,"clone",E,E,12,[[["self"]],[R[2108]]]],[11,"clone",E,E,7,[[["self"]],[R[2121]]]],[11,"clone",E,E,13,[[["self"]],[R[2115]]]],[11,"clone",E,E,8,[[["self"]],[R[2109]]]],[11,"clone",E,E,10,[[["self"]],["mempoolclient"]]],[11,"eq",E,E,1,[[["self"],[R[2110]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2110]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2106]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2106]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2112]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[2112]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[2107]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[2107]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[2120]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[2120]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[2113]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[2113]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[2108]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[2121]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[2121]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[2115]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[2109]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[2109]]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,R[514],E,E,1,[[["self"],["b"]]]],[11,R[515],E,E,1,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,1,[[["self"]],["usize"]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[514],E,E,2,[[["self"],["b"]]]],[11,R[515],E,E,2,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,2,[[["self"]],["usize"]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[514],E,E,3,[[["self"],["b"]]]],[11,R[515],E,E,3,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,3,[[["self"]],["usize"]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[514],E,E,4,[[["self"],["b"]]]],[11,R[515],E,E,4,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,4,[[["self"]],["usize"]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[514],E,E,5,[[["self"],["b"]]]],[11,R[515],E,E,5,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,5,[[["self"]],["usize"]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[514],E,E,6,[[["self"],["b"]]]],[11,R[515],E,E,6,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,6,[[["self"]],["usize"]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[514],E,E,12,[[["self"],["b"]]]],[11,R[515],E,E,12,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,12,[[["self"]],["usize"]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[514],E,E,7,[[["self"],["b"]]]],[11,R[515],E,E,7,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,7,[[["self"]],["usize"]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[514],E,E,13,[[["self"],["b"]]]],[11,R[515],E,E,13,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,13,[[["self"]],["usize"]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[514],E,E,8,[[["self"],["b"]]]],[11,R[515],E,E,8,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,8,[[["self"]],["usize"]]],[11,"clear",E,E,8,[[["self"]]]]],"p":[[3,R[2122]],[3,R[2123]],[3,R[2124]],[3,R[2125]],[3,R[2126]],[3,R[2127]],[3,R[2128]],[3,R[2129]],[3,R[2130]],[8,"Mempool"],[3,R[2131]],[8,R[2132]],[3,R[2133]],[3,R[2134]]]};
searchIndex["libra_mempool_shared_proto"]={"doc":"Proto crate for shared mempool","i":[[3,R[257],R[259],"Status of transaction insertion operation",N,N],[12,"code",E,"Status code of the transaction insertion operation",0,N],[12,"message",E,"Message to give more details about the transaction…",0,N],[0,"proto",E,E,N,N],[0,"mempool_status","libra_mempool_shared_proto::proto",E,N,N],[3,R[257],R[260],E,N,N],[12,"code",E,E,1,N],[12,"message",E,E,1,N],[4,R[263],E,E,N,N],[13,"Valid",E,"Transaction was sent to Mempool",2,N],[13,"InsufficientBalance",E,"The sender does not have enough balance for the transaction.",2,N],[13,"InvalidSeqNumber",E,"Sequence number is old, etc.",2,N],[13,"MempoolIsFull",E,"Mempool is full (reached max global capacity)",2,N],[13,"TooManyTransactions",E,"Account reached max capacity per account",2,N],[13,"InvalidUpdate",E,"Invalid update. Only gas price increase is allowed",2,N],[11,"code",E,E,1,[[["self"]],[R[258]]]],[11,"set_code",E,E,1,[[["self"],[R[258]]]]],[11,R[302],E,R[1507],2,[[["i32"]],["bool"]]],[11,"from_i32",E,"Converts an `i32` to a `MempoolAddTransactionStatusCode`,…",2,[[["i32"]],[[R[24],[R[258]]],[R[258]]]]],[11,"new",R[259],"Create a new MempoolAddTransactionStatus",0,[[[R[58]],[R[258]]],["self"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[13],R[260],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[75],E,E,1,[[],[R[261]]]],[11,R[75],E,E,2,[[],[R[258]]]],[11,"clone",E,E,1,[[["self"]],[R[261]]]],[11,"clone",E,E,2,[[["self"]],[R[258]]]],[11,"clone",R[259],E,0,[[["self"]],[R[261]]]],[11,R[247],R[260],E,2,[[["self"],[R[258]]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",E,E,1,[[["self"],[R[261]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[261]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[258]]],["bool"]]],[11,"eq",R[259],E,0,[[["self"],[R[261]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[261]]],["bool"]]],[11,"cmp",R[260],E,2,[[["self"],[R[258]]],[R[32]]]],[11,"from",E,E,1,[[[R[261]]],["self"]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[259],E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[2],E,E,0,[[[R[261]]],[R[0]]]],[11,R[514],R[260],E,1,[[["self"],["b"]]]],[11,R[515],E,E,1,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,1,[[["self"]],["usize"]]],[11,"clear",E,E,1,[[["self"]]]]],"p":[[3,R[257]],[3,R[257]],[4,R[263]]]};
searchIndex["libra_metrics"]={"doc":E,"i":[[3,"Histogram",R[1465],"A `Metric` counts individual observations from an event or…",N,N],[6,"IntCounter",E,"The integer version of `Counter`. Provides better…",N,N],[6,"IntCounterVec",E,"The integer version of `CounterVec`. Provides better…",N,N],[6,"IntGauge",E,"The integer version of `Gauge`. Provides better…",N,N],[6,"IntGaugeVec",E,"The integer version of `GaugeVec`. Provides better…",N,N],[3,R[1475],E,E,N,N],[3,R[1476],E,"A small wrapper around Histogram to handle the special…",N,N],[3,"OpMetrics",E,E,N,N],[5,"get_all_metrics",E,E,N,[[],[[R[58]],["hashmap",[R[58],R[58]]]]]],[5,"dump_all_metrics_to_file_periodically",E,E,N,[[["u64"],["p"],["str"]]]],[5,"export_counter",E,E,N,[[["hashmap"],["m"]]]],[5,"get_metric_name",E,E,N,[[["m"]],[R[58]]]],[0,"counters",E,E,N,N],[3,R[1477],R[1471],E,N,N],[3,R[1478],E,E,N,N],[3,R[1479],E,E,N,N],[0,"metric_server",R[1465],E,N,N],[5,"start_server","libra_metrics::metric_server",E,N,[[[R[58]],["u16"],["bool"]]]],[11,R[75],R[1465],E,0,[[],[R[1466]]]],[11,R[1468],E,E,0,[[],[R[1466]]]],[11,"req",E,E,0,[[["self"],[R[1508]]],[[R[1467]],[R[24],[R[1467]]]]]],[11,"resp",E,E,0,[[["self"],["bool"],[R[1508]]]]],[11,"register_default",E,E,0,[[["self"]],[R[0]]]],[11,"new",E,E,1,[[[R[1472]]],[R[1469]]]],[11,R[1470],E,E,1,[[["self"],[R[410]]]]],[11,"new",E,E,2,[[[R[58]],["into",[R[58]]]],[R[1939]]]],[11,R[1468],E,E,2,[[[R[58]],["into",[R[58]]]],[R[1939]]]],[11,"gauge",E,E,2,[[["self"],["str"]],["intgauge"]]],[11,"peer_gauge",E,E,2,[[["self"],["str"]],["intgauge"]]],[11,"counter",E,E,2,[[["self"],["str"]],[R[1474]]]],[11,R[1472],E,E,2,[[["self"],["str"]],[R[1472]]]],[11,"duration_histogram",E,E,2,[[["self"],["str"]],[R[1469]]]],[11,"inc",E,E,2,[[["self"],["str"]]]],[11,"inc_by",E,E,2,[[["self"],["str"],["usize"]]]],[11,"add",E,E,2,[[["self"],["str"]]]],[11,"sub",E,E,2,[[["self"],["str"]]]],[11,"set",E,E,2,[[["self"],["str"],["usize"]]]],[11,"observe",E,E,2,[[["self"],["f64"],["str"]]]],[11,R[1470],E,E,2,[[["self"],["str"],[R[410]]]]],[11,"timer",E,E,2,[[["self"],["str"]],[R[1467]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"into",R[1471],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clone",R[1465],E,3,[[["self"]],[R[1472]]]],[11,"metric",E,E,3,[[["self"]],["metric"]]],[11,"desc",E,E,3,[[["self"]],[["vec",["desc"]],["desc"]]]],[11,"collect",E,E,3,[[["self"]],[[R[1473]],["vec",[R[1473]]]]]],[11,"clone",E,E,0,[[["self"]],[R[1466]]]],[11,"clone",E,E,2,[[["self"]],[R[1939]]]],[11,"deref",R[1471],E,4,[[["self"]],[R[1466]]]],[11,"deref",E,E,5,[[["self"]],[R[1474]]]],[11,"deref",E,E,6,[[["self"]],[R[1474]]]],[11,"desc",R[1465],E,0,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect",E,E,0,[[["self"]],[["vec",[R[1473]]],[R[1473]]]]],[11,"desc",E,E,2,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect",E,E,2,[[["self"]],[["vec",[R[1473]]],[R[1473]]]]],[11,R[172],R[1471],E,4,[[["self"]]]],[11,R[172],E,E,5,[[["self"]]]],[11,R[172],E,E,6,[[["self"]]]],[11,"with_opts",R[1465],"`with_opts` creates a `Histogram` with the `opts` options.",3,[[["histogramopts"]],[[R[0],[R[1472],"error"]],["error"],[R[1472]]]]],[11,"observe",E,"Add a single observation to the `Histogram`.",3,[[["self"],["f64"]]]],[11,"start_timer",E,"Return a `HistogramTimer` to track a duration.",3,[[["self"]],[R[1467]]]],[11,"local",E,"Return a `LocalHistogram` for single thread usage.",3,[[["self"]],["localhistogram"]]]],"p":[[3,R[1475]],[3,R[1476]],[3,"OpMetrics"],[3,"Histogram"],[3,R[1477]],[3,R[1478]],[3,R[1479]]]};
searchIndex["libra_nibble"]={"doc":"`Nibble` represents a four-bit unsigned integer.","i":[[3,"Nibble","libra_nibble",E,N,N],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],[R[33]]]],[11,R[247],E,E,0,[[["self"],[R[33]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[33]]],[R[32]]]],[11,"from",E,E,0,[[["u8"]],["self"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[34],E,E,0,[[]]],[11,R[142],E,E,0,[[["self"],["__s"]],[R[0]]]],[11,R[193],E,E,0,[[["__d"]],[R[0]]]]],"p":[[3,"Nibble"]]};
searchIndex["libra_node"]={"doc":E,"i":[[0,"main_node","libra_node",E,N,N],[3,R[2209],"libra_node::main_node",E,N,N],[5,"setup_network",E,E,N,[[["peerid"],[R[926]]]]],[5,"setup_environment",E,E,N,[[[R[929]]],["librahandle"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,R[2209]]]};
searchIndex["libra_proptest_helpers"]={"doc":E,"i":[[3,R[18],"libra_proptest_helpers","A set of elements, each with an associated key, that grows…",N,N],[3,R[19],E,"An efficient representation of a vector with repeated…",N,N],[3,R[20],E,"Context for generating single values out of strategies.",N,N],[3,"Index",E,"Wrapper for `proptest`'s…",N,N],[5,"with_stack_size",E,"Creates a new thread with a larger stack size.",N,[[["usize"],["f"]],[[R[0],["box"]],["box",["any"]]]]],[5,"pick_idxs",E,"Given a maximum value `max` and a list of `Index`…",N,[[["usize"],[T]],[["vec",["usize"]],["usize"]]]],[5,"pick_slice_idxs",E,"Given a maximum value `max` and a slice of `Index`…",N,[[["usize"]],[["vec",["usize"]],["usize"]]]],[11,"len",E,"Returns the number of elements in the current subset.",0,[[["self"]],["usize"]]],[11,R[12],E,"Returns `true` if the current subset contains no elements.",0,[[["self"]],["bool"]]],[11,"total_len",E,"Returns the total number of elements in the universal set.",0,[[["self"]],["usize"]]],[11,"current",E,"Returns a slice containing the items in the current subset.",0,[[["self"]]]],[11,"pick_item",E,"Chooses an (index, value) pair from the current subset…",0,[[["self"],["index"]]]],[11,"pick_value",E,"Chooses a value from the current subset using the provided…",0,[[["self"],["index"]],[T]]],[11,"advance_to",E,"Advances the valid subset to the provided index. After the…",0,[[["self"],["ix"]]]],[11,"new",E,"Creates a new, empty `RepeatVec`.",1,[[],["self"]]],[11,R[21],E,"Creates a new, empty `RepeatVec` with the specified…",1,[[["usize"]],["self"]]],[11,"len",E,"Returns the logical number of elements in this `RepeatVec`.",1,[[["self"]],["usize"]]],[11,R[12],E,"Returns `true` if this `RepeatVec` has no logical elements.",1,[[["self"]],["bool"]]],[11,"extend",E,"Extends this `RepeatVec` by logically adding `size` copies…",1,[[["self"],[T],["usize"]]]],[11,"remove",E,"Removes the item specified by the given logical index,…",1,[[["self"],["usize"]]]],[11,"remove_all",E,"Removes the items specified by the given logical indexes,…",1,[[["self"]]]],[11,"get",E,"Returns the item at location `at`. The return value is a…",1,[[["self"],["usize"]],[R[24]]]],[11,"pick_uniform_indexes",E,"Picks out indexes uniformly randomly from this…",1,[[["self"]],[["vec",["usize"]],["usize"]]]],[11,"pick_uniform",E,"Picks out elements uniformly randomly from this…",1,[[["self"]],["vec"]]],[11,"new",E,"Creates a new value generator with the default RNG.",2,[[],["self"]]],[11,"deterministic",E,"Creates a new value generator with a deterministic RNG.",2,[[],["self"]]],[11,"generate",E,"Generates a single value for this strategy.",2,[[["self"],[R[904]]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[75],E,E,1,[[],[R[15]]]],[11,"clone",E,E,0,[[["self"]],["growingsubset"]]],[11,"clone",E,E,1,[[["self"]],[R[15]]]],[11,"clone",E,E,3,[[["self"]],["index"]]],[11,"as_ref",E,E,3,[[["self"]],[R[16]]]],[11,"eq",E,E,1,[[["self"],[R[15]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[15]]],["bool"]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"deref",E,E,3,[[["self"]],[R[16]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,R[513],E,E,0,[[["i"]],["self"]]],[11,R[34],E,E,3,[[]]]],"p":[[3,R[18]],[3,R[19]],[3,R[20]],[3,"Index"]]};
searchIndex["libra_prost_ext"]={"doc":E,"i":[[0,R[393],R[252],E,N,N],[5,"assert_protobuf_encode_decode","libra_prost_ext::test_helpers","Assert that protobuf encoding and decoding roundtrips…",N,[[[T]]]],[8,R[254],R[252],E,N,N],[11,R[144],E,E,0,[[["self"]],[[R[253]],["bytes"],[R[0],["bytes",R[253]]]]]],[11,"to_vec",E,E,0,[[["self"]],[[R[0],["vec",R[253]]],["vec",["u8"]],[R[253]]]]]],"p":[[8,R[254]]]};
searchIndex["libra_state_view"]={"doc":"This crate defines `trait StateView`.","i":[[8,R[568],"libra_state_view","`StateView` is a trait that defines a read-only snapshot…",N,N],[10,"get",E,"Gets the state for a single access path.",0,[[["self"],[R[267]]],[[R[0],[R[24]]],[R[24],["vec"]]]]],[10,"multi_get",E,"Gets states for a list of access paths.",0,[[["self"]],[["vec",[R[24]]],[R[0],["vec"]]]]],[10,R[1655],E,"VM needs this method to know whether the current state…",0,[[["self"]],["bool"]]]],"p":[[8,R[568]]]};
searchIndex["libra_swarm"]={"doc":E,"i":[[0,"client",R[1877],E,N,N],[3,R[1881],R[1879],E,N,N],[3,R[1882],E,E,N,N],[11,"new_with_inherit_io",E,E,0,[[["u16"],[R[58]],["path"]],["self"]]],[11,"new_with_piped_io",E,E,0,[[["u16"],[R[58]],["path"]],["self"]]],[11,"output",E,E,0,[[],[["output"],[R[0],["output"]]]]],[11,"send_instructions",E,E,0,[[["self"]],[R[0]]]],[11,"new",E,E,1,[[["path"],["u16"],[R[58]],["str"]],["self"]]],[11,"execute_instructions",E,E,1,[[["self"]]]],[11,"client",E,E,1,[[["self"]],[R[1606]]]],[0,"swarm",R[1877],E,N,N],[3,"LibraNode",R[1880],E,N,N],[3,"LibraSwarm",E,"Struct holding instances and information of Libra Swarm",N,N],[12,"dir",E,E,2,N],[12,"nodes",E,E,2,N],[12,"config",E,E,2,N],[4,R[1883],E,E,N,N],[13,"Healthy",E,E,3,N],[13,"Crashed",E,E,3,N],[13,"RpcFailure",E,E,3,N],[4,R[1884],E,"A wrapper that unifies PathBuf and TempPath.",N,N],[13,"Persistent",E,E,4,N],[13,"Temporary",E,E,4,N],[4,R[1885],E,E,N,N],[13,"LaunchTimeout",E,"Timeout while waiting for nodes to start",5,N],[13,"NodeCrash",E,"Node return status indicates a crash",5,N],[13,"ConnectivityTimeout",E,"Timeout while waiting for the nodes to report that they're…",5,N],[13,"IoError",E,E,5,N],[11,"launch",E,E,6,[[[R[952]],["path"],[R[58]],["pathbuf"],["bool"]],[R[0]]]],[11,"ac_port",E,E,6,[[["self"]],["u16"]]],[11,"get_log_contents",E,E,6,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[11,"check_connectivity",E,E,6,[[["self"],["i64"]],["bool"]]],[11,R[2116],E,E,6,[[["self"]],["healthstatus"]]],[11,"launch_swarm",E,E,2,[[[R[952]],[R[58]],[R[248],[R[192],R[181]]],[R[192]],[R[181]],["bool"],["usize"],[R[24],[R[58]]]],["self"]]],[11,"configure_swarm",E,E,2,[[[R[952]],[R[248],[R[192],R[181]]],[R[192]],[R[181]],[R[58]],["usize"],[R[24],[R[58]]]],[[R[0],["libraswarm"]],["libraswarm"]]]],[11,"launch_attempt",E,E,2,[[["self"],[R[952]],["bool"]],[[R[1878]],[R[0],[R[1878]]]]]],[11,"wait_for_all_nodes_to_catchup",E,"This function first checks the last committed round of all…",2,[[["self"]],["bool"]]],[11,"get_ac_port",E,"A specific public AC port of a validator or a full node.",2,[[["self"],["usize"]],["u16"]]],[11,"get_validators_ids",E,"Vector with the peer ids of the validators in the swarm.",2,[[["self"]],[["vec",[R[58]]],[R[58]]]]],[11,"get_validators_debug_ports",E,"Vector with the debug ports of all the validators in the…",2,[[["self"]],[["u16"],["vec",["u16"]]]]],[11,"get_validator",E,E,2,[[["self"],["usize"]],[["libranode"],[R[24],["libranode"]]]]],[11,"kill_node",E,E,2,[[["self"],["usize"]]]],[11,"add_node",E,E,2,[[["self"],["usize"],[R[952]],["bool"]],[[R[1878]],[R[0],[R[1878]]]]]],[0,"utils",R[1877],E,N,N],[5,"workspace_root","libra_swarm::utils",E,N,[[],["pathbuf"]]],[5,"build_dir",E,E,N,[[],["pathbuf"]]],[5,"get_bin",E,E,N,[[["asref",["str"]],["str"]],["pathbuf"]]],[11,"into",R[1879],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,"into",R[1880],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[58]]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[59],E,E,5,[[["self"]],["fail"]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,"drop",R[1879],E,0,[[["self"]]]],[11,"drop",R[1880],E,6,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"as_ref",E,E,4,[[["self"]],["path"]]],[11,"from",E,E,5,[[["error"]],["self"]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"name",E,E,5,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,5,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,5,[[["self"]],[[R[35]],[R[24],[R[35]]]]]]],"p":[[3,R[1881]],[3,R[1882]],[3,"LibraSwarm"],[4,R[1883]],[4,R[1884]],[4,R[1885]],[3,"LibraNode"]]};
searchIndex["libra_tools"]={"doc":E,"i":[[0,"tempdir","libra_tools",E,N,N],[3,R[1],"libra_tools::tempdir","A simple wrapper for creating a temporary directory that…",N,N],[11,"new",E,"Create new uninitialized temporary path, i.e. a file or…",0,[[],["self"]]],[11,"path",E,"Return the underlying path to this temporary directory.",0,[[["self"]],["path"]]],[11,"persist",E,E,0,[[["self"]]]],[11,"create_as_file",E,E,0,[[["self"]],[R[0]]]],[11,"create_as_dir",E,E,0,[[["self"]],[R[0]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["path"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,R[1]]]};
searchIndex["libra_types"]={"doc":E,"i":[[0,R[289],R[268],"Suppose we have the following data structure in a smart…",N,N],[3,"Field",R[447],E,N,N],[3,"Accesses",E,"Non-empty sequence of field accesses",N,N],[3,R[559],E,"The access path where the Validator Set resource is stored.",N,N],[3,R[332],E,E,N,N],[12,R[333],E,E,0,N],[12,"path",E,E,0,N],[4,"Access",E,E,N,N],[13,"Field",E,E,1,N],[13,"Index",E,E,1,N],[11,"new",E,E,2,[[[R[264]]],["field"]]],[11,"name",E,E,2,[[["self"]],[R[271]]]],[11,"new",E,E,1,[[[R[264]]],["self"]]],[11,"empty",E,E,3,[[],["self"]]],[11,"new",E,E,3,[[["field"]],["self"]]],[11,"add_field_to_back",E,"Add a field to the end of the sequence",3,[[["self"],["field"]]]],[11,"add_index_to_back",E,"Add an index to the end of the sequence",3,[[["self"],["u64"]]]],[11,"append",E,E,3,[[["self"],[R[266]]]]],[11,"split_first",E,"Returns the first field in the sequence and reference to…",3,[[["self"]]]],[11,"last",E,"Return the last access in the sequence",3,[[["self"]],["access"]]],[11,"iter",E,E,3,[[["self"]],[["iter",["access"]],["access"]]]],[11,"len",E,E,3,[[["self"]],["usize"]]],[11,R[12],E,E,3,[[["self"]],["bool"]]],[11,"as_separated_string",E,E,3,[[["self"]],[R[58]]]],[11,"take_nth",E,E,3,[[["self"],["usize"]],[R[266]]]],[11,"new",E,E,0,[[[R[265]],["vec",["u8"]],["u8"]],["self"]]],[11,"new_for_account",E,"Given an address, returns the corresponding access path…",0,[[[R[265]]],["self"]]],[11,"new_for_event",E,"Create an AccessPath for a ContractEvent. That is an…",0,[[[R[265]]],["self"]]],[11,"new_for_sent_event",E,"Create an AccessPath to the event for the sender account…",0,[[[R[265]]],["self"]]],[11,"new_for_received_event",E,"Create an AccessPath to the event for the target account…",0,[[[R[265]]],["self"]]],[11,"resource_access_vec",E,E,0,[[[R[266]],[R[272]]],[["vec",["u8"]],["u8"]]]],[11,"resource_access_path",E,"Convert Accesses into a byte offset which would be used by…",0,[[[R[266]],[R[483]]],[R[267]]]],[11,"code_access_path",E,E,0,[[[R[484]]],[R[267]]]],[0,R[354],R[268],E,N,N],[3,R[520],R[448],R[1636],N,N],[17,R[1376],E,E,N,N],[11,"new",E,E,4,[[],["self"]]],[11,"random",E,E,4,[[],["self"]]],[11,R[269],E,E,4,[[["self"]],[R[58]]]],[11,"to_vec",E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1637],E,E,4,[[[R[270]]],["self"]]],[11,R[1638],E,E,4,[[["str"]],[R[0]]]],[0,"account_config",R[268],E,N,N],[3,R[521],R[449],"A Rust representation of an Account resource. This is not…",N,N],[3,R[560],E,"The path to the sent event counter for an Account…",N,N],[3,R[561],E,"Returns the path to the received event counter for an…",N,N],[3,R[522],E,"Generic struct that represents an Account event. Both…",N,N],[5,"coin_module_name",E,E,N,[[],[R[271]]]],[5,"coin_struct_name",E,E,N,[[],[R[271]]]],[5,"account_module_name",E,E,N,[[],[R[271]]]],[5,"account_struct_name",E,E,N,[[],[R[271]]]],[5,"core_code_address",E,E,N,[[],[R[265]]]],[5,"association_address",E,E,N,[[],[R[265]]]],[5,"transaction_fee_address",E,E,N,[[],[R[265]]]],[5,"validator_set_address",E,E,N,[[],[R[265]]]],[5,"account_struct_tag",E,E,N,[[],[R[272]]]],[5,"get_account_resource_or_default",E,E,N,[[[R[24]]],[[R[273]],[R[0],[R[273]]]]]],[5,"account_resource_path",E,"Return the path to the Account resource. It can be used to…",N,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,"Constructs an Account resource.",5,[[[R[275]],[R[274]],["u64"],["bool"]],["self"]]],[11,"make_from",E,"Given an account map (typically from storage) retrieves…",5,[[[R[310]]],[R[0]]]],[11,R[281],E,"Return the sequence_number field for the given…",5,[[["self"]],["u64"]]],[11,"balance",E,"Return the balance field for the given AccountResource",5,[[["self"]],["u64"]]],[11,"authentication_key",E,"Return the authentication_key field for the given…",5,[[["self"]],[R[274]]]],[11,"sent_events",E,"Return the sent_events handle for the given AccountResource",5,[[["self"]],[R[275]]]],[11,"received_events",E,"Return the received_events handle for the given…",5,[[["self"]],[R[275]]]],[11,"delegated_key_rotation_capability",E,"Return the delegated_key_rotation_capability field for the…",5,[[["self"]],["bool"]]],[11,"delegated_withdrawal_capability",E,"Return the delegated_withdrawal_capability field for the…",5,[[["self"]],["bool"]]],[11,"get_event_handle_by_query_path",E,E,5,[[["self"]],[[R[275]],[R[0],[R[275]]]]]],[11,R[2],E,E,6,[[],[[R[0],[R[276]]],[R[276]]]]],[11,"account",E,"Get the account related to the event",6,[[["self"]],[R[265]]]],[11,"amount",E,"Get the amount sent or received",6,[[["self"]],["u64"]]],[0,R[1510],R[268],E,N,N],[3,R[355],R[450],E,N,N],[3,R[356],E,E,N,N],[12,R[279],E,"The transaction version at which this account state is seen.",7,N],[12,"blob",E,"Blob value representing the account state. If this field…",7,N],[12,"proof",E,"The proof the client can use to authenticate the value.",7,N],[5,"account_state_blob_strategy",E,E,N,[[]]],[11,"new",E,R[282],7,[[[R[277]],[R[24],[R[277]]],[R[279]],[R[474]]],["self"]]],[11,"verify",E,"Verifies the the account state blob with the proof, both…",7,[[["self"],[R[265]],[R[279]],[R[283]]],[R[0]]]],[0,"block_info",R[268],E,N,N],[3,R[523],R[456],"This structure contains all the information needed for…",N,N],[6,"Round",E,R[2184],N,N],[11,"new",E,E,8,[[[R[278]],[R[149]],[R[279]],[R[24],[R[278]]],["u64"],["round"]],["self"]]],[11,"empty",E,E,8,[[],["self"]]],[11,"random",E,E,8,[[["round"]],["self"]]],[11,R[432],E,E,8,[[],["self"]]],[11,"epoch",E,E,8,[[["self"]],["u64"]]],[11,"executed_state_id",E,E,8,[[["self"]],[R[149]]]],[11,R[1899],E,E,8,[[["self"]],["bool"]]],[11,"id",E,E,8,[[["self"]],[R[149]]]],[11,R[309],E,E,8,[[["self"]],[[R[24],[R[278]]],[R[278]]]]],[11,"round",E,E,8,[[["self"]],["round"]]],[11,R[308],E,E,8,[[["self"]],["u64"]]],[11,R[279],E,E,8,[[["self"]],[R[279]]]],[0,"block_metadata",R[268],E,N,N],[3,R[405],R[457],"Struct that will be persisted on chain to store the…",N,N],[11,"new",E,E,9,[[[R[265]],[R[149]],[R[185]],["u64"],[R[310],[R[265],R[185]]]],["self"]]],[11,R[280],E,E,9,[[],[R[0]]]],[0,R[655],R[268],E,N,N],[3,R[305],R[458],"A struct that represents a ByteArray in Move.",N,N],[11,R[304],E,E,10,[[["self"]]]],[11,"new",E,E,10,[[["vec",["u8"]],["u8"]],["self"]]],[11,"len",E,E,10,[[["self"]],["usize"]]],[11,R[12],E,E,10,[[["self"]],["bool"]]],[11,R[280],E,E,10,[[],[["vec",["u8"]],["u8"]]]],[0,"contract_event",R[268],E,N,N],[3,R[524],R[330],"Entry produced via a call to the `emit_event` builtin.",N,N],[3,R[348],E,E,N,N],[12,R[349],E,E,11,N],[12,R[350],E,E,11,N],[12,"event",E,E,11,N],[12,"proof",E,E,11,N],[11,"new",E,E,12,[[[R[284]],[R[503]],["vec",["u8"]],["u64"],["u8"]],["self"]]],[11,"key",E,E,12,[[["self"]],[R[284]]]],[11,R[281],E,E,12,[[["self"]],["u64"]]],[11,R[347],E,E,12,[[["self"]]]],[11,"type_tag",E,E,12,[[["self"]],[R[503]]]],[11,"new",E,R[282],11,[[[R[279]],[R[327]],["u64"],[R[475]]],["self"]]],[11,"verify",E,"Verifies the event with the proof, both carried by `self`.",11,[[["self"],[R[279]],[R[283]],[R[284]],["u64"]],[R[0]]]],[0,"crypto_proxies",R[268],"This module defines a data structure made to contain a…",N,N],[3,R[525],R[459],E,N,N],[5,"random_validator_verifier",E,"Helper function to get random validator signers and a…",N,[[["usize"],[R[24],["u64"]],["u64"],["bool"]]]],[6,"SecretKey",E,E,N,N],[6,R[212],E,E,N,N],[6,R[306],E,E,N,N],[6,R[434],E,E,N,N],[6,R[435],E,E,N,N],[6,R[431],E,E,N,N],[6,R[362],E,E,N,N],[11,"verify",E,E,13,[[["self"],[R[265]],[R[149]],["rawvalidatorverifier"]],[[R[0],[R[285]]],[R[285]]]]],[11,R[2],E,E,13,[[],[[R[0],[R[147]]],[R[147]]]]],[11,R[144],E,E,13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"add_to_li",E,E,13,[[[R[265]],["rawledgerinfowithsignatures"]]]],[0,"event",R[268],E,N,N],[3,"EventKey",R[328],"A struct that represents a globally unique id for an Event…",N,N],[3,R[526],E,"A Rust representation of an Event Handle Resource.",N,N],[17,"EVENT_KEY_LENGTH",E,"Size of an event key.",N,N],[11,"new",E,"Construct a new EventKey from a byte array slice.",14,[[],["self"]]],[11,R[304],E,"Get the byte representation of the event key.",14,[[["self"]]]],[11,"to_vec",E,"Convert event key into a byte array.",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"random",E,"Create a random event key for testing",14,[[],["self"]]],[11,R[286],E,"Create a unique handle by using an AccountAddress and a…",14,[[[R[265]],["u64"]],["self"]]],[11,"new",E,"Constructs a new Event Handle",15,[[[R[284]],["u64"]],["self"]]],[11,"key",E,"Return the key to where this event is stored in EventStore.",15,[[["self"]],[R[284]]]],[11,"count",E,"Return the counter for the handle",15,[[["self"]],["u64"]]],[11,"count_mut",E,E,15,[[["self"]],["u64"]]],[11,"random_handle",E,"Create a random event handle for testing",15,[[["u64"]],["self"]]],[11,R[286],E,"Derive a unique handle by using an AccountAddress and a…",15,[[[R[265]],["u64"]],["self"]]],[0,R[680],R[268],E,N,N],[3,R[364],R[287],E,N,N],[12,R[365],E,E,16,N],[12,R[366],E,E,16,N],[3,R[368],E,E,N,N],[12,R[369],E,E,17,N],[12,R[363],E,E,17,N],[12,R[370],E,E,17,N],[12,R[371],E,E,17,N],[4,R[367],E,E,N,N],[13,R[291],E,E,18,N],[12,"account",R[288],E,18,N],[12,R[281],E,E,18,N],[12,R[290],E,E,18,N],[13,R[292],R[287],E,18,N],[12,R[333],R[288],E,18,N],[13,R[294],R[287],E,18,N],[12,R[289],R[288],E,18,N],[12,R[376],E,E,18,N],[12,R[377],E,E,18,N],[12,"limit",E,E,18,N],[13,R[295],R[287],E,18,N],[12,R[380],R[288],E,18,N],[12,"limit",E,E,18,N],[12,R[290],E,E,18,N],[4,R[372],R[287],E,N,N],[13,R[291],E,E,19,N],[12,R[374],R[293],E,19,N],[12,R[375],E,E,19,N],[13,R[292],R[287],E,19,N],[12,R[373],R[293],E,19,N],[13,R[294],R[287],E,19,N],[12,R[378],R[293],E,19,N],[12,R[379],E,E,19,N],[13,R[295],R[287],E,19,N],[12,R[382],R[293],E,19,N],[5,"verify_update_to_latest_ledger_response",R[287],"Verifies content of an [`UpdateToLatestLedgerResponse`]…",N,[[["arc",[R[296]]],[R[296]],["u64"],[R[298]]],[R[0]]]],[11,"new",E,E,16,[[["vec",[R[297]]],["u64"],[R[297]]],["self"]]],[11,"new",E,R[282],17,[[[R[298]],[R[478]],[R[473]],["vec",[R[299]]],[R[299]]],["self"]]],[11,"verify",E,"Verifies that the response has items corresponding to…",17,[[["self"],["arc",[R[296]]],[R[296]],[R[479]]],[R[0]]]],[11,"into_get_account_state_response",E,E,19,[[],[[R[0],[R[300]]],[R[300]]]]],[11,"into_get_account_txn_by_seq_num_response",E,E,19,[[],[R[0]]]],[11,"into_get_events_by_access_path_response",E,E,19,[[],[R[0]]]],[11,"into_get_transactions_response",E,E,19,[[],[[R[301]],[R[0],[R[301]]]]]],[0,R[264],R[268],"An identifier is the name of an entity (module, resource,…",N,N],[3,R[527],R[460],"An owned identifier.",N,N],[3,"IdentStr",E,"A borrowed identifier.",N,N],[11,"new",E,"Creates a new `Identifier` instance.",20,[[],[R[0]]]],[11,R[302],E,R[303],20,[[],["bool"]]],[11,R[794],E,"Converts a vector of bytes to an `Identifier`.",20,[[["vec",["u8"]],["u8"]],[R[0]]]],[11,"as_ident_str",E,R[796],20,[[["self"]],[R[271]]]],[11,R[797],E,"Converts this `Identifier` into a `String`.",20,[[],[R[58]]]],[11,R[577],E,"Converts this `Identifier` into a UTF-8-encoded byte…",20,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,E,21,[[["str"]],[[R[0],[R[271]]],[R[271]]]]],[11,R[302],E,R[303],21,[[],["bool"]]],[11,"len",E,R[798],21,[[["self"]],["usize"]]],[11,R[12],E,R[799],21,[[["self"]],["bool"]]],[11,"as_str",E,R[800],21,[[["self"]],["str"]]],[11,R[304],E,R[801],21,[[["self"]]]],[0,"language_storage",R[268],E,N,N],[3,R[528],R[461],E,N,N],[12,R[333],E,E,22,N],[12,"module",E,E,22,N],[12,"name",E,E,22,N],[12,"type_params",E,E,22,N],[3,R[529],E,"Represents the intitial key into global storage where we…",N,N],[3,R[530],E,"Represents the initial key into global storage where we…",N,N],[4,"TypeTag",E,E,N,N],[13,"Bool",E,E,23,N],[13,"U64",E,E,23,N],[13,R[305],E,E,23,N],[13,R[739],E,E,23,N],[13,"Struct",E,E,23,N],[11,R[333],E,E,24,[[["self"]],[R[265]]]],[11,"type_",E,E,24,[[["self"]],[R[272]]]],[11,"new",E,E,24,[[[R[265]],[R[272]]],["self"]]],[11,"new",E,E,25,[[[R[265]],[R[264]]],["self"]]],[11,"name",E,E,25,[[["self"]],[R[271]]]],[11,R[333],E,E,25,[[["self"]],[R[265]]]],[0,R[311],R[268],E,N,N],[3,R[357],R[462],"This structure serves a dual purpose.",N,N],[3,R[306],E,"The validator node returns this structure which includes…",N,N],[11,"new",E,"Constructs a `LedgerInfo` object based on the given commit…",26,[[[R[307]],[R[149]]],["self"]]],[11,"commit_info",E,"The `BlockInfo` of a committed block.",26,[[["self"]],[R[307]]]],[11,"epoch",E,"A series of wrapper functions for the data stored in the…",26,[[["self"]],["u64"]]],[11,"round",E,E,26,[[["self"]],["round"]]],[11,R[360],E,E,26,[[["self"]],[R[149]]]],[11,R[358],E,E,26,[[["self"]],[R[149]]]],[11,R[279],E,E,26,[[["self"]],[R[279]]]],[11,"is_zero",E,"A ledger info is nominal if it's not certifying any real…",26,[[["self"]],["bool"]]],[11,R[308],E,E,26,[[["self"]],["u64"]]],[11,R[309],E,E,26,[[["self"]],[[R[24],[R[278]]],[R[278]]]]],[11,R[359],E,"Returns hash of consensus voting data in this `LedgerInfo`.",26,[[["self"]],[R[149]]]],[11,"set_consensus_data_hash",E,E,26,[[["self"],[R[149]]]]],[11,R[432],E,"To bootstrap the system until we execute and commit the…",26,[[],["self"]]],[11,"new",E,E,27,[[[R[310],[R[265]]],[R[265]],[R[283]]],["self"]]],[11,R[311],E,E,27,[[["self"]],[R[283]]]],[11,R[2185],E,E,27,[[["self"],[R[265]],["sig"]]]],[11,R[2186],E,E,27,[[["self"],[R[265]]]]],[11,R[361],E,E,27,[[["self"]],[R[310]]]],[11,"verify",E,E,27,[[["self"],[R[296]]],[[R[285]],[R[0],[R[285]]]]]],[0,"proof",R[268],E,N,N],[3,R[536],R[313],E,N,N],[3,R[537],E,E,N,N],[0,R[567],E,"This module implements an in-memory Merkle Accumulator…",N,N],[3,R[531],R[463],"The Accumulator implementation.",N,N],[11,"new",E,"Constructs a new accumulator with roots of existing frozen…",28,[[[R[312]],["vec",[R[149]]],[R[149]]],[R[0]]]],[11,"from_leaves",E,"Constructs a new accumulator with given leaves.",28,[[],["self"]]],[11,"append",E,"Appends a list of new leaves to an existing accumulator.…",28,[[["self"]],["self"]]],[11,"append_subtrees",E,"Appends a list of new subtrees to the existing…",28,[[["self"],[R[312]]],[R[0]]]],[11,R[570],E,"Returns the root hash of the accumulator.",28,[[["self"]],[R[149]]]],[11,R[279],E,E,28,[[["self"]],["u64"]]],[11,"frozen_subtree_roots",E,"Returns the set of frozen subtree roots in this accumulator",28,[[["self"]],["vec"]]],[11,"num_leaves",E,"Returns the total number of leaves in this accumulator.",28,[[["self"]],[R[312]]]],[0,R[779],R[313],"This module has definition of various proofs.",N,N],[3,R[334],R[464],"A proof that can be used authenticate an element in an…",N,N],[3,R[335],E,"A proof that can be used to authenticate an element in a…",N,N],[3,R[337],E,"A proof that can be used to show that two Merkle…",N,N],[3,R[338],E,"A proof that is similar to `AccumulatorProof`, but can be…",N,N],[3,R[532],E,"A proof that can be used authenticate a range of…",N,N],[3,R[339],E,"The complete proof used to authenticate a `Transaction`…",N,N],[3,R[340],E,"The complete proof used to authenticate the state of an…",N,N],[3,R[342],E,"The complete proof used to authenticate a contract event.…",N,N],[3,R[344],E,R[345],N,N],[6,"LeafCount",E,"Because leaves can only take half the space in the tree,…",N,N],[6,"TransactionAccumulatorProof",E,E,N,N],[6,"EventAccumulatorProof",E,E,N,N],[6,"TestAccumulatorProof",E,E,N,N],[6,"TransactionAccumulatorRangeProof",E,E,N,N],[6,"TestAccumulatorRangeProof",E,E,N,N],[17,"MAX_ACCUMULATOR_PROOF_DEPTH",E,E,N,N],[17,"MAX_ACCUMULATOR_LEAVES",E,E,N,N],[11,"new",E,"Constructs a new `AccumulatorProof` using a list of…",29,[[["vec",[R[149]]],[R[149]]],["self"]]],[11,R[315],E,R[314],29,[[["self"]]]],[11,"verify",E,"Verifies an element whose hash is `element_hash` and…",29,[[["self"],["u64"],[R[149]]],[R[0]]]],[11,"new",E,"Constructs a new `SparseMerkleProof` using leaf and a list…",30,[[[R[149]],[R[24]],["vec",[R[149]]]],["self"]]],[11,"leaf",E,"Returns the leaf node in this proof.",30,[[["self"]],[R[24]]]],[11,R[315],E,R[314],30,[[["self"]]]],[11,"verify",E,"If `element_blob` is present, verifies an element whose…",30,[[["self"],[R[149]],[R[24],[R[277]]],[R[277]]],[R[0]]]],[11,"new",E,"Constructs a new `AccumulatorConsistencyProof` using given…",31,[[["vec",[R[149]]],[R[149]]],["self"]]],[11,"subtrees",E,"Returns the subtrees.",31,[[["self"]]]],[11,"new",E,"Constructs a new `AccumulatorRangeProof` using…",32,[[["vec",[R[149]]],[R[149]]],["self"]]],[11,R[324],E,"Constructs a new `AccumulatorRangeProof` for an empty list…",32,[[],["self"]]],[11,"verify",E,"Verifies the proof is correct. The verifier needs to have…",32,[[["self"],[R[149]],[R[24],["u64"]],["u64"]],[R[0]]]],[11,"new",E,"Constructs a new `SparseMerkleRangeProof`.",33,[[["vec",[R[149]]],[R[149]]],["self"]]],[11,R[315],E,"Returns the siblings.",33,[[["self"]]]],[11,"new",E,"Constructs a new `TransactionProof` object using given…",34,[[[R[316]],[R[317]]],["self"]]],[11,R[318],E,R[319],34,[[["self"]],[R[316]]]],[11,R[320],E,R[321],34,[[["self"]],[R[317]]]],[11,"verify",E,"Verifies that a `Transaction` with hash value of…",34,[[["self"],[R[149]],[R[279]],[R[283]],[R[24],[R[149]]]],[R[0]]]],[11,"new",E,"Constructs a new `AccountStateProof` using given…",35,[[[R[316]],[R[317]],[R[322]]],["self"]]],[11,R[318],E,R[319],35,[[["self"]],[R[316]]]],[11,R[320],E,R[321],35,[[["self"]],[R[317]]]],[11,R[341],E,"Returns the `transaction_info_to_account_proof` object in…",35,[[["self"]],[R[322]]]],[11,"verify",E,"Verifies that the state of an account at version…",35,[[["self"],[R[279]],[R[149]],[R[283]],[R[24],[R[277]]],[R[277]]],[R[0]]]],[11,"new",E,"Constructs a new `EventProof` using given…",36,[[[R[316]],[R[317]],[R[323]]],["self"]]],[11,R[318],E,R[319],36,[[["self"]],[R[316]]]],[11,R[320],E,R[321],36,[[["self"]],[R[317]]]],[11,R[343],E,"Returns the `transaction_info_to_event_proof` object in…",36,[[["self"]],[R[323]]]],[11,"verify",E,"Verifies that a given event is correct using provided proof.",36,[[["self"],[R[149]],[R[279]],[R[283]]],[R[0]]]],[11,"new",E,"Constructs a new `TransactionListProof` using…",37,[[["vec",[R[317]]],[R[317]],["transactionaccumulatorrangeproof"]],["self"]]],[11,R[324],E,"Constructs a proof for an empty list of transactions.",37,[[],["self"]]],[11,R[346],E,"Returns the list of `TransactionInfo` objects.",37,[[["self"]]]],[11,"verify",E,"Verifies the list of transactions are correct using the…",37,[[["self"],[R[279]],[R[283]],[R[24],[R[279]]]],[R[0]]]],[0,R[506],R[313],"This module provides an abstraction for positioning a node…",N,N],[3,"Position",R[465],E,N,N],[3,R[562],E,"`AncestorSiblingIterator` generates current sibling…",N,N],[3,R[563],E,"`AncestorIterator` generates current position and moves…",N,N],[3,R[534],E,"Traverse leaves from left to right in groups that forms…",N,N],[3,R[535],E,"Given an accumulator of size `current_num_leaves`,…",N,N],[4,R[533],E,E,N,N],[13,"Left",E,E,38,N],[13,"Right",E,E,38,N],[5,"inorder_to_postorder",E,"Given `node`, an index in an in-order traversal of a…",N,[[["u64"]],["u64"]]],[5,"postorder_to_inorder",E,E,N,[[["u64"]],["u64"]]],[11,"level",E,"What level is this node in the tree, 0 if the node is a…",39,[[],["u32"]]],[11,"from_level_and_pos",E,"pos count start from 0 on each level",39,[[["u32"],["u64"]],["self"]]],[11,"from_inorder_index",E,E,39,[[["u64"]],["self"]]],[11,"to_inorder_index",E,E,39,[[],["u64"]]],[11,"from_postorder_index",E,E,39,[[["u64"]],["self"]]],[11,"to_postorder_index",E,E,39,[[],["u64"]]],[11,"parent",E,"What is the parent of this node?",39,[[],["self"]]],[11,"left_child",E,"What is the left node of this node? Will overflow if the…",39,[[],["self"]]],[11,"right_child",E,"What is the right node of this node? Will overflow if the…",39,[[],["self"]]],[11,"is_left_child",E,"Whether this position is a left child of its parent. The…",39,[[],["bool"]]],[11,"is_right_child",E,E,39,[[],["bool"]]],[11,"from_leaf_index",E,E,39,[[["u64"]],["self"]]],[11,"sibling",E,"This method takes in a node position and return its…",39,[[],["self"]]],[11,"root_from_leaf_index",E,"This method calculates the index of the smallest root…",39,[[["u64"]],["self"]]],[11,"root_from_leaf_count",E,E,39,[[[R[312]]],["self"]]],[11,"root_level_from_leaf_count",E,E,39,[[[R[312]]],["u32"]]],[11,"right_most_child",E,"Given a node, find its right most child in its subtree.…",39,[[],["self"]]],[11,"left_most_child",E,"Given a node, find its left most child in its subtree Left…",39,[[],["self"]]],[11,"is_freezable",E,E,39,[[["u64"]],["bool"]]],[11,"is_placeholder",E,E,39,[[["u64"]],["bool"]]],[11,"iter_ancestor",E,"Creates an `AncestorIterator` using this position.",39,[[],["ancestoriterator"]]],[11,"iter_ancestor_sibling",E,"Creates an `AncestorSiblingIterator` using this position.",39,[[],["ancestorsiblingiterator"]]],[11,"new",E,E,40,[[[R[312]]],["self"]]],[11,"new",E,"Constructs a new `FrozenSubtreeSiblingIterator` given the…",41,[[[R[312]]],["self"]]],[0,"proptest_proof",R[313],"All proofs generated in this module are not valid proofs.…",N,N],[6,"SparseMerkleInternalNode",E,E,N,N],[6,"TransactionAccumulatorInternalNode",E,E,N,N],[6,"EventAccumulatorInternalNode",E,E,N,N],[6,"TestAccumulatorInternalNode",E,E,N,N],[11,"new",E,E,42,[[[R[149]]],["self"]]],[11,"new",E,E,43,[[[R[149]]],["self"]]],[0,R[769],R[268],E,N,N],[3,R[564],R[331],E,N,N],[3,R[538],E,E,N,N],[3,R[539],E,E,N,N],[3,R[540],E,E,N,N],[3,R[541],E,"Represents information already determined for generating a…",N,N],[5,"arb_byte_array",E,E,N,[[]]],[11,R[325],E,E,44,[[["index"],[R[326]]],[R[407]]]],[11,R[325],E,E,45,[[["index"],[R[326]]],[R[395]]]],[11,R[325],E,E,46,[[["index"],[R[326]]],[R[327]]]],[11,R[329],R[328],E,15,[[]]],[11,R[329],R[330],E,12,[[]]],[11,R[325],R[331],"Materialize considering current states in the universe.",47,[[[R[326]]],[R[477]]]],[0,"proto",R[268],E,N,N],[0,"types","libra_types::proto",E,N,N],[3,R[332],R[383],E,N,N],[12,R[333],E,E,48,N],[12,"path",E,E,48,N],[3,R[398],E,R[399],N,N],[12,R[417],E,"Hash of the transaction that is stored.",49,N],[12,R[418],E,"The root hash of Sparse Merkle Tree describing the world…",49,N],[12,R[419],E,"The root hash of Merkle Accumulator storing all events…",49,N],[12,R[415],E,"The amount of gas used by this transaction.",49,N],[12,R[352],E,"The major status of executing this transaction.",49,N],[3,R[334],E,E,N,N],[12,R[315],E,R[336],50,N],[3,R[335],E,E,N,N],[12,"leaf",E,"This proof can be used to authenticate whether a given…",51,N],[12,R[315],E,R[336],51,N],[3,R[337],E,E,N,N],[12,"subtrees",E,"The root hashes of the subtrees that represent new leaves.…",52,N],[3,R[338],E,E,N,N],[12,"left_siblings",E,"The siblings on the left of the path from root to the…",53,N],[12,"right_siblings",E,"The siblings on the right of the path from root to the…",53,N],[3,R[339],E,"The complete proof used to authenticate a transaction.",N,N],[12,R[318],E,E,54,N],[12,R[320],E,E,54,N],[3,R[340],E,"The complete proof used to authenticate an account state.",N,N],[12,R[318],E,E,55,N],[12,R[320],E,E,55,N],[12,R[341],E,E,55,N],[3,R[342],E,"The complete proof used to authenticate an event.",N,N],[12,R[318],E,E,56,N],[12,R[320],E,E,56,N],[12,R[343],E,E,56,N],[3,R[344],E,R[345],N,N],[12,"ledger_info_to_transaction_infos_proof",E,E,57,N],[12,R[346],E,E,57,N],[3,"Event",E,"An event emitted from a smart contract",N,N],[12,"key",E,E,58,N],[12,R[281],E,E,58,N],[12,R[347],E,E,58,N],[12,"type_tag",E,E,58,N],[3,R[348],E,"An event along with the proof for the event",N,N],[12,R[349],E,E,59,N],[12,R[350],E,E,59,N],[12,"event",E,E,59,N],[12,"proof",E,E,59,N],[3,R[542],E,"A list of events.",N,N],[12,"events",E,E,60,N],[3,R[543],E,"A list of EventList's, each representing all events for a…",N,N],[12,"events_for_version",E,E,61,N],[3,R[530],E,E,N,N],[12,R[333],E,E,62,N],[12,"name",E,E,62,N],[3,R[403],E,"An argument to the transaction if the transaction takes…",N,N],[3,R[396],E,"A generic structure that represents signed RawTransaction",N,N],[12,"txn_bytes",E,"LCS bytes representation of a SignedTransaction.",63,N],[3,R[404],E,"A generic structure that represents a transaction,…",N,N],[12,R[351],E,E,64,N],[3,R[397],E,E,N,N],[12,R[279],E,"The version of the returned signed transaction.",65,N],[12,R[351],E,"The transaction itself.",65,N],[12,"proof",E,"The proof authenticating the transaction.",65,N],[12,"events",E,"The events yielded by executing the transaction, if…",65,N],[3,R[544],E,"A generic structure that represents a block of…",N,N],[12,R[353],E,"Set of Signed Transactions",66,N],[12,"validator_public_key",E,"Public key of the validator that created this block",66,N],[12,"validator_signature",E,"Signature of the validator that created this block",66,N],[3,R[545],E,"Account state as a whole. After execution, updates to…",N,N],[12,R[333],E,"Account address",67,N],[12,"blob",E,"Account state blob",67,N],[3,R[400],E,"Transaction struct to commit to storage",N,N],[12,R[351],E,"The signed transaction which was executed",68,N],[12,R[421],E,"State db updates",68,N],[12,"events",E,"Events yielded by the transaction.",68,N],[12,R[415],E,"The amount of gas used.",68,N],[12,R[352],E,"The major status of executing the transaction.",68,N],[3,R[401],E,"A list of consecutive transactions with proof. This is…",N,N],[12,R[353],E,"The list of transactions.",69,N],[12,"events_for_versions",E,"The list of corresponding Event objects (only present if…",69,N],[12,R[402],E,"If the list is not empty, the version of the first…",69,N],[12,"proof",E,"The proof authenticating the transactions and events.When…",69,N],[3,R[423],E,"Protobuf definition for the Rust struct ValidatorPublicKeys",N,N],[12,R[354],E,"Validator account address",70,N],[12,R[424],E,"Consensus public key",70,N],[12,R[425],E,"Validator voting power for consensus",70,N],[12,R[426],E,"Network signing publick key",70,N],[12,R[427],E,E,70,N],[3,"VmStatus",E,"The statuses and errors produced by the VM can be…",N,N],[12,R[352],E,"e.g. assertion violation, out of gas",71,N],[12,"has_sub_status",E,"Any substatus code. e.g. assertion error number",71,N],[12,R[442],E,E,71,N],[12,"has_message",E,E,71,N],[12,"message",E,E,71,N],[3,R[355],E,E,N,N],[12,"blob",E,E,72,N],[3,R[356],E,E,N,N],[12,R[279],E,E,73,N],[12,"blob",E,E,73,N],[12,"proof",E,E,73,N],[3,R[428],E,"Protobuf definition for the Rust struct ValidatorSet.",N,N],[12,R[422],E,E,74,N],[3,R[357],E,E,N,N],[12,R[279],E,"Current latest version of the system",75,N],[12,R[358],E,"Root hash of transaction accumulator at this version",75,N],[12,R[359],E,"Hash of consensus-specific data that is opaque to all…",75,N],[12,R[360],E,"The block id of the last committed block corresponding to…",75,N],[12,"epoch",E,"Epoch number corresponds to the set of validators that are…",75,N],[12,"round",E,"Consensus protocol operates in rounds: the number…",75,N],[12,R[308],E,"Timestamp that represents the microseconds since the epoch…",75,N],[12,R[309],E,"An optional field with the validator set for the next…",75,N],[3,R[306],E,E,N,N],[12,R[361],E,"Signatures of the root node from each validator",76,N],[12,R[311],E,E,76,N],[3,R[546],E,E,N,N],[12,R[1482],E,"The account address of the validator, which can be used…",77,N],[12,R[412],E,E,77,N],[3,R[362],E,"This is used to prove validator changes. When a validator…",N,N],[12,R[363],E,E,78,N],[3,R[364],E,R[2195],N,N],[12,R[365],E,"This is the version the client already trusts. Usually the…",79,N],[12,R[366],E,"The items for which we are requesting data in this API call.",79,N],[3,R[367],E,E,N,N],[12,R[366],E,E,80,N],[3,R[368],E,"Response from getting latest ledger",N,N],[12,R[369],E,"Responses to the queries posed by the requests. The proofs…",81,N],[12,R[363],E,"The latest ledger info this node has. It will come with at…",81,N],[12,R[370],E,"Validator change events from what the client last knew.…",81,N],[12,R[371],E,"A proof that shows the latest ledger accumulator is…",81,N],[3,R[372],E,"Individual response items to the queries posed by the…",N,N],[12,R[369],E,E,82,N],[3,R[384],E,"Gets latest state for an account.",N,N],[12,R[333],E,"Account for which we are fetching the state.",83,N],[3,R[389],E,"State information returned by a get account state query.",N,N],[12,R[373],E,"Blob value representing the account state together with…",84,N],[3,R[385],E,"…",N,N],[12,"account",E,"Account for which to query transactions",85,N],[12,R[281],E,E,85,N],[12,R[290],E,"Set to true to fetch events for the transaction at this…",85,N],[3,R[390],E,"Transaction information for transactions requested by…",N,N],[12,R[374],E,"When the transaction requested is committed, return the…",86,N],[12,R[375],E,"When the transaction requested is not committed, we give a…",86,N],[3,R[386],E,"Get events that exist on an event access path. In the…",N,N],[12,R[289],E,E,87,N],[12,R[376],E,"The sequence number of the event to start with for this…",87,N],[12,R[377],E,"If ascending is true this query will return up to `limit`…",87,N],[12,"limit",E,R[381],87,N],[3,R[391],E,E,N,N],[12,R[378],E,"Returns an event and proof of each of the events in the…",88,N],[12,R[379],E,"If the number of events returned is less than `limit` for…",88,N],[3,R[387],E,"Get up to limit transactions starting from start_version.",N,N],[12,R[380],E,"The version of the transaction to start with for this…",89,N],[12,"limit",E,R[381],89,N],[12,R[290],E,"Set to true to fetch events for the transaction at each…",89,N],[3,R[392],E,E,N,N],[12,R[382],E,E,90,N],[0,"transaction_argument",E,E,N,N],[4,"ArgType",R[466],E,N,N],[13,"U64",E,E,91,N],[13,R[739],E,E,91,N],[13,"String",E,E,91,N],[13,"Bytearray",E,E,91,N],[11,R[302],E,"Returns `true` if `value` is a variant of `ArgType`.",91,[[["i32"]],["bool"]]],[11,"from_i32",E,"Converts an `i32` to a `ArgType`, or `None` if `value` is…",91,[[["i32"]],[[R[24],[R[507]]],[R[507]]]]],[0,"request_item",R[383],E,N,N],[4,R[547],R[467],E,N,N],[13,R[384],E,E,92,N],[13,R[385],E,E,92,N],[13,R[386],E,E,92,N],[13,R[387],E,E,92,N],[11,"encode",E,E,92,[[["self"],["b"]]]],[11,"merge",E,E,92,[[[R[24]],["u32"],[R[2019]],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,92,[[["self"]],["usize"]]],[0,"response_item",R[383],E,N,N],[4,R[548],R[468],E,N,N],[13,R[389],E,E,93,N],[13,R[390],E,E,93,N],[13,R[391],E,E,93,N],[13,R[392],E,E,93,N],[11,"encode",E,E,93,[[["self"],["b"]]]],[11,"merge",E,E,93,[[["u32"],[R[2019]],[R[24]],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,93,[[["self"]],["usize"]]],[0,R[393],R[268],E,N,N],[5,"assert_canonical_encode_decode","libra_types::test_helpers",E,N,[[[T]]]],[0,"transaction_test_helpers",E,E,N,N],[5,"get_test_signed_module_publishing_transaction","libra_types::test_helpers::transaction_test_helpers",E,N,[[[R[265]],[R[192]],[R[181]],["u64"],["module"]],[R[394]]]],[5,"get_test_signed_transaction",E,E,N,[[[R[265]],[R[192]],[R[181]],[R[24],["script"]],[R[24],["u64"]],["u64"],["script"]],[R[394]]]],[5,"get_test_unchecked_transaction",E,E,N,[[[R[265]],[R[192]],[R[181]],[R[24],["script"]],[R[24],["u64"]],["u64"],["script"]],[R[394]]]],[5,"get_test_signed_txn",E,E,N,[[[R[265]],[R[192]],[R[181]],[R[24],["script"]],["u64"],["script"]],[R[394]]]],[5,"get_test_unchecked_txn",E,E,N,[[[R[265]],[R[192]],[R[181]],[R[24],["script"]],["u64"],["script"]],[R[394]]]],[5,"placeholder_script",E,E,N,[[],["script"]]],[5,"get_write_set_txn",E,E,N,[[[R[265]],[R[192]],[R[181]],[R[24],[R[411]]],[R[411]],["u64"]],[R[395]]]],[0,R[351],R[268],E,N,N],[3,"Module",R[409],E,N,N],[3,"Script",E,E,N,N],[3,R[552],E,R[1639],N,N],[3,R[396],E,"A transaction that has been signed.",N,N],[3,R[553],E,"A transaction for which the signature has been verified.…",N,N],[3,R[397],E,E,N,N],[12,R[279],E,E,94,N],[12,R[351],E,E,94,N],[12,"events",E,E,94,N],[12,"proof",E,E,94,N],[3,R[554],E,"The output of executing a transaction.",N,N],[3,R[398],E,R[399],N,N],[3,R[400],E,E,N,N],[3,R[401],E,"The list may have three states: 1. The list is empty. Both…",N,N],[12,R[353],E,E,95,N],[12,"events",E,E,95,N],[12,R[402],E,E,95,N],[12,"proof",E,E,95,N],[4,R[403],E,E,N,N],[13,"U64",E,E,96,N],[13,R[739],E,E,96,N],[13,"String",E,E,96,N],[13,R[305],E,E,96,N],[13,"Bool",E,E,96,N],[4,R[549],E,E,N,N],[13,"Program",E,R[1640],97,N],[13,R[446],E,E,97,N],[13,"Script",E,R[1641],97,N],[13,"Module",E,R[1642],97,N],[4,R[550],E,"The status of executing a transaction. The VM decides…",N,N],[13,"Discard",E,"Discard the transaction output",98,N],[13,"Keep",E,"Keep the transaction output",98,N],[4,R[404],E,"`Transaction` will be the transaction type used internally…",N,N],[13,"UserTransaction",E,"Transaction submitted by the user. e.g: P2P payment…",99,N],[13,R[446],E,"Transaction that applies a WriteSet to the current…",99,N],[13,R[405],E,"Transaction to update the block metadata resource at the…",99,N],[5,"parse_as_transaction_argument",E,"Parses the given string as any transaction argument type.",N,[[["str"]],[[R[406]],[R[0],[R[406]]]]]],[0,"helpers",E,E,N,N],[5,"get_signed_transactions_digest","libra_types::transaction::helpers","Used to get the digest of a set of signed transactions.…",N,[[],[R[149]]]],[5,"create_unsigned_txn",E,E,N,[[[R[265]],["i64"],["u64"],[R[408]]],[R[407]]]],[5,R[1849],E,"Craft a transaction request.",N,[[[R[265]],[T],["i64"],["u64"],[R[408]]],[[R[394]],[R[0],[R[394]]]]]],[8,R[551],E,E,N,N],[10,R[596],E,E,100,[[["self"],[R[407]]],[[R[394]],[R[0],[R[394]]]]]],[11,"new",R[409],E,101,[[["vec",["u8"]],["u8"]],["module"]]],[11,"code",E,E,101,[[["self"]]]],[11,R[280],E,E,101,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,E,102,[[[R[406]],["vec",[R[406]]],["vec",["u8"]],["u8"]],["self"]]],[11,"code",E,E,102,[[["self"]]]],[11,"args",E,E,102,[[["self"]]]],[11,R[280],E,E,102,[[]]],[6,"Version",E,E,N,N],[17,"SCRIPT_HASH_LENGTH",E,E,N,N],[17,"MAX_TRANSACTION_SIZE_IN_BYTES",E,E,N,N],[11,"new",E,R[1643],103,[[[R[265]],[R[410]],["u64"],[R[408]]],["self"]]],[11,"new_script",E,R[1644],103,[[[R[265]],[R[410]],["u64"],["script"]],["self"]]],[11,"new_module",E,R[1645],103,[[[R[265]],[R[410]],["u64"],["module"]],["self"]]],[11,R[1646],E,E,103,[[[R[265]],[R[411]],["u64"]],["self"]]],[11,"sign",E,R[1647],103,[[[R[192]],[R[181]]],[[R[0],[R[395]]],[R[395]]]]],[11,R[1648],E,E,103,[[],[R[408]]]],[11,R[414],E,E,103,[[["self"]],[R[58]]]],[11,"sender",E,R[1649],103,[[["self"]],[R[265]]]],[11,R[280],E,"Returns the `SignedTransaction` within.",104,[[],[R[394]]]],[11,R[413],E,"Returns the `RawTransaction` within.",104,[[],[R[407]]]],[11,"new",E,E,105,[[[R[407]],[R[185]],[R[181]]],[R[394]]]],[11,R[168],E,E,105,[[["self"]],[R[181]]]],[11,R[412],E,E,105,[[["self"]],[R[185]]]],[11,"sender",E,E,105,[[["self"]],[R[265]]]],[11,R[413],E,E,105,[[],[R[407]]]],[11,R[281],E,E,105,[[["self"]],["u64"]]],[11,"payload",E,E,105,[[["self"]],[R[408]]]],[11,R[772],E,E,105,[[["self"]],["u64"]]],[11,R[773],E,E,105,[[["self"]],["u64"]]],[11,"expiration_time",E,E,105,[[["self"]],[R[410]]]],[11,"raw_txn_bytes_len",E,E,105,[[["self"]],["usize"]]],[11,"check_signature",E,"Checks that the signature of given transaction. Returns…",105,[[],[[R[0],[R[395]]],[R[395]]]]],[11,R[414],E,E,105,[[["self"]],[R[58]]]],[11,"verify_user_txn",E,"Verifies the transaction with the proof, both carried by…",94,[[["self"],[R[265]],[R[279]],[R[283]],["u64"]],[R[0]]]],[11,"vm_status",E,E,98,[[["self"]],[R[493]]]],[11,"new",E,E,106,[[[R[416]],[R[411]],[R[327]],["vec",[R[327]]],["u64"]],["self"]]],[11,R[445],E,E,106,[[["self"]],[R[411]]]],[11,"events",E,E,106,[[["self"]]]],[11,R[415],E,E,106,[[["self"]],["u64"]]],[11,"status",E,E,106,[[["self"]],[R[416]]]],[11,"new",E,"Constructs a new `TransactionInfo` object using…",107,[[[R[420]],["u64"],[R[149]]],[R[317]]]],[11,R[417],E,"Returns the hash of this transaction.",107,[[["self"]],[R[149]]]],[11,R[418],E,"Returns root hash of Sparse Merkle Tree describing the…",107,[[["self"]],[R[149]]]],[11,R[419],E,"Returns the root hash of Merkle Accumulator storing all…",107,[[["self"]],[R[149]]]],[11,R[415],E,"Returns the amount of gas used by this transaction.",107,[[["self"]],["u64"]]],[11,R[352],E,E,107,[[["self"]],[R[420]]]],[11,"new",E,E,108,[[[R[351]],[R[277]],["u64"],[R[265]],[R[420]],["hashmap",[R[265],R[277]]],[R[327]],["vec",[R[327]]]],["self"]]],[11,R[351],E,E,108,[[["self"]],[R[351]]]],[11,R[421],E,E,108,[[["self"]],["hashmap"]]],[11,"events",E,E,108,[[["self"]]]],[11,R[415],E,E,108,[[["self"]],["u64"]]],[11,R[352],E,E,108,[[["self"]],[R[420]]]],[11,"new",E,R[282],95,[[["vec",[R[351]]],[R[476]],[R[351]],[R[279]],[R[24],["vec"]],[R[24],[R[279]]],["vec",["vec"]]],["self"]]],[11,R[324],E,"Creates an empty transaction list.",95,[[],["self"]]],[11,"verify",E,"Verifies the transaction list with the proofs, both…",95,[[["self"],[R[279]],[R[283]],[R[24],[R[279]]]],[R[0]]]],[11,R[12],E,E,95,[[["self"]],["bool"]]],[11,"len",E,E,95,[[["self"]],["usize"]]],[11,"as_signed_user_txn",E,E,99,[[["self"]],[[R[0],[R[394]]],[R[394]]]]],[11,R[414],E,E,99,[[["self"]],[R[58]]]],[0,"validator_change",R[268],E,N,N],[3,R[362],R[469],"A vector of LedgerInfo with contiguous increasing epoch…",N,N],[11,"new",E,E,109,[[["vec",[R[298]]],[R[298]]],["self"]]],[11,"epoch",E,"The first/lowest epoch of the proof to indicate which…",109,[[["self"]],[[R[0],["u64"]],["u64"]]]],[11,"verify",E,"Verify the proof is correctly chained with known epoch and…",109,[[["self"],["u64"],[R[296]]],[[R[298],[R[185]]],[R[0],[R[298]]]]]],[0,R[422],R[268],E,N,N],[3,R[423],R[470],"After executing a special transaction indicates a change…",N,N],[11,"new",E,E,110,[[[R[265]],[R[181]],[R[187]],["u64"]],["self"]]],[11,"new_with_random_network_keys",E,E,110,[[[R[265]],[R[181]],["u64"]],["self"]]],[11,R[354],E,"Returns the id of this validator (hash of the current…",110,[[["self"]],[R[265]]]],[11,R[424],E,"Returns the key for validating signed messages from this…",110,[[["self"]],[R[181]]]],[11,R[425],E,"Returns the voting power for this validator",110,[[["self"]],["u64"]]],[11,R[426],E,"Returns the key for validating signed messages at the…",110,[[["self"]],[R[181]]]],[11,R[427],E,"Returns the key that establishes a validator's identity in…",110,[[["self"]],[R[187]]]],[0,R[1876],R[268],E,N,N],[3,R[428],R[471],E,N,N],[5,"validator_set_module_name",E,E,N,[[],[R[271]]]],[5,"validator_set_struct_name",E,E,N,[[],[R[271]]]],[5,"validator_set_tag",E,E,N,[[],[R[272]]]],[11,"new",E,"Constructs a ValidatorSet resource.",111,[[["vec",[R[429]]],[R[429]]],["self"]]],[11,"payload",E,E,111,[[["self"]]]],[11,"change_event_key",E,E,111,[[],[R[284]]]],[11,R[430],E,E,111,[[],[R[0]]]],[0,"validator_signer",R[268],E,N,N],[3,R[431],R[433],"ValidatorSigner associates an author with public and…",N,N],[0,"proptests",E,E,N,N],[5,"arb_signing_key","libra_types::validator_signer::proptests",E,N,[[]]],[5,"signer_strategy",E,E,N,[[]]],[5,"rand_signer",E,E,N,[[]]],[5,"arb_signer",E,E,N,[[]]],[5,"mostly_in_keypair_pool",E,E,N,[[["vec"],["signingkey"],["uniform"],["clone"],[R[432]]]]],[11,"new",R[433],E,112,[[["privatekey"]],["self"]]],[11,R[178],E,"Constructs a signature for `message` using `private_key`.",112,[[["self"],[R[149]]],[[R[0],["error"]],["error"]]]],[11,"author",E,"Returns the author associated with this signer.",112,[[["self"]],[R[265]]]],[11,R[168],E,"Returns the public key associated with this signer.",112,[[["self"]]]],[11,R[432],E,"Generate the genesis block signer information.",112,[[],["self"]]],[11,"random",E,"Generate a random set of public and private keys and…",112,[[],["self"]]],[11,"from_int",E,"For test only - makes signer with nicely looking account…",112,[[["u8"]],["self"]]],[0,"validator_verifier",R[268],E,N,N],[3,R[434],R[436],"Helper struct to manage validator information for validation",N,N],[3,R[435],E,"Supports validation of signatures for known authors with…",N,N],[4,R[555],E,"Errors possible during signature verification.",N,N],[13,"UnknownAuthor",E,"The author for this signature is unknown by this validator.",113,N],[13,"TooLittleVotingPower",E,E,113,N],[12,R[438],R[437],E,113,N],[12,R[441],E,E,113,N],[13,"TooManySignatures",R[436],E,113,N],[12,"num_of_signatures",R[437],E,113,N],[12,"num_of_authors",E,E,113,N],[13,"InvalidSignature",R[436],"The signature does not match the hash.",113,N],[11,"new",E,E,114,[[[R[270]],["u64"]],["self"]]],[11,R[168],E,E,114,[[["self"]],[R[270]]]],[11,R[438],E,E,114,[[["self"]],["u64"]]],[11,"new",E,"Initialize with a map of account address to validator info…",115,[[[R[265]],[R[439]],[R[310],[R[265],R[439]]]],["self"]]],[11,"new_with_quorum_voting_power",E,"Initializes a validator verifier with a specified quorum…",115,[[[R[265]],[R[439]],[R[310],[R[265],R[439]]],["u64"]],[R[0]]]],[11,"new_single",E,"Helper method to initialize with a single author and…",115,[[[R[265]],[R[270]]],["self"]]],[11,R[440],E,"Verify the correctness of a signature of a hash by a known…",115,[[["self"],[R[265]],[R[149]]],[[R[0],[R[285]]],[R[285]]]]],[11,"verify_aggregated_signature",E,"This function will successfully return when at least…",115,[[["self"],[R[310]],[R[149]]],[[R[0],[R[285]]],[R[285]]]]],[11,"batch_verify_aggregated_signature",E,"This function will try batch signature verification and…",115,[[["self"],[R[310]],[R[149]]],[[R[0],[R[285]]],[R[285]]]]],[11,"check_voting_power",E,"Ensure there is at least quorum_voting_power in the…",115,[[["self"]],[[R[0],[R[285]]],[R[285]]]]],[11,R[1728],E,"Returns the public key for this address.",115,[[["self"],[R[265]]],[R[24]]]],[11,"get_voting_power",E,"Returns the voting power for this address.",115,[[["self"],[R[265]]],[[R[24],["u64"]],["u64"]]]],[11,"get_ordered_account_addresses",E,"Returns a ordered list of account addresses from smallest…",115,[[["self"]],[[R[265]],["vec",[R[265]]]]]],[11,"get_account_addresses_iter",E,"Returns an ordered list of account addresses as an…",115,[[["self"]]]],[11,"len",E,"Returns the number of authors to be validated.",115,[[["self"]],["usize"]]],[11,R[12],E,"Is there at least one author?",115,[[["self"]],["bool"]]],[11,R[441],E,"Returns quorum voting power.",115,[[["self"]],["u64"]]],[0,"vm_error",R[268],E,N,N],[3,"VMStatus",R[443],"A `VMStatus` is represented as a required major status…",N,N],[12,R[352],E,"The major status, e.g. ABORTED, OUT_OF_GAS, etc.",116,N],[12,R[442],E,"The optional sub status. Used e.g. for things such as the…",116,N],[12,"message",E,"The optional message. Useful for verification errors, and…",116,N],[4,R[556],E,"A status type is one of 5 different variants, along with a…",N,N],[13,"Validation",E,E,117,N],[13,"Verification",E,E,117,N],[13,"InvariantViolation",E,E,117,N],[13,"Deserialization",E,E,117,N],[13,"Execution",E,E,117,N],[13,"Unknown",E,E,117,N],[4,R[557],E,"We don't derive Arbitrary on this enum because it is too…",N,N],[13,"UNKNOWN_VALIDATION_STATUS",E,E,118,N],[13,"INVALID_SIGNATURE",E,E,118,N],[13,"INVALID_AUTH_KEY",E,E,118,N],[13,"SEQUENCE_NUMBER_TOO_OLD",E,E,118,N],[13,"SEQUENCE_NUMBER_TOO_NEW",E,E,118,N],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE",E,E,118,N],[13,"TRANSACTION_EXPIRED",E,E,118,N],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST",E,E,118,N],[13,"REJECTED_WRITE_SET",E,E,118,N],[13,"INVALID_WRITE_SET",E,E,118,N],[13,"EXCEEDED_MAX_TRANSACTION_SIZE",E,E,118,N],[13,"UNKNOWN_SCRIPT",E,E,118,N],[13,"UNKNOWN_MODULE",E,E,118,N],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND",E,E,118,N],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS",E,E,118,N],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND",E,E,118,N],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND",E,E,118,N],[13,"UNKNOWN_VERIFICATION_ERROR",E,E,118,N],[13,R[993],E,E,118,N],[13,"RANGE_OUT_OF_BOUNDS",E,E,118,N],[13,"INVALID_SIGNATURE_TOKEN",E,E,118,N],[13,"INVALID_FIELD_DEF",E,E,118,N],[13,"RECURSIVE_STRUCT_DEFINITION",E,E,118,N],[13,"INVALID_RESOURCE_FIELD",E,E,118,N],[13,"INVALID_FALL_THROUGH",E,E,118,N],[13,"JOIN_FAILURE",E,E,118,N],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK",E,E,118,N],[13,"UNBALANCED_STACK",E,E,118,N],[13,"INVALID_MAIN_FUNCTION_SIGNATURE",E,E,118,N],[13,"DUPLICATE_ELEMENT",E,E,118,N],[13,"INVALID_MODULE_HANDLE",E,E,118,N],[13,"UNIMPLEMENTED_HANDLE",E,E,118,N],[13,"INCONSISTENT_FIELDS",E,E,118,N],[13,"UNUSED_FIELD",E,E,118,N],[13,"LOOKUP_FAILED",E,E,118,N],[13,"VISIBILITY_MISMATCH",E,E,118,N],[13,"TYPE_RESOLUTION_FAILURE",E,E,118,N],[13,"TYPE_MISMATCH",E,E,118,N],[13,"MISSING_DEPENDENCY",E,E,118,N],[13,"POP_REFERENCE_ERROR",E,E,118,N],[13,"POP_RESOURCE_ERROR",E,E,118,N],[13,"RELEASEREF_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"BR_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"ABORT_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"STLOC_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR",E,E,118,N],[13,"RET_UNSAFE_TO_DESTROY_ERROR",E,E,118,N],[13,"RET_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR",E,E,118,N],[13,"FREEZEREF_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR",E,E,118,N],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"BORROWFIELD_BAD_FIELD_ERROR",E,E,118,N],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR",E,E,118,N],[13,"COPYLOC_UNAVAILABLE_ERROR",E,E,118,N],[13,"COPYLOC_RESOURCE_ERROR",E,E,118,N],[13,"COPYLOC_EXISTS_BORROW_ERROR",E,E,118,N],[13,"MOVELOC_UNAVAILABLE_ERROR",E,E,118,N],[13,"MOVELOC_EXISTS_BORROW_ERROR",E,E,118,N],[13,"BORROWLOC_REFERENCE_ERROR",E,E,118,N],[13,"BORROWLOC_UNAVAILABLE_ERROR",E,E,118,N],[13,"BORROWLOC_EXISTS_BORROW_ERROR",E,E,118,N],[13,"CALL_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR",E,E,118,N],[13,"PACK_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"UNPACK_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"READREF_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"READREF_RESOURCE_ERROR",E,E,118,N],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR",E,E,118,N],[13,"WRITEREF_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"WRITEREF_RESOURCE_ERROR",E,E,118,N],[13,"WRITEREF_EXISTS_BORROW_ERROR",E,E,118,N],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR",E,E,118,N],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"EXISTS_RESOURCE_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"BORROWGLOBAL_NO_RESOURCE_ERROR",E,E,118,N],[13,"MOVEFROM_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"MOVEFROM_NO_RESOURCE_ERROR",E,E,118,N],[13,"MOVETOSENDER_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"MOVETOSENDER_NO_RESOURCE_ERROR",E,E,118,N],[13,"CREATEACCOUNT_TYPE_MISMATCH_ERROR",E,E,118,N],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER",E,E,118,N],[13,"NO_MODULE_HANDLES",E,E,118,N],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END",E,E,118,N],[13,"MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR",E,E,118,N],[13,"EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR",E,E,118,N],[13,"DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR",E,E,118,N],[13,"INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR",E,E,118,N],[13,"GLOBAL_REFERENCE_ERROR",E,E,118,N],[13,"CONTRAINT_KIND_MISMATCH",E,E,118,N],[13,"NUMBER_OF_TYPE_ACTUALS_MISMATCH",E,E,118,N],[13,"LOOP_IN_INSTANTIATION_GRAPH",E,E,118,N],[13,"UNUSED_LOCALS_SIGNATURE",E,E,118,N],[13,"UNUSED_TYPE_SIGNATURE",E,E,118,N],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR",E,E,118,N],[13,"OUT_OF_BOUNDS_INDEX",E,E,118,N],[13,"OUT_OF_BOUNDS_RANGE",E,E,118,N],[13,"EMPTY_VALUE_STACK",E,E,118,N],[13,"EMPTY_CALL_STACK",E,E,118,N],[13,"PC_OVERFLOW",E,E,118,N],[13,"LINKER_ERROR",E,E,118,N],[13,"LOCAL_REFERENCE_ERROR",E,E,118,N],[13,"STORAGE_ERROR",E,E,118,N],[13,"INTERNAL_TYPE_ERROR",E,E,118,N],[13,"EVENT_KEY_MISMATCH",E,E,118,N],[13,"UNREACHABLE",E,E,118,N],[13,"VM_STARTUP_FAILURE",E,E,118,N],[13,"UNKNOWN_BINARY_ERROR",E,E,118,N],[13,"MALFORMED",E,E,118,N],[13,"BAD_MAGIC",E,E,118,N],[13,"UNKNOWN_VERSION",E,E,118,N],[13,"UNKNOWN_TABLE_TYPE",E,E,118,N],[13,"UNKNOWN_SIGNATURE_TYPE",E,E,118,N],[13,"UNKNOWN_SERIALIZED_TYPE",E,E,118,N],[13,"UNKNOWN_OPCODE",E,E,118,N],[13,"BAD_HEADER_TABLE",E,E,118,N],[13,"UNEXPECTED_SIGNATURE_TYPE",E,E,118,N],[13,"DUPLICATE_TABLE",E,E,118,N],[13,"VERIFIER_INVARIANT_VIOLATION",E,E,118,N],[13,"UNKNOWN_RUNTIME_STATUS",E,E,118,N],[13,"EXECUTED",E,E,118,N],[13,"OUT_OF_GAS",E,E,118,N],[13,"RESOURCE_DOES_NOT_EXIST",E,E,118,N],[13,"RESOURCE_ALREADY_EXISTS",E,E,118,N],[13,"EVICTED_ACCOUNT_ACCESS",E,E,118,N],[13,"ACCOUNT_ADDRESS_ALREADY_EXISTS",E,E,118,N],[13,"TYPE_ERROR",E,E,118,N],[13,"MISSING_DATA",E,E,118,N],[13,"DATA_FORMAT_ERROR",E,E,118,N],[13,"INVALID_DATA",E,E,118,N],[13,"REMOTE_DATA_ERROR",E,E,118,N],[13,"CANNOT_WRITE_EXISTING_RESOURCE",E,E,118,N],[13,"VALUE_SERIALIZATION_ERROR",E,E,118,N],[13,"VALUE_DESERIALIZATION_ERROR",E,E,118,N],[13,"DUPLICATE_MODULE_NAME",E,E,118,N],[13,"ABORTED",E,E,118,N],[13,"ARITHMETIC_ERROR",E,E,118,N],[13,"DYNAMIC_REFERENCE_ERROR",E,E,118,N],[13,"CODE_DESERIALIZATION_ERROR",E,E,118,N],[13,"EXECUTION_STACK_OVERFLOW",E,E,118,N],[13,"CALL_STACK_OVERFLOW",E,E,118,N],[13,"NATIVE_FUNCTION_ERROR",E,E,118,N],[13,"GAS_SCHEDULE_ERROR",E,E,118,N],[13,"UNKNOWN_STATUS",E,E,118,N],[0,R[442],E,E,N,N],[17,"AEU_UNKNOWN_ARITHMETIC_ERROR","libra_types::vm_error::sub_status",E,N,N],[17,"AEU_UNDERFLOW",E,E,N,N],[17,"AEO_OVERFLOW",E,E,N,N],[17,"AED_DIVISION_BY_ZERO",E,E,N,N],[17,"VSF_GAS_SCHEDULE_NOT_FOUND",E,E,N,N],[17,"DRE_UNKNOWN_DYNAMIC_REFERENCE_ERROR",E,E,N,N],[17,"DRE_MOVE_OF_BORROWED_RESOURCE",E,E,N,N],[17,"DRE_GLOBAL_REF_ALREADY_RELEASED",E,E,N,N],[17,"DRE_MISSING_RELEASEREF",E,E,N,N],[17,"DRE_GLOBAL_ALREADY_BORROWED",E,E,N,N],[17,"NFE_VECTOR_ERROR_BASE",E,E,N,N],[17,"GSE_UNABLE_TO_LOAD_MODULE",E,E,N,N],[17,"GSE_UNABLE_TO_LOAD_RESOURCE",E,E,N,N],[17,"GSE_UNABLE_TO_DESERIALIZE",E,E,N,N],[7,"VALIDATION_STATUS_MIN_CODE",R[443],"The minimum status code for validation statuses",N,N],[7,"VALIDATION_STATUS_MAX_CODE",E,"The maximum status code for validation statuses",N,N],[7,"VERIFICATION_STATUS_MIN_CODE",E,"The minimum status code for verification statuses",N,N],[7,"VERIFICATION_STATUS_MAX_CODE",E,"The maximum status code for verification statuses",N,N],[7,"INVARIANT_VIOLATION_STATUS_MIN_CODE",E,"The minimum status code for invariant violation statuses",N,N],[7,"INVARIANT_VIOLATION_STATUS_MAX_CODE",E,"The maximum status code for invariant violation statuses",N,N],[7,"DESERIALIZATION_STATUS_MIN_CODE",E,"The minimum status code for deserialization statuses",N,N],[7,"DESERIALIZATION_STATUS_MAX_CODE",E,"The maximum status code for deserialization statuses",N,N],[7,"EXECUTION_STATUS_MIN_CODE",E,"The minimum status code for runtime statuses",N,N],[7,"EXECUTION_STATUS_MAX_CODE",E,"The maximum status code for runtim statuses",N,N],[11,"new",E,"Create a new VM status with major status `major_status`.",116,[[[R[420]]],["self"]]],[11,"with_sub_status",E,"Adds a sub status to the VM status.",116,[[["u64"]],["self"]]],[11,"with_message",E,"Adds a message to the VM status.",116,[[[R[58]]],["self"]]],[11,"set_sub_status",E,"Mutates the VMStatus sub status field to be the new…",116,[[["self"],["u64"]]]],[11,"set_message",E,"Mutates the VMStatus message field to be the new `message`…",116,[[["self"],[R[58]]]]],[11,"append_message_with_separator",E,"Append the message `message` to the message field of the…",116,[[[R[58]],["char"]],["self"]]],[11,"status_type",E,"Return the status type for this VMStatus. This is solely…",116,[[["self"]],[R[444]]]],[11,"is",E,"Determine if the VMStatus has status type `status_type`.",116,[[["self"],[R[444]]],["bool"]]],[11,"append",E,"Append two VMStatuses together. The major status is kept…",116,[[],["self"]]],[0,R[445],R[268],"For each transaction the VM executes, the VM will output a…",N,N],[3,R[446],R[472],"`WriteSet` contains all access paths that one transaction…",N,N],[3,R[558],E,"A mutable version of `WriteSet`.",N,N],[4,"WriteOp",E,E,N,N],[13,"Deletion",E,E,119,N],[13,"Value",E,E,119,N],[11,"is_deletion",E,E,119,[[["self"]],["bool"]]],[11,"len",E,E,120,[[["self"]],["usize"]]],[11,R[12],E,E,120,[[["self"]],["bool"]]],[11,"iter",E,E,120,[[["self"]],["iter"]]],[11,"into_mut",E,E,120,[[],[R[480]]]],[11,"new",E,E,121,[[["vec"]],["self"]]],[11,"push",E,E,121,[[["self"]]]],[11,"len",E,E,121,[[["self"]],["usize"]]],[11,R[12],E,E,121,[[["self"]],["bool"]]],[11,"freeze",E,E,121,[[],[[R[411]],[R[0],[R[411]]]]]],[11,R[13],R[447],E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[57],E,E,2,[[["self"]],[R[58]]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[169],E,E,2,[[["self"]],[R[149]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,R[169],E,E,3,[[["self"]],[R[149]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[2],E,E,122,[[[U]],[R[0]]]],[11,R[3],E,E,122,[[],[R[0]]]],[11,R[4],E,E,122,[[["self"]],[T]]],[11,R[5],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[R[7]]]],[11,"vzip",E,E,122,[[],["v"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,R[169],E,E,0,[[["self"]],[R[149]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],R[448],E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[58]]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[451],E,E,4,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[452],E,E,4,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,R[169],E,E,4,[[["self"]],[R[149]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[453],E,R[454],4,[[["self"]],[["vec",["u5"]],["u5"]]]],[11,R[455],E,E,4,[[],[["vec",["u5"]],[R[0],["vec"]]]]],[11,"into",R[449],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[172],E,E,5,[[]]],[11,R[169],E,E,5,[[["self"]],[R[149]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[2],E,E,123,[[[U]],[R[0]]]],[11,R[3],E,E,123,[[],[R[0]]]],[11,R[4],E,E,123,[[["self"]],[T]]],[11,R[5],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[R[7]]]],[11,"vzip",E,E,123,[[],["v"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[2],E,E,124,[[[U]],[R[0]]]],[11,R[3],E,E,124,[[],[R[0]]]],[11,R[4],E,E,124,[[["self"]],[T]]],[11,R[5],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[R[7]]]],[11,"vzip",E,E,124,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[172],E,E,6,[[]]],[11,R[169],E,E,6,[[["self"]],[R[149]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],R[450],E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[["self"],[T]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[2],E,E,125,[[[U]],[R[0]]]],[11,R[3],E,E,125,[[],[R[0]]]],[11,R[4],E,E,125,[[["self"]],[T]]],[11,R[5],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[R[7]]]],[11,R[451],E,E,125,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[452],E,E,125,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[169],E,E,125,[[["self"]],[R[149]]]],[11,"vzip",E,E,125,[[],["v"]]],[11,R[453],E,R[454],125,[[["self"]],[["vec",["u5"]],["u5"]]]],[11,R[455],E,E,125,[[],[["vec",["u5"]],[R[0],["vec"]]]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],R[456],E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,R[169],E,E,8,[[["self"]],[R[149]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],R[457],E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,R[169],E,E,9,[[["self"]],[R[149]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],R[458],E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[172],E,E,10,[[]]],[11,R[169],E,E,10,[[["self"]],[R[149]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],R[330],E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,R[169],E,E,12,[[["self"]],[R[149]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],R[459],E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,R[169],E,E,13,[[["self"]],[R[149]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],R[328],E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[172],E,E,14,[[]]],[11,R[169],E,E,14,[[["self"]],[R[149]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[172],E,E,15,[[]]],[11,R[169],E,E,15,[[["self"]],[R[149]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],R[287],E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],R[460],E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[57],E,E,20,[[["self"]],[R[58]]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,R[169],E,E,20,[[["self"]],[R[149]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"],[T]]]],[11,R[57],E,E,21,[[["self"]],[R[58]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,R[13],R[461],E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,R[169],E,E,22,[[["self"]],[R[149]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,R[169],E,E,24,[[["self"]],[R[149]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,R[169],E,E,25,[[["self"]],[R[149]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,R[169],E,E,23,[[["self"]],[R[149]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],R[462],E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[57],E,E,26,[[["self"]],[R[58]]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,R[169],E,E,26,[[["self"]],[R[149]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[57],E,E,27,[[["self"]],[R[58]]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,R[169],E,E,27,[[["self"]],[R[149]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",R[313],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[2],E,E,42,[[[U]],[R[0]]]],[11,R[3],E,E,42,[[],[R[0]]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[R[7]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[2],E,E,43,[[[U]],[R[0]]]],[11,R[3],E,E,43,[[],[R[0]]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[R[7]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",R[463],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[172],E,E,28,[[]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[13],R[464],E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[2],E,E,36,[[[U]],[R[0]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[R[7]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[2],E,E,37,[[[U]],[R[0]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[R[7]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,R[13],R[465],E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[57],E,E,39,[[["self"]],[R[58]]]],[11,R[2],E,E,39,[[[U]],[R[0]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[R[7]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,126,[[],[U]]],[11,R[246],E,E,126,[[],["i"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[2],E,E,126,[[[U]],[R[0]]]],[11,R[3],E,E,126,[[],[R[0]]]],[11,R[4],E,E,126,[[["self"]],[T]]],[11,R[5],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[R[7]]]],[11,"vzip",E,E,126,[[],["v"]]],[11,"into",E,E,127,[[],[U]]],[11,R[246],E,E,127,[[],["i"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[2],E,E,127,[[[U]],[R[0]]]],[11,R[3],E,E,127,[[],[R[0]]]],[11,R[4],E,E,127,[[["self"]],[T]]],[11,R[5],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[R[7]]]],[11,"vzip",E,E,127,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,R[246],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[2],E,E,40,[[[U]],[R[0]]]],[11,R[3],E,E,40,[[],[R[0]]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[R[7]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",E,E,41,[[],[U]]],[11,R[246],E,E,41,[[],["i"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[2],E,E,41,[[[U]],[R[0]]]],[11,R[3],E,E,41,[[],[R[0]]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[R[7]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[2],E,E,38,[[[U]],[R[0]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[R[7]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",R[331],E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[2],E,E,128,[[[U]],[R[0]]]],[11,R[3],E,E,128,[[],[R[0]]]],[11,R[4],E,E,128,[[["self"]],[T]]],[11,R[5],E,E,128,[[["self"]],[T]]],[11,R[6],E,E,128,[[["self"]],[R[7]]]],[11,"vzip",E,E,128,[[],["v"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[2],E,E,44,[[[U]],[R[0]]]],[11,R[3],E,E,44,[[],[R[0]]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[R[7]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[2],E,E,45,[[[U]],[R[0]]]],[11,R[3],E,E,45,[[],[R[0]]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[R[7]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[2],E,E,46,[[[U]],[R[0]]]],[11,R[3],E,E,46,[[],[R[0]]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[R[7]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[2],E,E,47,[[[U]],[R[0]]]],[11,R[3],E,E,47,[[],[R[0]]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[R[7]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[13],R[383],E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[2],E,E,48,[[[U]],[R[0]]]],[11,R[3],E,E,48,[[],[R[0]]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[R[7]]]],[11,"clear",E,E,48,[[["self"]]]],[11,R[172],E,E,48,[[]]],[11,"vzip",E,E,48,[[],["v"]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[2],E,E,49,[[[U]],[R[0]]]],[11,R[3],E,E,49,[[],[R[0]]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[R[7]]]],[11,"clear",E,E,49,[[["self"]]]],[11,R[172],E,E,49,[[]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[2],E,E,50,[[[U]],[R[0]]]],[11,R[3],E,E,50,[[],[R[0]]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[R[7]]]],[11,"clear",E,E,50,[[["self"]]]],[11,R[172],E,E,50,[[]]],[11,"vzip",E,E,50,[[],["v"]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[2],E,E,51,[[[U]],[R[0]]]],[11,R[3],E,E,51,[[],[R[0]]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[R[7]]]],[11,"clear",E,E,51,[[["self"]]]],[11,R[172],E,E,51,[[]]],[11,"vzip",E,E,51,[[],["v"]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[2],E,E,52,[[[U]],[R[0]]]],[11,R[3],E,E,52,[[],[R[0]]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[R[7]]]],[11,"clear",E,E,52,[[["self"]]]],[11,R[172],E,E,52,[[]]],[11,"vzip",E,E,52,[[],["v"]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[2],E,E,53,[[[U]],[R[0]]]],[11,R[3],E,E,53,[[],[R[0]]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[R[7]]]],[11,"clear",E,E,53,[[["self"]]]],[11,R[172],E,E,53,[[]]],[11,"vzip",E,E,53,[[],["v"]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[2],E,E,54,[[[U]],[R[0]]]],[11,R[3],E,E,54,[[],[R[0]]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[R[7]]]],[11,"clear",E,E,54,[[["self"]]]],[11,R[172],E,E,54,[[]]],[11,"vzip",E,E,54,[[],["v"]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[2],E,E,55,[[[U]],[R[0]]]],[11,R[3],E,E,55,[[],[R[0]]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[R[7]]]],[11,"clear",E,E,55,[[["self"]]]],[11,R[172],E,E,55,[[]]],[11,"vzip",E,E,55,[[],["v"]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[2],E,E,56,[[[U]],[R[0]]]],[11,R[3],E,E,56,[[],[R[0]]]],[11,R[4],E,E,56,[[["self"]],[T]]],[11,R[5],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[R[7]]]],[11,"clear",E,E,56,[[["self"]]]],[11,R[172],E,E,56,[[]]],[11,"vzip",E,E,56,[[],["v"]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[2],E,E,57,[[[U]],[R[0]]]],[11,R[3],E,E,57,[[],[R[0]]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[R[7]]]],[11,"clear",E,E,57,[[["self"]]]],[11,R[172],E,E,57,[[]]],[11,"vzip",E,E,57,[[],["v"]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[2],E,E,58,[[[U]],[R[0]]]],[11,R[3],E,E,58,[[],[R[0]]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[R[7]]]],[11,"clear",E,E,58,[[["self"]]]],[11,R[172],E,E,58,[[]]],[11,"vzip",E,E,58,[[],["v"]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[2],E,E,59,[[[U]],[R[0]]]],[11,R[3],E,E,59,[[],[R[0]]]],[11,R[4],E,E,59,[[["self"]],[T]]],[11,R[5],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[R[7]]]],[11,"clear",E,E,59,[[["self"]]]],[11,R[172],E,E,59,[[]]],[11,"vzip",E,E,59,[[],["v"]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[2],E,E,60,[[[U]],[R[0]]]],[11,R[3],E,E,60,[[],[R[0]]]],[11,R[4],E,E,60,[[["self"]],[T]]],[11,R[5],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[R[7]]]],[11,"clear",E,E,60,[[["self"]]]],[11,R[172],E,E,60,[[]]],[11,"vzip",E,E,60,[[],["v"]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[2],E,E,61,[[[U]],[R[0]]]],[11,R[3],E,E,61,[[],[R[0]]]],[11,R[4],E,E,61,[[["self"]],[T]]],[11,R[5],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[R[7]]]],[11,"clear",E,E,61,[[["self"]]]],[11,R[172],E,E,61,[[]]],[11,"vzip",E,E,61,[[],["v"]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"],[T]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[2],E,E,62,[[[U]],[R[0]]]],[11,R[3],E,E,62,[[],[R[0]]]],[11,R[4],E,E,62,[[["self"]],[T]]],[11,R[5],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[R[7]]]],[11,"clear",E,E,62,[[["self"]]]],[11,R[172],E,E,62,[[]]],[11,"vzip",E,E,62,[[],["v"]]],[11,R[13],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[["self"],[T]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[2],E,E,129,[[[U]],[R[0]]]],[11,R[3],E,E,129,[[],[R[0]]]],[11,R[4],E,E,129,[[["self"]],[T]]],[11,R[5],E,E,129,[[["self"]],[T]]],[11,R[6],E,E,129,[[["self"]],[R[7]]]],[11,"clear",E,E,129,[[["self"]]]],[11,R[172],E,E,129,[[]]],[11,"vzip",E,E,129,[[],["v"]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[["self"],[T]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[2],E,E,63,[[[U]],[R[0]]]],[11,R[3],E,E,63,[[],[R[0]]]],[11,R[4],E,E,63,[[["self"]],[T]]],[11,R[5],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[R[7]]]],[11,"clear",E,E,63,[[["self"]]]],[11,R[172],E,E,63,[[]]],[11,"vzip",E,E,63,[[],["v"]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"],[T]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[2],E,E,64,[[[U]],[R[0]]]],[11,R[3],E,E,64,[[],[R[0]]]],[11,R[4],E,E,64,[[["self"]],[T]]],[11,R[5],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[R[7]]]],[11,"clear",E,E,64,[[["self"]]]],[11,R[172],E,E,64,[[]]],[11,"vzip",E,E,64,[[],["v"]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"],[T]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[2],E,E,65,[[[U]],[R[0]]]],[11,R[3],E,E,65,[[],[R[0]]]],[11,R[4],E,E,65,[[["self"]],[T]]],[11,R[5],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[R[7]]]],[11,"clear",E,E,65,[[["self"]]]],[11,R[172],E,E,65,[[]]],[11,"vzip",E,E,65,[[],["v"]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"],[T]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[2],E,E,66,[[[U]],[R[0]]]],[11,R[3],E,E,66,[[],[R[0]]]],[11,R[4],E,E,66,[[["self"]],[T]]],[11,R[5],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[R[7]]]],[11,"clear",E,E,66,[[["self"]]]],[11,R[172],E,E,66,[[]]],[11,"vzip",E,E,66,[[],["v"]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[["self"],[T]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[2],E,E,67,[[[U]],[R[0]]]],[11,R[3],E,E,67,[[],[R[0]]]],[11,R[4],E,E,67,[[["self"]],[T]]],[11,R[5],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[R[7]]]],[11,"clear",E,E,67,[[["self"]]]],[11,R[172],E,E,67,[[]]],[11,"vzip",E,E,67,[[],["v"]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"],[T]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[2],E,E,68,[[[U]],[R[0]]]],[11,R[3],E,E,68,[[],[R[0]]]],[11,R[4],E,E,68,[[["self"]],[T]]],[11,R[5],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[R[7]]]],[11,"clear",E,E,68,[[["self"]]]],[11,R[172],E,E,68,[[]]],[11,"vzip",E,E,68,[[],["v"]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"],[T]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[2],E,E,69,[[[U]],[R[0]]]],[11,R[3],E,E,69,[[],[R[0]]]],[11,R[4],E,E,69,[[["self"]],[T]]],[11,R[5],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[R[7]]]],[11,"clear",E,E,69,[[["self"]]]],[11,R[172],E,E,69,[[]]],[11,"vzip",E,E,69,[[],["v"]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"],[T]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[2],E,E,70,[[[U]],[R[0]]]],[11,R[3],E,E,70,[[],[R[0]]]],[11,R[4],E,E,70,[[["self"]],[T]]],[11,R[5],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[R[7]]]],[11,"clear",E,E,70,[[["self"]]]],[11,R[172],E,E,70,[[]]],[11,"vzip",E,E,70,[[],["v"]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"],[T]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[2],E,E,71,[[[U]],[R[0]]]],[11,R[3],E,E,71,[[],[R[0]]]],[11,R[4],E,E,71,[[["self"]],[T]]],[11,R[5],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[R[7]]]],[11,"clear",E,E,71,[[["self"]]]],[11,R[172],E,E,71,[[]]],[11,"vzip",E,E,71,[[],["v"]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"],[T]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[2],E,E,72,[[[U]],[R[0]]]],[11,R[3],E,E,72,[[],[R[0]]]],[11,R[4],E,E,72,[[["self"]],[T]]],[11,R[5],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[R[7]]]],[11,"clear",E,E,72,[[["self"]]]],[11,R[172],E,E,72,[[]]],[11,"vzip",E,E,72,[[],["v"]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[["self"],[T]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[2],E,E,73,[[[U]],[R[0]]]],[11,R[3],E,E,73,[[],[R[0]]]],[11,R[4],E,E,73,[[["self"]],[T]]],[11,R[5],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[R[7]]]],[11,"clear",E,E,73,[[["self"]]]],[11,R[172],E,E,73,[[]]],[11,"vzip",E,E,73,[[],["v"]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[["self"],[T]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[2],E,E,74,[[[U]],[R[0]]]],[11,R[3],E,E,74,[[],[R[0]]]],[11,R[4],E,E,74,[[["self"]],[T]]],[11,R[5],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[R[7]]]],[11,"clear",E,E,74,[[["self"]]]],[11,R[172],E,E,74,[[]]],[11,"vzip",E,E,74,[[],["v"]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[["self"],[T]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[2],E,E,75,[[[U]],[R[0]]]],[11,R[3],E,E,75,[[],[R[0]]]],[11,R[4],E,E,75,[[["self"]],[T]]],[11,R[5],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[R[7]]]],[11,"clear",E,E,75,[[["self"]]]],[11,R[172],E,E,75,[[]]],[11,"vzip",E,E,75,[[],["v"]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[["self"],[T]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[2],E,E,76,[[[U]],[R[0]]]],[11,R[3],E,E,76,[[],[R[0]]]],[11,R[4],E,E,76,[[["self"]],[T]]],[11,R[5],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[R[7]]]],[11,"clear",E,E,76,[[["self"]]]],[11,R[172],E,E,76,[[]]],[11,"vzip",E,E,76,[[],["v"]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[["self"],[T]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[2],E,E,77,[[[U]],[R[0]]]],[11,R[3],E,E,77,[[],[R[0]]]],[11,R[4],E,E,77,[[["self"]],[T]]],[11,R[5],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[R[7]]]],[11,"clear",E,E,77,[[["self"]]]],[11,R[172],E,E,77,[[]]],[11,"vzip",E,E,77,[[],["v"]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[["self"],[T]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[2],E,E,78,[[[U]],[R[0]]]],[11,R[3],E,E,78,[[],[R[0]]]],[11,R[4],E,E,78,[[["self"]],[T]]],[11,R[5],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[R[7]]]],[11,"clear",E,E,78,[[["self"]]]],[11,R[172],E,E,78,[[]]],[11,"vzip",E,E,78,[[],["v"]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[["self"],[T]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[2],E,E,79,[[[U]],[R[0]]]],[11,R[3],E,E,79,[[],[R[0]]]],[11,R[4],E,E,79,[[["self"]],[T]]],[11,R[5],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[R[7]]]],[11,"clear",E,E,79,[[["self"]]]],[11,R[172],E,E,79,[[]]],[11,"vzip",E,E,79,[[],["v"]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[["self"],[T]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[2],E,E,80,[[[U]],[R[0]]]],[11,R[3],E,E,80,[[],[R[0]]]],[11,R[4],E,E,80,[[["self"]],[T]]],[11,R[5],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[R[7]]]],[11,"clear",E,E,80,[[["self"]]]],[11,R[172],E,E,80,[[]]],[11,"vzip",E,E,80,[[],["v"]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[["self"],[T]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[2],E,E,81,[[[U]],[R[0]]]],[11,R[3],E,E,81,[[],[R[0]]]],[11,R[4],E,E,81,[[["self"]],[T]]],[11,R[5],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[R[7]]]],[11,"clear",E,E,81,[[["self"]]]],[11,R[172],E,E,81,[[]]],[11,"vzip",E,E,81,[[],["v"]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[["self"],[T]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[2],E,E,82,[[[U]],[R[0]]]],[11,R[3],E,E,82,[[],[R[0]]]],[11,R[4],E,E,82,[[["self"]],[T]]],[11,R[5],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[R[7]]]],[11,"clear",E,E,82,[[["self"]]]],[11,R[172],E,E,82,[[]]],[11,"vzip",E,E,82,[[],["v"]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[["self"],[T]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[2],E,E,83,[[[U]],[R[0]]]],[11,R[3],E,E,83,[[],[R[0]]]],[11,R[4],E,E,83,[[["self"]],[T]]],[11,R[5],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[R[7]]]],[11,"clear",E,E,83,[[["self"]]]],[11,R[172],E,E,83,[[]]],[11,"vzip",E,E,83,[[],["v"]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[["self"],[T]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[2],E,E,84,[[[U]],[R[0]]]],[11,R[3],E,E,84,[[],[R[0]]]],[11,R[4],E,E,84,[[["self"]],[T]]],[11,R[5],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[R[7]]]],[11,"clear",E,E,84,[[["self"]]]],[11,R[172],E,E,84,[[]]],[11,"vzip",E,E,84,[[],["v"]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[["self"],[T]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[2],E,E,85,[[[U]],[R[0]]]],[11,R[3],E,E,85,[[],[R[0]]]],[11,R[4],E,E,85,[[["self"]],[T]]],[11,R[5],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[R[7]]]],[11,"clear",E,E,85,[[["self"]]]],[11,R[172],E,E,85,[[]]],[11,"vzip",E,E,85,[[],["v"]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[["self"],[T]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[2],E,E,86,[[[U]],[R[0]]]],[11,R[3],E,E,86,[[],[R[0]]]],[11,R[4],E,E,86,[[["self"]],[T]]],[11,R[5],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[R[7]]]],[11,"clear",E,E,86,[[["self"]]]],[11,R[172],E,E,86,[[]]],[11,"vzip",E,E,86,[[],["v"]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[["self"],[T]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[2],E,E,87,[[[U]],[R[0]]]],[11,R[3],E,E,87,[[],[R[0]]]],[11,R[4],E,E,87,[[["self"]],[T]]],[11,R[5],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[R[7]]]],[11,"clear",E,E,87,[[["self"]]]],[11,R[172],E,E,87,[[]]],[11,"vzip",E,E,87,[[],["v"]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[["self"],[T]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[2],E,E,88,[[[U]],[R[0]]]],[11,R[3],E,E,88,[[],[R[0]]]],[11,R[4],E,E,88,[[["self"]],[T]]],[11,R[5],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[R[7]]]],[11,"clear",E,E,88,[[["self"]]]],[11,R[172],E,E,88,[[]]],[11,"vzip",E,E,88,[[],["v"]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[["self"],[T]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[2],E,E,89,[[[U]],[R[0]]]],[11,R[3],E,E,89,[[],[R[0]]]],[11,R[4],E,E,89,[[["self"]],[T]]],[11,R[5],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[R[7]]]],[11,"clear",E,E,89,[[["self"]]]],[11,R[172],E,E,89,[[]]],[11,"vzip",E,E,89,[[],["v"]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[["self"],[T]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[2],E,E,90,[[[U]],[R[0]]]],[11,R[3],E,E,90,[[],[R[0]]]],[11,R[4],E,E,90,[[["self"]],[T]]],[11,R[5],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[R[7]]]],[11,"clear",E,E,90,[[["self"]]]],[11,R[172],E,E,90,[[]]],[11,"vzip",E,E,90,[[],["v"]]],[11,R[13],R[466],E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[["self"],[T]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[2],E,E,91,[[[U]],[R[0]]]],[11,R[3],E,E,91,[[],[R[0]]]],[11,R[4],E,E,91,[[["self"]],[T]]],[11,R[5],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[R[7]]]],[11,"clear",E,E,91,[[["self"]]]],[11,R[172],E,E,91,[[]]],[11,"vzip",E,E,91,[[],["v"]]],[11,R[13],R[467],E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[["self"],[T]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[2],E,E,92,[[[U]],[R[0]]]],[11,R[3],E,E,92,[[],[R[0]]]],[11,R[4],E,E,92,[[["self"]],[T]]],[11,R[5],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[R[7]]]],[11,"vzip",E,E,92,[[],["v"]]],[11,R[13],R[468],E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[["self"],[T]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[2],E,E,93,[[[U]],[R[0]]]],[11,R[3],E,E,93,[[],[R[0]]]],[11,R[4],E,E,93,[[["self"]],[T]]],[11,R[5],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[R[7]]]],[11,"vzip",E,E,93,[[],["v"]]],[11,R[13],R[409],E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[["self"],[T]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[2],E,E,101,[[[U]],[R[0]]]],[11,R[3],E,E,101,[[],[R[0]]]],[11,R[4],E,E,101,[[["self"]],[T]]],[11,R[5],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[R[7]]]],[11,R[169],E,E,101,[[["self"]],[R[149]]]],[11,"vzip",E,E,101,[[],["v"]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[["self"],[T]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[2],E,E,102,[[[U]],[R[0]]]],[11,R[3],E,E,102,[[],[R[0]]]],[11,R[4],E,E,102,[[["self"]],[T]]],[11,R[5],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[R[7]]]],[11,R[169],E,E,102,[[["self"]],[R[149]]]],[11,"vzip",E,E,102,[[],["v"]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[["self"],[T]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[2],E,E,103,[[[U]],[R[0]]]],[11,R[3],E,E,103,[[],[R[0]]]],[11,R[4],E,E,103,[[["self"]],[T]]],[11,R[5],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[R[7]]]],[11,R[169],E,E,103,[[["self"]],[R[149]]]],[11,"vzip",E,E,103,[[],["v"]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[["self"],[T]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[2],E,E,105,[[[U]],[R[0]]]],[11,R[3],E,E,105,[[],[R[0]]]],[11,R[4],E,E,105,[[["self"]],[T]]],[11,R[5],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[R[7]]]],[11,R[169],E,E,105,[[["self"]],[R[149]]]],[11,"vzip",E,E,105,[[],["v"]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[["self"],[T]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[2],E,E,104,[[[U]],[R[0]]]],[11,R[3],E,E,104,[[],[R[0]]]],[11,R[4],E,E,104,[[["self"]],[T]]],[11,R[5],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[R[7]]]],[11,"vzip",E,E,104,[[],["v"]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[["self"],[T]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[2],E,E,94,[[[U]],[R[0]]]],[11,R[3],E,E,94,[[],[R[0]]]],[11,R[4],E,E,94,[[["self"]],[T]]],[11,R[5],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[R[7]]]],[11,"vzip",E,E,94,[[],["v"]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[["self"],[T]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[2],E,E,106,[[[U]],[R[0]]]],[11,R[3],E,E,106,[[],[R[0]]]],[11,R[4],E,E,106,[[["self"]],[T]]],[11,R[5],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[R[7]]]],[11,"vzip",E,E,106,[[],["v"]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[["self"],[T]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[2],E,E,107,[[[U]],[R[0]]]],[11,R[3],E,E,107,[[],[R[0]]]],[11,R[4],E,E,107,[[["self"]],[T]]],[11,R[5],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[R[7]]]],[11,R[169],E,E,107,[[["self"]],[R[149]]]],[11,"vzip",E,E,107,[[],["v"]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[["self"],[T]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[2],E,E,108,[[[U]],[R[0]]]],[11,R[3],E,E,108,[[],[R[0]]]],[11,R[4],E,E,108,[[["self"]],[T]]],[11,R[5],E,E,108,[[["self"]],[T]]],[11,R[6],E,E,108,[[["self"]],[R[7]]]],[11,"vzip",E,E,108,[[],["v"]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[["self"],[T]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[2],E,E,95,[[[U]],[R[0]]]],[11,R[3],E,E,95,[[],[R[0]]]],[11,R[4],E,E,95,[[["self"]],[T]]],[11,R[5],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[R[7]]]],[11,"vzip",E,E,95,[[],["v"]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[["self"],[T]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[2],E,E,96,[[[U]],[R[0]]]],[11,R[3],E,E,96,[[],[R[0]]]],[11,R[4],E,E,96,[[["self"]],[T]]],[11,R[5],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[R[7]]]],[11,R[169],E,E,96,[[["self"]],[R[149]]]],[11,"vzip",E,E,96,[[],["v"]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[["self"],[T]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[2],E,E,97,[[[U]],[R[0]]]],[11,R[3],E,E,97,[[],[R[0]]]],[11,R[4],E,E,97,[[["self"]],[T]]],[11,R[5],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[R[7]]]],[11,R[169],E,E,97,[[["self"]],[R[149]]]],[11,"vzip",E,E,97,[[],["v"]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[["self"],[T]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[2],E,E,98,[[[U]],[R[0]]]],[11,R[3],E,E,98,[[],[R[0]]]],[11,R[4],E,E,98,[[["self"]],[T]]],[11,R[5],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[R[7]]]],[11,"vzip",E,E,98,[[],["v"]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[["self"],[T]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[2],E,E,99,[[[U]],[R[0]]]],[11,R[3],E,E,99,[[],[R[0]]]],[11,R[4],E,E,99,[[["self"]],[T]]],[11,R[5],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[R[7]]]],[11,R[169],E,E,99,[[["self"]],[R[149]]]],[11,"vzip",E,E,99,[[],["v"]]],[11,R[13],R[469],E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[["self"],[T]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[2],E,E,109,[[[U]],[R[0]]]],[11,R[3],E,E,109,[[],[R[0]]]],[11,R[4],E,E,109,[[["self"]],[T]]],[11,R[5],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[R[7]]]],[11,"vzip",E,E,109,[[],["v"]]],[11,R[13],R[470],E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[["self"],[T]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[57],E,E,110,[[["self"]],[R[58]]]],[11,R[2],E,E,110,[[[U]],[R[0]]]],[11,R[3],E,E,110,[[],[R[0]]]],[11,R[4],E,E,110,[[["self"]],[T]]],[11,R[5],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[R[7]]]],[11,R[169],E,E,110,[[["self"]],[R[149]]]],[11,"vzip",E,E,110,[[],["v"]]],[11,R[13],R[471],E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[["self"],[T]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[57],E,E,111,[[["self"]],[R[58]]]],[11,R[2],E,E,111,[[[U]],[R[0]]]],[11,R[3],E,E,111,[[],[R[0]]]],[11,R[4],E,E,111,[[["self"]],[T]]],[11,R[5],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[R[7]]]],[11,R[169],E,E,111,[[["self"]],[R[149]]]],[11,"vzip",E,E,111,[[],["v"]]],[11,R[13],R[433],E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[["self"],[T]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[2],E,E,112,[[[U]],[R[0]]]],[11,R[3],E,E,112,[[],[R[0]]]],[11,R[4],E,E,112,[[["self"]],[T]]],[11,R[5],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[R[7]]]],[11,"vzip",E,E,112,[[],["v"]]],[11,R[13],R[436],E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[["self"],[T]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[2],E,E,114,[[[U]],[R[0]]]],[11,R[3],E,E,114,[[],[R[0]]]],[11,R[4],E,E,114,[[["self"]],[T]]],[11,R[5],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[R[7]]]],[11,"vzip",E,E,114,[[],["v"]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[["self"],[T]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[57],E,E,115,[[["self"]],[R[58]]]],[11,R[2],E,E,115,[[[U]],[R[0]]]],[11,R[3],E,E,115,[[],[R[0]]]],[11,R[4],E,E,115,[[["self"]],[T]]],[11,R[5],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[R[7]]]],[11,"vzip",E,E,115,[[],["v"]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[57],E,E,113,[[["self"]],[R[58]]]],[11,R[2],E,E,113,[[[U]],[R[0]]]],[11,R[3],E,E,113,[[],[R[0]]]],[11,R[4],E,E,113,[[["self"]],[T]]],[11,R[5],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[R[7]]]],[11,R[59],E,E,113,[[["self"]],["fail"]]],[11,"vzip",E,E,113,[[],["v"]]],[11,R[13],R[443],E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[["self"],[T]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[57],E,E,116,[[["self"]],[R[58]]]],[11,R[2],E,E,116,[[[U]],[R[0]]]],[11,R[3],E,E,116,[[],[R[0]]]],[11,R[4],E,E,116,[[["self"]],[T]]],[11,R[5],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[R[7]]]],[11,R[59],E,E,116,[[["self"]],["fail"]]],[11,"vzip",E,E,116,[[],["v"]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[["self"],[T]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[57],E,E,117,[[["self"]],[R[58]]]],[11,R[2],E,E,117,[[[U]],[R[0]]]],[11,R[3],E,E,117,[[],[R[0]]]],[11,R[4],E,E,117,[[["self"]],[T]]],[11,R[5],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[R[7]]]],[11,"vzip",E,E,117,[[],["v"]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[["self"],[T]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[2],E,E,118,[[[U]],[R[0]]]],[11,R[3],E,E,118,[[],[R[0]]]],[11,R[4],E,E,118,[[["self"]],[T]]],[11,R[5],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[R[7]]]],[11,R[169],E,E,118,[[["self"]],[R[149]]]],[11,"vzip",E,E,118,[[],["v"]]],[11,R[13],R[472],E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[["self"],[T]]]],[11,"into",E,E,120,[[],[U]]],[11,R[246],E,E,120,[[],["i"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[2],E,E,120,[[[U]],[R[0]]]],[11,R[3],E,E,120,[[],[R[0]]]],[11,R[4],E,E,120,[[["self"]],[T]]],[11,R[5],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[R[7]]]],[11,"clear",E,E,120,[[["self"]]]],[11,R[172],E,E,120,[[]]],[11,R[169],E,E,120,[[["self"]],[R[149]]]],[11,"vzip",E,E,120,[[],["v"]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[["self"],[T]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[2],E,E,121,[[[U]],[R[0]]]],[11,R[3],E,E,121,[[],[R[0]]]],[11,R[4],E,E,121,[[["self"]],[T]]],[11,R[5],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[R[7]]]],[11,"clear",E,E,121,[[["self"]]]],[11,R[172],E,E,121,[[]]],[11,R[169],E,E,121,[[["self"]],[R[149]]]],[11,"vzip",E,E,121,[[],["v"]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[["self"],[T]]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[2],E,E,119,[[[U]],[R[0]]]],[11,R[3],E,E,119,[[],[R[0]]]],[11,R[4],E,E,119,[[["self"]],[T]]],[11,R[5],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[R[7]]]],[11,R[169],E,E,119,[[["self"]],[R[149]]]],[11,"vzip",E,E,119,[[],["v"]]],[11,R[13],R[460],E,21,[[["self"]],[R[264]]]],[11,R[75],R[447],E,0,[[],[R[267]]]],[11,R[75],R[448],E,4,[[],[R[265]]]],[11,R[75],R[449],E,5,[[],[R[273]]]],[11,R[75],E,E,6,[[],[R[276]]]],[11,R[75],R[458],E,10,[[],[R[274]]]],[11,R[75],R[328],E,14,[[],[R[284]]]],[11,R[75],E,E,15,[[],[R[275]]]],[11,R[75],R[463],E,28,[[],["self"]]],[11,R[75],R[383],E,48,[[],[R[267]]]],[11,R[75],E,E,49,[[],[R[317]]]],[11,R[75],E,E,50,[[],[R[485]]]],[11,R[75],E,E,51,[[],[R[322]]]],[11,R[75],E,E,52,[[],[R[473]]]],[11,R[75],E,E,53,[[],[R[486]]]],[11,R[75],E,E,54,[[],[R[487]]]],[11,R[75],E,E,55,[[],[R[474]]]],[11,R[75],E,E,56,[[],[R[475]]]],[11,R[75],E,E,57,[[],[R[476]]]],[11,R[75],E,E,58,[[],["event"]]],[11,R[75],E,E,59,[[],[R[481]]]],[11,R[75],E,E,60,[[],[R[488]]]],[11,R[75],E,E,61,[[],[R[489]]]],[11,R[75],E,E,62,[[],[R[484]]]],[11,R[75],E,E,129,[[],[R[406]]]],[11,R[75],R[466],E,91,[[],[R[507]]]],[11,R[75],R[383],E,63,[[],[R[394]]]],[11,R[75],E,E,64,[[],[R[351]]]],[11,R[75],E,E,65,[[],[R[490]]]],[11,R[75],E,E,66,[[],[R[491]]]],[11,R[75],E,E,67,[[],[R[492]]]],[11,R[75],E,E,68,[[],[R[477]]]],[11,R[75],E,E,69,[[],[R[301]]]],[11,R[75],E,E,70,[[],[R[429]]]],[11,R[75],E,E,71,[[],[R[493]]]],[11,R[75],E,E,72,[[],[R[277]]]],[11,R[75],E,E,73,[[],[R[300]]]],[11,R[75],E,E,74,[[],[R[278]]]],[11,R[75],E,E,75,[[],[R[283]]]],[11,R[75],E,E,76,[[],[R[298]]]],[11,R[75],E,E,77,[[],[R[494]]]],[11,R[75],E,E,78,[[],[R[478]]]],[11,R[75],E,E,79,[[],[R[479]]]],[11,R[75],E,E,80,[[],[R[297]]]],[11,R[75],E,E,81,[[],[R[482]]]],[11,R[75],E,E,82,[[],[R[299]]]],[11,R[75],E,E,83,[[],[R[495]]]],[11,R[75],E,E,84,[[],[R[496]]]],[11,R[75],E,E,85,[[],[R[497]]]],[11,R[75],E,E,86,[[],[R[498]]]],[11,R[75],E,E,87,[[],[R[499]]]],[11,R[75],E,E,88,[[],[R[500]]]],[11,R[75],E,E,89,[[],[R[501]]]],[11,R[75],E,E,90,[[],[R[502]]]],[11,R[75],R[472],E,120,[[],[R[411]]]],[11,R[75],E,E,121,[[],[R[480]]]],[11,"clone",R[447],E,2,[[["self"]],["field"]]],[11,"clone",E,E,1,[[["self"]],["access"]]],[11,"clone",E,E,3,[[["self"]],[R[266]]]],[11,"clone",E,E,0,[[["self"]],[R[267]]]],[11,"clone",R[448],E,4,[[["self"]],[R[265]]]],[11,"clone",R[450],E,125,[[["self"]],[R[277]]]],[11,"clone",E,E,7,[[["self"]],[R[300]]]],[11,"clone",R[456],E,8,[[["self"]],[R[307]]]],[11,"clone",R[457],E,9,[[["self"]],[R[504]]]],[11,"clone",R[458],E,10,[[["self"]],[R[274]]]],[11,"clone",R[330],E,12,[[["self"]],[R[327]]]],[11,"clone",E,E,11,[[["self"]],[R[481]]]],[11,"clone",R[459],E,13,[[["self"]],[R[505]]]],[11,"clone",R[328],E,14,[[["self"]],[R[284]]]],[11,"clone",E,E,15,[[["self"]],[R[275]]]],[11,"clone",R[287],E,16,[[["self"]],[R[479]]]],[11,"clone",E,E,17,[[["self"]],[R[482]]]],[11,"clone",E,E,18,[[["self"]],[R[297]]]],[11,"clone",E,E,19,[[["self"]],[R[299]]]],[11,"clone",R[460],E,20,[[["self"]],[R[264]]]],[11,"clone",R[461],E,23,[[["self"]],[R[503]]]],[11,"clone",E,E,22,[[["self"]],[R[272]]]],[11,"clone",E,E,24,[[["self"]],[R[483]]]],[11,"clone",E,E,25,[[["self"]],[R[484]]]],[11,"clone",R[462],E,26,[[["self"]],[R[283]]]],[11,"clone",E,E,27,[[["self"]],[R[298]]]],[11,"clone",R[464],E,29,[[["self"]],[R[485]]]],[11,"clone",E,E,30,[[["self"]],[R[322]]]],[11,"clone",E,E,31,[[["self"]],[R[473]]]],[11,"clone",E,E,32,[[["self"]],[R[486]]]],[11,"clone",E,E,34,[[["self"]],[R[487]]]],[11,"clone",E,E,35,[[["self"]],[R[474]]]],[11,"clone",E,E,36,[[["self"]],[R[475]]]],[11,"clone",E,E,37,[[["self"]],[R[476]]]],[11,"clone",R[465],E,39,[[["self"]],[R[506]]]],[11,"clone",R[383],E,48,[[["self"]],[R[267]]]],[11,"clone",E,E,49,[[["self"]],[R[317]]]],[11,"clone",E,E,50,[[["self"]],[R[485]]]],[11,"clone",E,E,51,[[["self"]],[R[322]]]],[11,"clone",E,E,52,[[["self"]],[R[473]]]],[11,"clone",E,E,53,[[["self"]],[R[486]]]],[11,"clone",E,E,54,[[["self"]],[R[487]]]],[11,"clone",E,E,55,[[["self"]],[R[474]]]],[11,"clone",E,E,56,[[["self"]],[R[475]]]],[11,"clone",E,E,57,[[["self"]],[R[476]]]],[11,"clone",E,E,58,[[["self"]],["event"]]],[11,"clone",E,E,59,[[["self"]],[R[481]]]],[11,"clone",E,E,60,[[["self"]],[R[488]]]],[11,"clone",E,E,61,[[["self"]],[R[489]]]],[11,"clone",E,E,62,[[["self"]],[R[484]]]],[11,"clone",E,E,129,[[["self"]],[R[406]]]],[11,"clone",R[466],E,91,[[["self"]],[R[507]]]],[11,"clone",R[383],E,63,[[["self"]],[R[394]]]],[11,"clone",E,E,64,[[["self"]],[R[351]]]],[11,"clone",E,E,65,[[["self"]],[R[490]]]],[11,"clone",E,E,66,[[["self"]],[R[491]]]],[11,"clone",E,E,67,[[["self"]],[R[492]]]],[11,"clone",E,E,68,[[["self"]],[R[477]]]],[11,"clone",E,E,69,[[["self"]],[R[301]]]],[11,"clone",E,E,70,[[["self"]],[R[429]]]],[11,"clone",E,E,71,[[["self"]],[R[493]]]],[11,"clone",E,E,72,[[["self"]],[R[277]]]],[11,"clone",E,E,73,[[["self"]],[R[300]]]],[11,"clone",E,E,74,[[["self"]],[R[278]]]],[11,"clone",E,E,75,[[["self"]],[R[283]]]],[11,"clone",E,E,76,[[["self"]],[R[298]]]],[11,"clone",E,E,77,[[["self"]],[R[494]]]],[11,"clone",E,E,78,[[["self"]],[R[478]]]],[11,"clone",E,E,79,[[["self"]],[R[479]]]],[11,"clone",E,E,80,[[["self"]],[R[297]]]],[11,"clone",R[467],E,92,[[["self"]],[R[508]]]],[11,"clone",R[383],E,81,[[["self"]],[R[482]]]],[11,"clone",E,E,82,[[["self"]],[R[299]]]],[11,"clone",R[468],E,93,[[["self"]],[R[509]]]],[11,"clone",R[383],E,83,[[["self"]],[R[495]]]],[11,"clone",E,E,84,[[["self"]],[R[496]]]],[11,"clone",E,E,85,[[["self"]],[R[497]]]],[11,"clone",E,E,86,[[["self"]],[R[498]]]],[11,"clone",E,E,87,[[["self"]],[R[499]]]],[11,"clone",E,E,88,[[["self"]],[R[500]]]],[11,"clone",E,E,89,[[["self"]],[R[501]]]],[11,"clone",E,E,90,[[["self"]],[R[502]]]],[11,"clone",R[409],E,101,[[["self"]],["module"]]],[11,"clone",E,E,102,[[["self"]],["script"]]],[11,"clone",E,E,96,[[["self"]],[R[406]]]],[11,"clone",E,E,103,[[["self"]],[R[407]]]],[11,"clone",E,E,97,[[["self"]],[R[408]]]],[11,"clone",E,E,105,[[["self"]],[R[394]]]],[11,"clone",E,E,104,[[["self"]],[R[395]]]],[11,"clone",E,E,94,[[["self"]],[R[490]]]],[11,"clone",E,E,98,[[["self"]],[R[416]]]],[11,"clone",E,E,106,[[["self"]],[R[510]]]],[11,"clone",E,E,107,[[["self"]],[R[317]]]],[11,"clone",E,E,108,[[["self"]],[R[477]]]],[11,"clone",E,E,95,[[["self"]],[R[301]]]],[11,"clone",E,E,99,[[["self"]],[R[351]]]],[11,"clone",R[469],E,109,[[["self"]],[R[478]]]],[11,"clone",R[470],E,110,[[["self"]],[R[429]]]],[11,"clone",R[471],E,111,[[["self"]],[R[278]]]],[11,"clone",R[433],E,112,[[["self"]],[R[2138]]]],[11,"clone",R[436],E,114,[[["self"]],[R[439]]]],[11,"clone",E,E,115,[[["self"]],[R[296]]]],[11,"clone",R[443],E,116,[[["self"]],[R[493]]]],[11,"clone",E,E,117,[[["self"]],[R[444]]]],[11,"clone",E,E,118,[[["self"]],[R[420]]]],[11,"clone",R[472],E,119,[[["self"]],["writeop"]]],[11,"clone",E,E,120,[[["self"]],[R[411]]]],[11,"clone",E,E,121,[[["self"]],[R[480]]]],[11,"as_ref",R[448],E,4,[[["self"]]]],[11,"as_ref",R[450],E,125,[[["self"]]]],[11,"as_ref",R[460],E,20,[[["self"]],[R[271]]]],[11,R[247],R[447],E,2,[[["self"],["field"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,2,[[["self"],["field"]],["bool"]]],[11,"le",E,E,2,[[["self"],["field"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["field"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["field"]],["bool"]]],[11,R[247],E,E,1,[[["self"],["access"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,1,[[["self"],["access"]],["bool"]]],[11,"le",E,E,1,[[["self"],["access"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["access"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["access"]],["bool"]]],[11,R[247],E,E,3,[[["self"],[R[266]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,3,[[["self"],[R[266]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[266]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[266]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[266]]],["bool"]]],[11,R[247],E,E,0,[[["self"],[R[267]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,0,[[["self"],[R[267]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[267]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[267]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[267]]],["bool"]]],[11,R[247],R[448],E,4,[[["self"],[R[265]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,4,[[["self"],[R[265]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[265]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[265]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[265]]],["bool"]]],[11,R[247],R[458],E,10,[[["self"],[R[274]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,10,[[["self"],[R[274]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[274]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[274]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[274]]],["bool"]]],[11,R[247],R[328],E,14,[[["self"],[R[284]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,14,[[["self"],[R[284]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[284]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[284]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[284]]],["bool"]]],[11,R[247],R[460],E,20,[[["self"],[R[264]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,20,[[["self"],[R[264]]],["bool"]]],[11,"le",E,E,20,[[["self"],[R[264]]],["bool"]]],[11,"gt",E,E,20,[[["self"],[R[264]]],["bool"]]],[11,"ge",E,E,20,[[["self"],[R[264]]],["bool"]]],[11,R[247],E,E,21,[[["self"],[R[271]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,21,[[["self"],[R[271]]],["bool"]]],[11,"le",E,E,21,[[["self"],[R[271]]],["bool"]]],[11,"gt",E,E,21,[[["self"],[R[271]]],["bool"]]],[11,"ge",E,E,21,[[["self"],[R[271]]],["bool"]]],[11,R[247],R[461],E,23,[[["self"],[R[503]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,23,[[["self"],[R[503]]],["bool"]]],[11,"le",E,E,23,[[["self"],[R[503]]],["bool"]]],[11,"gt",E,E,23,[[["self"],[R[503]]],["bool"]]],[11,"ge",E,E,23,[[["self"],[R[503]]],["bool"]]],[11,R[247],E,E,22,[[["self"],[R[272]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,22,[[["self"],[R[272]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[272]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[272]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[272]]],["bool"]]],[11,R[247],E,E,24,[[["self"],[R[483]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,24,[[["self"],[R[483]]],["bool"]]],[11,"le",E,E,24,[[["self"],[R[483]]],["bool"]]],[11,"gt",E,E,24,[[["self"],[R[483]]],["bool"]]],[11,"ge",E,E,24,[[["self"],[R[483]]],["bool"]]],[11,R[247],E,E,25,[[["self"],[R[484]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,25,[[["self"],[R[484]]],["bool"]]],[11,"le",E,E,25,[[["self"],[R[484]]],["bool"]]],[11,"gt",E,E,25,[[["self"],[R[484]]],["bool"]]],[11,"ge",E,E,25,[[["self"],[R[484]]],["bool"]]],[11,R[247],R[466],E,91,[[["self"],[R[507]]],[[R[24],[R[32]]],[R[32]]]]],[11,R[247],R[443],E,116,[[["self"],[R[493]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,116,[[["self"],[R[493]]],["bool"]]],[11,"le",E,E,116,[[["self"],[R[493]]],["bool"]]],[11,"gt",E,E,116,[[["self"],[R[493]]],["bool"]]],[11,"ge",E,E,116,[[["self"],[R[493]]],["bool"]]],[11,R[247],E,E,118,[[["self"],[R[420]]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",R[447],E,2,[[["self"],["field"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["field"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["access"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["access"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[266]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[266]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[267]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[267]]],["bool"]]],[11,"eq",R[448],E,4,[[["self"],[R[265]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[265]]],["bool"]]],[11,"eq",R[450],E,125,[[["self"],[R[277]]],["bool"]]],[11,"ne",E,E,125,[[["self"],[R[277]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[300]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[300]]],["bool"]]],[11,"eq",R[456],E,8,[[["self"],[R[307]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[307]]],["bool"]]],[11,"eq",R[457],E,9,[[["self"],[R[504]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[504]]],["bool"]]],[11,"eq",R[458],E,10,[[["self"],[R[274]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[274]]],["bool"]]],[11,"eq",R[330],E,12,[[["self"],[R[327]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[327]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[481]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[481]]],["bool"]]],[11,"eq",R[459],E,13,[[["self"],[R[505]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[505]]],["bool"]]],[11,"eq",R[328],E,14,[[["self"],[R[284]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[284]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[275]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[275]]],["bool"]]],[11,"eq",R[287],E,16,[[["self"],[R[479]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[479]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[482]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[482]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[297]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[297]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[299]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[299]]],["bool"]]],[11,"eq",R[460],E,20,[[["self"],[R[264]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[264]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[271]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[271]]],["bool"]]],[11,"eq",R[461],E,23,[[["self"],[R[503]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[503]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[272]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[272]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[483]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[483]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[484]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[484]]],["bool"]]],[11,"eq",R[462],E,26,[[["self"],[R[283]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[283]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[298]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[298]]],["bool"]]],[11,"eq",R[464],E,29,[[["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[322]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[322]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[473]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[473]]],["bool"]]],[11,"eq",E,E,32,[[["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[487]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[487]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[474]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[474]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[475]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[475]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[476]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[476]]],["bool"]]],[11,"eq",R[465],E,39,[[["self"],[R[506]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[506]]],["bool"]]],[11,"eq",E,E,38,[[["self"],["nodedirection"]],["bool"]]],[11,"eq",R[383],E,48,[[["self"],[R[267]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[267]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[317]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[317]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[485]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[485]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[322]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[322]]],["bool"]]],[11,"eq",E,E,52,[[["self"],[R[473]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[473]]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[486]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[486]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[487]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[487]]],["bool"]]],[11,"eq",E,E,55,[[["self"],[R[474]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[474]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[475]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[475]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[476]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[476]]],["bool"]]],[11,"eq",E,E,58,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,58,[[["self"],["event"]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[481]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[481]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[488]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[488]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[489]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[489]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[484]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[484]]],["bool"]]],[11,"eq",E,E,129,[[["self"],[R[406]]],["bool"]]],[11,"eq",R[466],E,91,[[["self"],[R[507]]],["bool"]]],[11,"eq",R[383],E,63,[[["self"],[R[394]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[394]]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[351]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[351]]],["bool"]]],[11,"eq",E,E,65,[[["self"],[R[490]]],["bool"]]],[11,"ne",E,E,65,[[["self"],[R[490]]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[491]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[491]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[492]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[492]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[477]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[477]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[301]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[301]]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[429]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[429]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[493]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[493]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[277]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[277]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[300]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[300]]],["bool"]]],[11,"eq",E,E,74,[[["self"],[R[278]]],["bool"]]],[11,"ne",E,E,74,[[["self"],[R[278]]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[283]]],["bool"]]],[11,"ne",E,E,75,[[["self"],[R[283]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[298]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[298]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[494]]],["bool"]]],[11,"ne",E,E,77,[[["self"],[R[494]]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[478]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[478]]],["bool"]]],[11,"eq",E,E,79,[[["self"],[R[479]]],["bool"]]],[11,"ne",E,E,79,[[["self"],[R[479]]],["bool"]]],[11,"eq",E,E,80,[[["self"],[R[297]]],["bool"]]],[11,"ne",E,E,80,[[["self"],[R[297]]],["bool"]]],[11,"eq",R[467],E,92,[[["self"],[R[508]]],["bool"]]],[11,"ne",E,E,92,[[["self"],[R[508]]],["bool"]]],[11,"eq",R[383],E,81,[[["self"],[R[482]]],["bool"]]],[11,"ne",E,E,81,[[["self"],[R[482]]],["bool"]]],[11,"eq",E,E,82,[[["self"],[R[299]]],["bool"]]],[11,"ne",E,E,82,[[["self"],[R[299]]],["bool"]]],[11,"eq",R[468],E,93,[[["self"],[R[509]]],["bool"]]],[11,"ne",E,E,93,[[["self"],[R[509]]],["bool"]]],[11,"eq",R[383],E,83,[[["self"],[R[495]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[495]]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[496]]],["bool"]]],[11,"ne",E,E,84,[[["self"],[R[496]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[497]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[497]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[498]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[498]]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[499]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[499]]],["bool"]]],[11,"eq",E,E,88,[[["self"],[R[500]]],["bool"]]],[11,"ne",E,E,88,[[["self"],[R[500]]],["bool"]]],[11,"eq",E,E,89,[[["self"],[R[501]]],["bool"]]],[11,"ne",E,E,89,[[["self"],[R[501]]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[502]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[502]]],["bool"]]],[11,"eq",R[409],E,101,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,101,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,102,[[["self"],["script"]],["bool"]]],[11,"ne",E,E,102,[[["self"],["script"]],["bool"]]],[11,"eq",E,E,96,[[["self"],[R[406]]],["bool"]]],[11,"ne",E,E,96,[[["self"],[R[406]]],["bool"]]],[11,"eq",E,E,103,[[["self"],[R[407]]],["bool"]]],[11,"ne",E,E,103,[[["self"],[R[407]]],["bool"]]],[11,"eq",E,E,97,[[["self"],[R[408]]],["bool"]]],[11,"ne",E,E,97,[[["self"],[R[408]]],["bool"]]],[11,"eq",E,E,105,[[["self"],[R[394]]],["bool"]]],[11,"ne",E,E,105,[[["self"],[R[394]]],["bool"]]],[11,"eq",E,E,104,[[["self"],[R[395]]],["bool"]]],[11,"ne",E,E,104,[[["self"],[R[395]]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[490]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[490]]],["bool"]]],[11,"eq",E,E,98,[[["self"],[R[416]]],["bool"]]],[11,"ne",E,E,98,[[["self"],[R[416]]],["bool"]]],[11,"eq",E,E,106,[[["self"],[R[510]]],["bool"]]],[11,"ne",E,E,106,[[["self"],[R[510]]],["bool"]]],[11,"eq",E,E,107,[[["self"],[R[317]]],["bool"]]],[11,"ne",E,E,107,[[["self"],[R[317]]],["bool"]]],[11,"eq",E,E,108,[[["self"],[R[477]]],["bool"]]],[11,"ne",E,E,108,[[["self"],[R[477]]],["bool"]]],[11,"eq",E,E,95,[[["self"],[R[301]]],["bool"]]],[11,"ne",E,E,95,[[["self"],[R[301]]],["bool"]]],[11,"eq",E,E,99,[[["self"],[R[351]]],["bool"]]],[11,"ne",E,E,99,[[["self"],[R[351]]],["bool"]]],[11,"eq",R[469],E,109,[[["self"],[R[478]]],["bool"]]],[11,"ne",E,E,109,[[["self"],[R[478]]],["bool"]]],[11,"eq",R[470],E,110,[[["self"],[R[429]]],["bool"]]],[11,"ne",E,E,110,[[["self"],[R[429]]],["bool"]]],[11,"eq",R[471],E,111,[[["self"],[R[278]]],["bool"]]],[11,"ne",E,E,111,[[["self"],[R[278]]],["bool"]]],[11,"eq",R[436],E,113,[[["self"],[R[285]]],["bool"]]],[11,"ne",E,E,113,[[["self"],[R[285]]],["bool"]]],[11,"eq",R[443],E,116,[[["self"],[R[493]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[493]]],["bool"]]],[11,"eq",E,E,117,[[["self"],[R[444]]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[420]]],["bool"]]],[11,"eq",R[472],E,119,[[["self"],["writeop"]],["bool"]]],[11,"ne",E,E,119,[[["self"],["writeop"]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[411]]],["bool"]]],[11,"ne",E,E,120,[[["self"],[R[411]]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[480]]],["bool"]]],[11,"ne",E,E,121,[[["self"],[R[480]]],["bool"]]],[11,"cmp",R[447],E,2,[[["self"],["field"]],[R[32]]]],[11,"cmp",E,E,1,[[["self"],["access"]],[R[32]]]],[11,"cmp",E,E,3,[[["self"],[R[266]]],[R[32]]]],[11,"cmp",E,E,0,[[["self"],[R[267]]],[R[32]]]],[11,"cmp",R[448],E,4,[[["self"],[R[265]]],[R[32]]]],[11,"cmp",R[458],E,10,[[["self"],[R[274]]],[R[32]]]],[11,"cmp",R[328],E,14,[[["self"],[R[284]]],[R[32]]]],[11,"cmp",R[460],E,20,[[["self"],[R[264]]],[R[32]]]],[11,"cmp",E,E,21,[[["self"],[R[271]]],[R[32]]]],[11,"cmp",R[461],E,23,[[["self"],[R[503]]],[R[32]]]],[11,"cmp",E,E,22,[[["self"],[R[272]]],[R[32]]]],[11,"cmp",E,E,24,[[["self"],[R[483]]],[R[32]]]],[11,"cmp",E,E,25,[[["self"],[R[484]]],[R[32]]]],[11,"cmp",R[466],E,91,[[["self"],[R[507]]],[R[32]]]],[11,"cmp",R[443],E,116,[[["self"],[R[493]]],[R[32]]]],[11,"cmp",E,E,118,[[["self"],[R[420]]],[R[32]]]],[11,R[246],R[472],E,120,[[]]],[11,"from",R[447],E,3,[[["access"],["vec",["access"]]],[R[266]]]],[11,"from",R[383],E,48,[[[R[267]]],["self"]]],[11,"from",R[450],E,125,[[["vec",["u8"]],["u8"]],[R[277]]]],[11,"from",R[383],E,72,[[[R[277]]],["self"]]],[11,"from",R[450],E,125,[[[R[273]]],["self"]]],[11,"from",R[383],E,73,[[[R[300]]],["self"]]],[11,"from",E,E,58,[[[R[327]]],["self"]]],[11,"from",E,E,59,[[[R[481]]],["self"]]],[11,"from",R[459],E,13,[[["sig"]],["self"]]],[11,"from",R[383],E,79,[[[R[479]]],["self"]]],[11,"from",E,E,81,[[[R[482]]],["self"]]],[11,"from",E,E,80,[[[R[297]]],["self"]]],[11,"from",E,E,82,[[[R[299]]],["self"]]],[11,"from",R[460],E,20,[[[R[271]]],["self"]]],[11,"from",R[383],E,62,[[[R[484]]],["self"]]],[11,"from",R[447],E,0,[[[R[484]]],["self"]]],[11,"from",R[383],E,75,[[[R[283]]],["self"]]],[11,"from",E,E,76,[[[R[298]]],["self"]]],[11,"from",E,E,50,[[[R[485]]],["self"]]],[11,"from",E,E,51,[[[R[322]]],["self"]]],[11,"from",E,E,52,[[[R[473]]],["self"]]],[11,"from",E,E,53,[[[R[486]]],["self"]]],[11,"from",E,E,54,[[[R[487]]],["self"]]],[11,"from",E,E,55,[[[R[474]]],["self"]]],[11,"from",E,E,56,[[[R[475]]],["self"]]],[11,"from",E,E,57,[[[R[476]]],["self"]]],[11,"from",E,E,63,[[[R[394]]],["self"]]],[11,"from",E,E,63,[[[R[395]]],["self"]]],[11,"from",E,E,65,[[[R[490]]],["self"]]],[11,"from",R[409],E,98,[[[R[493]]],["self"]]],[11,"from",R[383],E,49,[[[R[317]]],["self"]]],[11,"from",E,E,68,[[[R[477]]],["self"]]],[11,"from",E,E,69,[[[R[301]]],["self"]]],[11,"from",E,E,64,[[[R[351]]],["self"]]],[11,"from",E,E,78,[[[R[478]]],["self"]]],[11,"from",E,E,70,[[[R[429]]],["self"]]],[11,"from",E,E,74,[[[R[278]]],["self"]]],[11,"from",R[436],E,115,[[[R[278]]],["self"]]],[11,"from",R[471],E,111,[[[R[296]]],["self"]]],[11,"from",R[383],E,71,[[[R[493]]],["self"]]],[11,"next",R[465],E,126,[[["self"]],[[R[506]],[R[24],[R[506]]]]]],[11,"next",E,E,127,[[["self"]],[[R[506]],[R[24],[R[506]]]]]],[11,"next",E,E,40,[[["self"]],[[R[506]],[R[24],[R[506]]]]]],[11,"next",E,E,41,[[["self"]],[R[24]]]],[11,"hash",R[447],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",R[448],E,4,[[["self"],["__h"]]]],[11,"hash",R[458],E,10,[[["self"],["__h"]]]],[11,"hash",R[328],E,14,[[["self"],["__h"]]]],[11,"hash",R[460],E,20,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",R[461],E,23,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",R[465],E,39,[[["self"],["__h"]]]],[11,"hash",R[466],E,91,[[["self"],["__h"]]]],[11,"hash",R[409],E,101,[[["self"],["__h"]]]],[11,"hash",E,E,102,[[["self"],["__h"]]]],[11,"hash",E,E,96,[[["self"],["__h"]]]],[11,"hash",E,E,103,[[["self"],["__h"]]]],[11,"hash",E,E,97,[[["self"],["__h"]]]],[11,"hash",E,E,105,[[["self"],["__h"]]]],[11,"hash",E,E,104,[[["self"],["__h"]]]],[11,"hash",R[443],E,116,[[["self"],["__h"]]]],[11,"hash",E,E,117,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",R[472],E,119,[[["self"],["__h"]]]],[11,"hash",E,E,120,[[["self"],["__h"]]]],[11,"hash",E,E,121,[[["self"],["__h"]]]],[11,"deref",R[447],E,122,[[["self"]],[R[267]]]],[11,"deref",R[449],E,123,[[["self"]],["vec"]]],[11,"deref",E,E,124,[[["self"]],["vec"]]],[11,"deref",R[460],E,20,[[["self"]],[R[271]]]],[11,"deref",R[409],E,104,[[["self"]]]],[11,"index",R[458],E,10,[[["self"],["usize"]]]],[11,"fmt",R[447],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[448],E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[449],E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[450],E,125,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[456],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[457],E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[458],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[330],E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[459],E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[328],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[287],E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[460],E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[461],E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[462],E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[463],E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[464],E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,36,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,37,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[465],E,39,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,126,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,127,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[331],E,128,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,44,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,45,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,46,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,47,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[383],E,48,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,49,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,50,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,51,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,52,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,53,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,54,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,55,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,56,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,57,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,58,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,59,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,60,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,61,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,62,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,129,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[466],E,91,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[383],E,63,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,64,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,65,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,66,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,67,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,68,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,69,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,70,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,71,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,72,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,73,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,74,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,75,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,76,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,77,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,78,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,79,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,80,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[467],E,92,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[383],E,81,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,82,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[468],E,93,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[383],E,83,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,84,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,85,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,86,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,87,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,88,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,89,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,90,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[409],E,101,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,102,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,96,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,103,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,97,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,104,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,105,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,94,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,98,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,106,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,107,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,108,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,95,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,99,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[469],E,109,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[470],E,110,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[471],E,111,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[433],E,112,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[436],E,113,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[443],E,116,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,117,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,118,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[472],E,119,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,120,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,121,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[447],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[448],E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[456],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[458],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[330],E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[328],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[460],E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[462],E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[465],E,39,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[470],E,110,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[471],E,111,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[436],E,113,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,115,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[443],E,117,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,116,[[["self"],[R[17]]],[R[0]]]],[11,R[2],R[447],E,0,[[[R[267]]],[R[0]]]],[11,R[2],R[448],R[511],4,[[],[[R[265]],[R[0],[R[265]]]]]],[11,R[2],E,R[511],4,[[],[[R[265]],[R[0],[R[265]]]]]],[11,R[2],E,R[1650],4,[[["vec",["u8"]],["u8"]],[[R[265]],[R[0],[R[265]]]]]],[11,R[2],E,E,4,[[["bytes"]],[[R[265]],[R[0],[R[265]]]]]],[11,R[2],E,E,4,[[[R[58]]],[[R[265]],[R[0],[R[265]]]]]],[11,R[2],E,E,4,[[["bech32"]],[[R[265]],[R[0],[R[265]]]]]],[11,R[2],R[450],E,125,[[[R[310]]],[R[0]]]],[11,R[2],E,E,125,[[[R[277]]],[R[0]]]],[11,R[2],E,E,7,[[[R[300]]],[R[0]]]],[11,R[2],R[330],E,12,[[["event"]],[R[0]]]],[11,R[2],E,E,11,[[[R[481]]],[R[0]]]],[11,R[2],R[328],"Tries to convert the provided byte array into Event Key.",14,[[],[[R[284]],[R[0],[R[284]]]]]],[11,R[2],R[287],E,16,[[[R[479]]],[R[0]]]],[11,R[2],E,E,17,[[[R[482]]],[R[0]]]],[11,R[2],E,E,18,[[[R[297]]],[R[0]]]],[11,R[2],E,E,19,[[[R[299]]],[R[0]]]],[11,R[2],R[461],E,25,[[[R[484]]],[R[0]]]],[11,R[2],R[462],E,26,[[[R[283]]],[R[0]]]],[11,R[2],E,E,27,[[[R[298]]],[R[0]]]],[11,R[2],R[464],E,29,[[[R[485]]],[R[0]]]],[11,R[2],E,E,30,[[[R[322]]],[R[0]]]],[11,R[2],E,E,31,[[[R[473]]],[R[0]]]],[11,R[2],E,E,32,[[[R[486]]],[R[0]]]],[11,R[2],E,E,34,[[[R[487]]],[R[0]]]],[11,R[2],E,E,35,[[[R[474]]],[R[0]]]],[11,R[2],E,E,36,[[[R[475]]],[R[0]]]],[11,R[2],E,E,37,[[[R[476]]],[R[0]]]],[11,R[2],R[409],E,105,[[[R[394]]],[R[0]]]],[11,R[2],E,E,94,[[[R[490]]],[R[0]]]],[11,R[2],E,E,107,[[[R[317]]],[R[0]]]],[11,R[2],E,E,108,[[[R[477]]],[R[0]]]],[11,R[2],E,E,95,[[[R[301]]],[R[0]]]],[11,R[2],E,E,99,[[[R[351]]],[R[0]]]],[11,R[2],E,E,105,[[[R[351]]],[R[0]]]],[11,R[2],R[469],E,109,[[[R[478]]],[R[0]]]],[11,R[2],R[470],E,110,[[[R[429]]],[R[0]]]],[11,R[2],R[471],E,111,[[[R[278]]],[R[0]]]],[11,R[2],R[443],E,116,[[[R[493]]],[R[0]]]],[11,R[2],E,E,118,[[["u64"]],[[R[512]],[R[0],[R[512]]]]]],[11,R[1861],R[448],E,4,[[["str"]],[R[0]]]],[11,R[513],R[472],E,121,[[[R[1373]]],["self"]]],[11,"fmt",R[448],E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[328],E,14,[[["self"],[R[17]]],[R[0]]]],[11,R[5],R[460],E,20,[[["self"]],[R[271]]]],[11,"name",R[436],E,113,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,113,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,113,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,R[193],R[447],E,2,[[["__d"]],[R[0]]]],[11,R[193],E,E,1,[[["__d"]],[R[0]]]],[11,R[193],E,E,3,[[["__d"]],[R[0]]]],[11,R[193],E,E,0,[[["__d"]],[R[0]]]],[11,R[193],R[448],E,4,[[["__d"]],[R[0]]]],[11,R[193],R[449],E,5,[[["__d"]],[R[0]]]],[11,R[193],E,E,6,[[["__d"]],[R[0]]]],[11,R[193],R[450],E,125,[[["__d"]],[R[0]]]],[11,R[193],R[456],E,8,[[["__d"]],[R[0]]]],[11,R[193],R[457],E,9,[[["__d"]],[R[0]]]],[11,R[193],R[458],E,10,[[["__d"]],[R[0]]]],[11,R[193],R[330],E,12,[[["__d"]],[R[0]]]],[11,R[193],R[459],E,13,[[["__d"]],[R[0]]]],[11,R[193],R[328],E,14,[[["d"]],[R[0]]]],[11,R[193],E,E,15,[[["__d"]],[R[0]]]],[11,R[193],R[460],E,20,[[["__d"]],[R[0]]]],[11,R[193],R[461],E,23,[[["__d"]],[R[0]]]],[11,R[193],E,E,22,[[["__d"]],[R[0]]]],[11,R[193],E,E,24,[[["__d"]],[R[0]]]],[11,R[193],E,E,25,[[["__d"]],[R[0]]]],[11,R[193],R[462],E,26,[[["__d"]],[R[0]]]],[11,R[193],E,E,27,[[["__d"]],[R[0]]]],[11,R[193],R[409],E,101,[[["__d"]],[R[0]]]],[11,R[193],E,E,102,[[["__d"]],[R[0]]]],[11,R[193],E,E,96,[[["__d"]],[R[0]]]],[11,R[193],E,E,103,[[["__d"]],[R[0]]]],[11,R[193],E,E,97,[[["__d"]],[R[0]]]],[11,R[193],E,E,105,[[["__d"]],[R[0]]]],[11,R[193],E,E,107,[[["__d"]],[R[0]]]],[11,R[193],E,E,99,[[["__d"]],[R[0]]]],[11,R[193],R[470],E,110,[[["__d"]],[R[0]]]],[11,R[193],R[471],E,111,[[["__d"]],[R[0]]]],[11,R[193],R[443],E,118,[[["d"]],[R[0]]]],[11,R[193],R[472],E,119,[[["__d"]],[R[0]]]],[11,R[193],E,E,120,[[["__d"]],[R[0]]]],[11,R[193],E,E,121,[[["__d"]],[R[0]]]],[11,R[142],R[447],E,2,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,1,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,3,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,0,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[448],E,4,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[449],E,5,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[450],E,125,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[456],E,8,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[457],E,9,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[458],E,10,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[330],E,12,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[459],E,13,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[328],E,14,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,15,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[460],E,20,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[461],E,23,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,22,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,24,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,25,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[462],E,26,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,27,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[409],E,101,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,102,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,96,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,103,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,97,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,105,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,107,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,99,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[470],E,110,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[471],E,111,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[443],E,118,[[["self"],["s"]],[R[0]]]],[11,R[142],R[472],E,119,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,120,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,121,[[["self"],["__s"]],[R[0]]]],[11,R[172],R[447],E,122,[[["self"]]]],[11,R[172],R[449],E,123,[[["self"]]]],[11,R[172],E,E,124,[[["self"]]]],[11,R[34],R[447],E,0,[[]]],[11,R[34],R[448],E,4,[[]]],[11,R[34],R[449],E,5,[[]]],[11,R[34],R[450],E,125,[[]]],[11,R[34],E,E,7,[[]]],[11,R[34],R[456],E,8,[[]]],[11,R[34],R[330],E,11,[[]]],[11,R[34],R[328],E,14,[[]]],[11,R[34],R[287],E,16,[[]]],[11,R[34],E,E,18,[[]]],[11,R[34],E,E,19,[[]]],[11,R[34],R[460],E,20,[[]]],[11,R[34],R[461],E,25,[[]]],[11,R[34],R[462],E,26,[[]]],[11,R[34],R[464],E,34,[[]]],[11,R[34],E,E,35,[[]]],[11,R[34],E,E,36,[[]]],[11,R[34],E,E,37,[[]]],[11,R[34],E,E,29,[[]]],[11,R[34],E,E,30,[[]]],[11,R[34],E,E,31,[[]]],[11,R[34],E,E,32,[[]]],[11,R[34],R[458],E,10,[[]]],[11,R[34],R[472],E,119,[[]]],[11,R[34],E,E,120,[[]]],[11,R[34],R[331],E,128,[[]]],[11,"arbitrary",E,E,128,[[]]],[11,R[34],E,E,44,[[]]],[11,R[34],R[409],E,103,[[]]],[11,R[34],R[331],E,45,[[]]],[11,R[34],R[409],E,104,[[]]],[11,R[34],E,E,105,[[]]],[11,R[34],R[443],E,118,[[]]],[11,R[34],R[409],E,98,[[]]],[11,R[34],E,E,97,[[]]],[11,R[34],E,E,102,[[]]],[11,R[34],E,E,101,[[]]],[11,R[34],E,E,96,[[]]],[11,R[34],R[462],E,27,[[]]],[11,R[34],R[287],E,17,[[]]],[11,R[34],R[331],E,46,[[]]],[11,R[34],R[328],E,15,[[]]],[11,R[34],R[461],E,23,[[]]],[11,R[34],R[330],E,12,[[]]],[11,R[34],R[409],E,108,[[]]],[11,R[34],R[331],E,47,[[]]],[11,R[34],R[409],E,95,[[]]],[11,R[34],R[457],E,9,[[]]],[11,R[34],R[409],E,94,[[]]],[11,R[34],E,E,107,[[]]],[11,R[34],E,E,99,[[]]],[11,R[34],R[469],E,109,[[]]],[11,R[34],R[470],E,110,[[]]],[11,R[34],R[471],E,111,[[]]],[11,R[34],R[443],E,116,[[]]],[11,"hash",R[448],E,4,[[["self"]],[R[149]]]],[11,"hash",R[450],E,125,[[["self"]],[R[149]]]],[11,"hash",R[330],E,12,[[["self"]],[R[149]]]],[11,"hash",R[461],E,25,[[["self"]],[R[149]]]],[11,"hash",E,E,22,[[["self"]],[R[149]]]],[11,"hash",R[462],E,26,[[["self"]],[R[149]]]],[11,"hash",R[313],E,42,[[["self"]],[R[149]]]],[11,"hash",E,E,43,[[["self"]],[R[149]]]],[11,"hash",R[409],E,103,[[["self"]],[R[149]]]],[11,"hash",E,E,107,[[["self"]],[R[149]]]],[11,"hash",E,E,99,[[["self"]],[R[149]]]],[11,"encode_bytes",R[447],E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"try_from_primitive",R[443],E,118,[[],[[R[512]],[R[0],[R[512]]]]]],[11,R[514],R[383],E,48,[[["self"],["b"]]]],[11,R[515],E,E,48,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,48,[[["self"]],["usize"]]],[11,"clear",E,E,48,[[["self"]]]],[11,R[514],E,E,49,[[["self"],["b"]]]],[11,R[515],E,E,49,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,49,[[["self"]],["usize"]]],[11,"clear",E,E,49,[[["self"]]]],[11,R[514],E,E,50,[[["self"],["b"]]]],[11,R[515],E,E,50,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,50,[[["self"]],["usize"]]],[11,"clear",E,E,50,[[["self"]]]],[11,R[514],E,E,51,[[["self"],["b"]]]],[11,R[515],E,E,51,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,51,[[["self"]],["usize"]]],[11,"clear",E,E,51,[[["self"]]]],[11,R[514],E,E,52,[[["self"],["b"]]]],[11,R[515],E,E,52,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,52,[[["self"]],["usize"]]],[11,"clear",E,E,52,[[["self"]]]],[11,R[514],E,E,53,[[["self"],["b"]]]],[11,R[515],E,E,53,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,53,[[["self"]],["usize"]]],[11,"clear",E,E,53,[[["self"]]]],[11,R[514],E,E,54,[[["self"],["b"]]]],[11,R[515],E,E,54,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,54,[[["self"]],["usize"]]],[11,"clear",E,E,54,[[["self"]]]],[11,R[514],E,E,55,[[["self"],["b"]]]],[11,R[515],E,E,55,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,55,[[["self"]],["usize"]]],[11,"clear",E,E,55,[[["self"]]]],[11,R[514],E,E,56,[[["self"],["b"]]]],[11,R[515],E,E,56,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,56,[[["self"]],["usize"]]],[11,"clear",E,E,56,[[["self"]]]],[11,R[514],E,E,57,[[["self"],["b"]]]],[11,R[515],E,E,57,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,57,[[["self"]],["usize"]]],[11,"clear",E,E,57,[[["self"]]]],[11,R[514],E,E,58,[[["self"],["b"]]]],[11,R[515],E,E,58,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,58,[[["self"]],["usize"]]],[11,"clear",E,E,58,[[["self"]]]],[11,R[514],E,E,59,[[["self"],["b"]]]],[11,R[515],E,E,59,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,59,[[["self"]],["usize"]]],[11,"clear",E,E,59,[[["self"]]]],[11,R[514],E,E,60,[[["self"],["b"]]]],[11,R[515],E,E,60,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,60,[[["self"]],["usize"]]],[11,"clear",E,E,60,[[["self"]]]],[11,R[514],E,E,61,[[["self"],["b"]]]],[11,R[515],E,E,61,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,61,[[["self"]],["usize"]]],[11,"clear",E,E,61,[[["self"]]]],[11,R[514],E,E,62,[[["self"],["b"]]]],[11,R[515],E,E,62,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,62,[[["self"]],["usize"]]],[11,"clear",E,E,62,[[["self"]]]],[11,R[514],E,E,129,[[["self"],["b"]]]],[11,R[515],E,E,129,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,129,[[["self"]],["usize"]]],[11,"clear",E,E,129,[[["self"]]]],[11,R[514],E,E,63,[[["self"],["b"]]]],[11,R[515],E,E,63,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,63,[[["self"]],["usize"]]],[11,"clear",E,E,63,[[["self"]]]],[11,R[514],E,E,64,[[["self"],["b"]]]],[11,R[515],E,E,64,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,64,[[["self"]],["usize"]]],[11,"clear",E,E,64,[[["self"]]]],[11,R[514],E,E,65,[[["self"],["b"]]]],[11,R[515],E,E,65,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,65,[[["self"]],["usize"]]],[11,"clear",E,E,65,[[["self"]]]],[11,R[514],E,E,66,[[["self"],["b"]]]],[11,R[515],E,E,66,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,66,[[["self"]],["usize"]]],[11,"clear",E,E,66,[[["self"]]]],[11,R[514],E,E,67,[[["self"],["b"]]]],[11,R[515],E,E,67,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,67,[[["self"]],["usize"]]],[11,"clear",E,E,67,[[["self"]]]],[11,R[514],E,E,68,[[["self"],["b"]]]],[11,R[515],E,E,68,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,68,[[["self"]],["usize"]]],[11,"clear",E,E,68,[[["self"]]]],[11,R[514],E,E,69,[[["self"],["b"]]]],[11,R[515],E,E,69,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,69,[[["self"]],["usize"]]],[11,"clear",E,E,69,[[["self"]]]],[11,R[514],E,E,70,[[["self"],["b"]]]],[11,R[515],E,E,70,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,70,[[["self"]],["usize"]]],[11,"clear",E,E,70,[[["self"]]]],[11,R[514],E,E,71,[[["self"],["b"]]]],[11,R[515],E,E,71,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,71,[[["self"]],["usize"]]],[11,"clear",E,E,71,[[["self"]]]],[11,R[514],E,E,72,[[["self"],["b"]]]],[11,R[515],E,E,72,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,72,[[["self"]],["usize"]]],[11,"clear",E,E,72,[[["self"]]]],[11,R[514],E,E,73,[[["self"],["b"]]]],[11,R[515],E,E,73,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,73,[[["self"]],["usize"]]],[11,"clear",E,E,73,[[["self"]]]],[11,R[514],E,E,74,[[["self"],["b"]]]],[11,R[515],E,E,74,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,74,[[["self"]],["usize"]]],[11,"clear",E,E,74,[[["self"]]]],[11,R[514],E,E,75,[[["self"],["b"]]]],[11,R[515],E,E,75,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,75,[[["self"]],["usize"]]],[11,"clear",E,E,75,[[["self"]]]],[11,R[514],E,E,76,[[["self"],["b"]]]],[11,R[515],E,E,76,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,76,[[["self"]],["usize"]]],[11,"clear",E,E,76,[[["self"]]]],[11,R[514],E,E,77,[[["self"],["b"]]]],[11,R[515],E,E,77,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,77,[[["self"]],["usize"]]],[11,"clear",E,E,77,[[["self"]]]],[11,R[514],E,E,78,[[["self"],["b"]]]],[11,R[515],E,E,78,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,78,[[["self"]],["usize"]]],[11,"clear",E,E,78,[[["self"]]]],[11,R[514],E,E,79,[[["self"],["b"]]]],[11,R[515],E,E,79,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,79,[[["self"]],["usize"]]],[11,"clear",E,E,79,[[["self"]]]],[11,R[514],E,E,80,[[["self"],["b"]]]],[11,R[515],E,E,80,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,80,[[["self"]],["usize"]]],[11,"clear",E,E,80,[[["self"]]]],[11,R[514],E,E,81,[[["self"],["b"]]]],[11,R[515],E,E,81,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,81,[[["self"]],["usize"]]],[11,"clear",E,E,81,[[["self"]]]],[11,R[514],E,E,82,[[["self"],["b"]]]],[11,R[515],E,E,82,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,82,[[["self"]],["usize"]]],[11,"clear",E,E,82,[[["self"]]]],[11,R[514],E,E,83,[[["self"],["b"]]]],[11,R[515],E,E,83,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,83,[[["self"]],["usize"]]],[11,"clear",E,E,83,[[["self"]]]],[11,R[514],E,E,84,[[["self"],["b"]]]],[11,R[515],E,E,84,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,84,[[["self"]],["usize"]]],[11,"clear",E,E,84,[[["self"]]]],[11,R[514],E,E,85,[[["self"],["b"]]]],[11,R[515],E,E,85,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,85,[[["self"]],["usize"]]],[11,"clear",E,E,85,[[["self"]]]],[11,R[514],E,E,86,[[["self"],["b"]]]],[11,R[515],E,E,86,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,86,[[["self"]],["usize"]]],[11,"clear",E,E,86,[[["self"]]]],[11,R[514],E,E,87,[[["self"],["b"]]]],[11,R[515],E,E,87,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,87,[[["self"]],["usize"]]],[11,"clear",E,E,87,[[["self"]]]],[11,R[514],E,E,88,[[["self"],["b"]]]],[11,R[515],E,E,88,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,88,[[["self"]],["usize"]]],[11,"clear",E,E,88,[[["self"]]]],[11,R[514],E,E,89,[[["self"],["b"]]]],[11,R[515],E,E,89,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,89,[[["self"]],["usize"]]],[11,"clear",E,E,89,[[["self"]]]],[11,R[514],E,E,90,[[["self"],["b"]]]],[11,R[515],E,E,90,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,90,[[["self"]],["usize"]]],[11,"clear",E,E,90,[[["self"]]]],[11,"value_strategy",R[472],E,119,[[]]],[11,"deletion_strategy",E,E,119,[[]]],[11,R[516],R[409],E,104,[[]]],[11,R[517],E,E,104,[[]]],[11,R[518],E,E,104,[[]]],[11,R[519],E,E,104,[[]]],[11,R[516],E,E,97,[[]]],[11,R[517],E,E,97,[[]]],[11,R[518],E,E,97,[[]]],[11,R[519],E,R[1651],97,[[]]]],"p":[[3,R[332]],[4,"Access"],[3,"Field"],[3,"Accesses"],[3,R[520]],[3,R[521]],[3,R[522]],[3,R[356]],[3,R[523]],[3,R[405]],[3,R[305]],[3,R[348]],[3,R[524]],[3,R[525]],[3,"EventKey"],[3,R[526]],[3,R[364]],[3,R[368]],[4,R[367]],[4,R[372]],[3,R[527]],[3,"IdentStr"],[3,R[528]],[4,"TypeTag"],[3,R[529]],[3,R[530]],[3,R[357]],[3,R[306]],[3,R[531]],[3,R[334]],[3,R[335]],[3,R[337]],[3,R[338]],[3,R[532]],[3,R[339]],[3,R[340]],[3,R[342]],[3,R[344]],[4,R[533]],[3,"Position"],[3,R[534]],[3,R[535]],[3,R[536]],[3,R[537]],[3,R[538]],[3,R[539]],[3,R[540]],[3,R[541]],[3,R[332]],[3,R[398]],[3,R[334]],[3,R[335]],[3,R[337]],[3,R[338]],[3,R[339]],[3,R[340]],[3,R[342]],[3,R[344]],[3,"Event"],[3,R[348]],[3,R[542]],[3,R[543]],[3,R[530]],[3,R[396]],[3,R[404]],[3,R[397]],[3,R[544]],[3,R[545]],[3,R[400]],[3,R[401]],[3,R[423]],[3,"VmStatus"],[3,R[355]],[3,R[356]],[3,R[428]],[3,R[357]],[3,R[306]],[3,R[546]],[3,R[362]],[3,R[364]],[3,R[367]],[3,R[368]],[3,R[372]],[3,R[384]],[3,R[389]],[3,R[385]],[3,R[390]],[3,R[386]],[3,R[391]],[3,R[387]],[3,R[392]],[4,"ArgType"],[4,R[547]],[4,R[548]],[3,R[397]],[3,R[401]],[4,R[403]],[4,R[549]],[4,R[550]],[4,R[404]],[8,R[551]],[3,"Module"],[3,"Script"],[3,R[552]],[3,R[553]],[3,R[396]],[3,R[554]],[3,R[398]],[3,R[400]],[3,R[362]],[3,R[423]],[3,R[428]],[3,R[431]],[4,R[555]],[3,R[434]],[3,R[435]],[3,"VMStatus"],[4,R[556]],[4,R[557]],[4,"WriteOp"],[3,R[446]],[3,R[558]],[3,R[559]],[3,R[560]],[3,R[561]],[3,R[355]],[3,R[562]],[3,R[563]],[3,R[564]],[3,R[403]]]};
searchIndex["libra_wallet"]={"doc":E,"i":[[0,"error",R[574],"Error crate",N,N],[4,R[601],R[587],"Libra Wallet Error is a convenience enum for generating…",N,N],[13,"LibraWalletGeneric",E,"generic error message",0,N],[6,"Result",E,"We define our own Result type in order to not have to…",N,N],[0,"internal_macros",R[574],"Internal macros The following macros are slightly modified…",N,N],[0,"io_utils",E,"Utils for read/write A module to generate, store and load…",N,N],[5,"recover","libra_wallet::io_utils","Recover wallet from the path specified.",N,[[["p"]],[[R[0],[R[575]]],[R[575]]]]],[5,R[586],E,"Write wallet seed to file.",N,[[[R[575]],["p"]],[R[0]]]],[17,"DELIMITER",E,"Delimiter used to ser/deserialize account data.",N,N],[0,"key_factory",R[574],"Utils for key derivation The following is a minimalist…",N,N],[3,"Master",R[588],"Master is a set of raw bytes that are used for child key…",N,N],[3,R[602],E,"A child number for a derived key, used to derive a certain…",N,N],[3,R[205],E,"Derived private key.",N,N],[3,R[603],E,"Wrapper struct from which we derive child keys",N,N],[3,"Seed",E,"Seed is the output of a one-way function, which accepts a…",N,N],[11,"as_ptr",E,"Converts the object to a raw pointer",1,[[["self"]]]],[11,"as_mut_ptr",E,"Converts the object to a mutable raw pointer",1,[[["self"]]]],[11,"len",E,"Returns the length of the object as an array",1,[[["self"]],["usize"]]],[11,R[12],E,"Returns whether the object, as an array, is empty. Always…",1,[[["self"]],["bool"]]],[11,R[304],E,R[576],1,[[["self"]]]],[11,R[144],E,R[576],1,[[["self"]]]],[11,R[577],E,R[576],1,[[]]],[11,"new",E,"Constructor from u64",2,[[["u64"]],["self"]]],[11,"increment",E,"Bump the ChildNumber",2,[[["self"]]]],[11,"new",E,"Constructor for creating an ExtendedPrivKey from a ed25519…",3,[[[R[579]],[R[192]]],["self"]]],[11,R[578],E,"Returns the PublicKey associated to a particular…",3,[[["self"]],[R[181]]]],[11,R[1727],E,"Computes the sha3 hash of the PublicKey and attempts to…",3,[[["self"]],[[R[0],[R[265]]],[R[265]]]]],[11,"sign",E,"Libra specific sign function that is capable of signing an…",3,[[["self"],[R[149]]],[R[185]]]],[11,"new",E,"Instantiate a new KeyFactor from a Seed, where the [u8;…",4,[[["seed"]],[R[0]]]],[11,"master",E,"Getter for the Master",4,[[["self"]]]],[11,"private_child",E,"Derive a particular PrivateKey at a certain ChildNumber",4,[[["self"],[R[579]]],[[R[0],[R[156]]],[R[156]]]]],[11,"data",E,"Get the underlying Seed internal data",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new",E,"This constructor implements the one-way function that…",5,[[[R[580]],["str"]],["seed"]]],[0,R[580],R[574],"Utils for mnemonic seed The following is a slightly…",N,N],[3,"Mnemonic",R[589],"Mnemonic seed for deterministic key derivation based on…",N,N],[11,"from",E,"Generate mnemonic from string.",6,[[["str"]],[[R[580]],[R[0],[R[580]]]]]],[11,R[580],E,"Generate mnemonic from entropy byte-array.",6,[[],[[R[580]],[R[0],[R[580]]]]]],[11,"write",E,"Write mnemonic to output_file_path.",6,[[["self"],["path"]],[R[0]]]],[11,"read",E,"Read mnemonic from input_file_path.",6,[[["path"]],[R[0]]]],[0,"wallet_library",R[574],"Utils for wallet library The following document is a…",N,N],[3,R[197],R[590],R[581],N,N],[3,R[198],E,R[582],N,N],[8,R[199],E,R[583],N,N],[16,"Hasher",E,R[584],7,N],[10,"hash",E,R[585],7,[[["self"]],[R[149]]]],[3,R[604],E,"WalletLibrary contains all the information needed to…",N,N],[11,"new",E,"Constructor that generates a Mnemonic from OS randomness…",8,[[],["self"]]],[11,"new_from_mnemonic",E,"Constructor that instantiates a new WalletLibrary from…",8,[[[R[580]]],["self"]]],[11,R[580],E,"Function that returns the string representation of the…",8,[[["self"]],[R[58]]]],[11,R[586],E,"Function that writes the wallet Mnemonic to file NOTE:…",8,[[["self"],["path"]],[R[0]]]],[11,"recover",E,"Recover wallet from input_file_path",8,[[["path"]],[[R[0],[R[575]]],[R[575]]]]],[11,"key_leaf",E,"Get the current ChildNumber in u64 format",8,[[["self"]],["u64"]]],[11,"generate_addresses",E,"Function that iterates from the current key_leaf until the…",8,[[["self"],["u64"]],[R[0]]]],[11,"new_address_at_child_number",E,"Function that allows to get the address of a particular…",8,[[["self"],[R[579]]],[[R[0],[R[265]]],[R[265]]]]],[11,"new_address",E,"Function that generates a new key and adds it to the…",8,[[["self"]],[R[0]]]],[11,R[1729],E,"Returns a list of all addresses controlled by this wallet…",8,[[["self"]],[["vec",[R[265]]],[R[0],["vec"]]]]],[11,R[596],E,"Simple public function that allows to sign a Libra…",8,[[["self"],[R[407]]],[[R[0],[R[394]]],[R[394]]]]],[11,"into",R[587],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[59],E,E,0,[[["self"]],["fail"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[588],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[172],E,E,2,[[]]],[11,R[169],E,E,2,[[["self"]],[R[149]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",R[589],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[58]]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],R[590],E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[58]]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,R[169],E,E,9,[[["self"]],[R[149]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,R[169],E,E,10,[[["self"]],[R[149]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[34],E,E,9,[[]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"verify",E,R[591],10,[[["self"],[R[149]],[R[181]]],[[R[0],["error"]],["error"]]]],[11,R[179],E,R[592],10,[[["self"],[R[181]]],[[R[0],["error"]],["error"]]]],[11,R[144],E,E,10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[161],E,R[593],10,[[["vec"],[R[149]]],[[R[0],["error"]],["error"]]]],[11,"eq",E,E,10,[[["self"],[R[185]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[181]]],["bool"]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,R[2],E,R[594],9,[[],[[R[147]],[R[0],[R[181],R[147]]],[R[181]]]]],[11,R[2],E,E,10,[[],[[R[0],[R[185],R[147]]],[R[185]],[R[147]]]]],[11,R[193],E,E,10,[[["d"]],[[R[0],[R[185]]],[R[185]]]]],[11,R[193],E,E,9,[[["d"]],[[R[181]],[R[0],[R[181]]]]]],[11,"clone",E,E,10,[[["self"]],[R[185]]]],[11,"clone",E,E,9,[[["self"]],[R[181]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,9,[[["self"],["h"]]]],[11,"from",E,E,9,[[[R[192]]],[R[181]]]],[11,R[142],E,E,9,[[["self"],["s"]],[R[0]]]],[11,R[142],E,E,10,[[["self"],["s"]],[R[0]]]],[11,R[144],E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"as_mut",R[588],E,2,[[["self"]],["u64"]]],[11,R[75],E,E,2,[[],[R[579]]]],[11,"clone",E,E,1,[[["self"]],["master"]]],[11,"clone",E,E,2,[[["self"]],[R[579]]]],[11,"as_ref",E,E,2,[[["self"]],["u64"]]],[11,R[247],E,E,1,[[["self"],["master"]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",E,E,1,[[["self"],["master"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[579]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[579]]],["bool"]]],[11,"cmp",E,E,1,[[["self"],["master"]],[R[32]]]],[11,"from",R[587],E,0,[[["error"]],[R[595]]]],[11,"from",E,E,0,[[["error"]],[R[595]]]],[11,"from",E,E,0,[[["signatureerror"]],[R[595]]]],[11,"from",E,E,0,[[[R[151]]],[R[595]]]],[11,"from",R[588],E,1,[[],["master"]]],[11,R[57],R[589],E,6,[[["self"]],[R[58]]]],[11,"hash",R[588],E,1,[[["self"],["h"]]]],[11,"hash_slice",E,E,1,[[["h"]]]],[11,"add_assign",E,E,2,[[["self"]]]],[11,"index",E,E,1,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,1,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,1,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,1,[[["self"],["rangefrom",["usize"]],["usize"]]]],[11,"index",E,E,1,[[["self"],["rangefull"]]]],[11,"fmt",R[587],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[588],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[587],E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[61],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[["error"],[R[24],["error"]]]]],[11,R[193],R[588],E,2,[[["__d"]],[R[0]]]],[11,R[142],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[596],R[590],E,8,[[["self"],[R[407]]],[[R[394]],[R[0],[R[394]]]]]],[11,R[144],E,R[597],9,[[["self"]]]],[11,R[144],E,R[598],10,[[["self"]]]],[11,R[599],E,R[600],10,[[],[[R[0],[R[147]]],[R[147]]]]]],"p":[[4,R[601]],[3,"Master"],[3,R[602]],[3,R[205]],[3,R[603]],[3,"Seed"],[3,"Mnemonic"],[8,R[199]],[3,R[604]],[3,R[197]],[3,R[198]]]};
searchIndex["libradb"]={"doc":"This crate provides [`LibraDB`] which represents physical…","i":[[3,"LibraDB","libradb","This holds a handle to the underlying DB responsible for…",N,N],[0,"mock_genesis",E,"This module provides helpers to initialize [`LibraDB`]…",N,N],[3,R[2005],R[2002],"Tuple containing information about the mock genesis state.",N,N],[5,"db_with_mock_genesis",E,"This creates an empty db at input `dir` and initializes it…",N,[[["p"]],[[R[0],["libradb"]],["libradb"]]]],[0,"test_helper","libradb","This module provides reusable helpers in tests.",N,N],[5,"arb_blocks_to_commit","libradb::test_helper","This returns a `proptest` `Strategy` that yields an…",N,[[]]],[0,"errors","libradb","This module defines error types used by `LibraDB`.",N,N],[4,R[2004],R[2003],"This enum defines errors commonly used among `LibraDB` APIs.",N,N],[13,"NotFound",E,"A requested item is not found.",0,N],[13,"TooManyRequested",E,"Requested too many items.",0,N],[0,"schema","libradb","This module defines representation of Libra core data…",N,N],[11,"new",E,"This creates an empty LibraDB instance on disk or opens…",1,[[["asref",["path"]],["path"],["clone"]],["self"]]],[11,R[1545],E,"Returns the latest ledger infos per epoch starting with…",1,[[["self"],["u64"]],[[R[0],["vec"]],["vec",[R[298]]]]]],[11,R[1535],E,"Persist transactions. Called by the executor module when…",1,[[["self"],[R[279]],[R[24]]],[R[0]]]],[11,R[1496],E,"This backs the `UpdateToLatestLedger` public read API…",1,[[["self"],[R[297]],[R[279]],["vec",[R[297]]]],[R[0]]]],[11,R[1541],E,"Gets an account state by account address, out of the…",1,[[["self"],[R[279]],[R[265]]],[R[0]]]],[11,R[1543],E,"Gets information needed from storage during the startup of…",1,[[["self"]],[[R[0],[R[24]]],[R[24],[R[1548]]]]]],[11,R[1539],E,"Gets a batch of transactions for the purpose of…",1,[[["self"],[R[279]],["u64"],["bool"]],[[R[301]],[R[0],[R[301]]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[2002],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[2003],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[59],E,E,0,[[["self"]],["fail"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"deref",R[2002],E,2,[[["self"]]]],[11,"fmt",R[2003],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,0,[[["self"]],[[R[24],[R[35]]],[R[35]]]]],[11,R[172],R[2002],E,2,[[["self"]]]]],"p":[[4,R[2004]],[3,"LibraDB"],[3,R[2005]]]};
searchIndex["memsocket"]={"doc":E,"i":[[3,R[26],"memsocket","An in-memory socket server, listening for connections.",N,N],[3,R[28],E,"Stream returned by the `MemoryListener::incoming` function…",N,N],[3,R[27],E,"An in-memory stream between two local sockets.",N,N],[11,"bind",E,"Creates a new `MemoryListener` which will be bound to the…",0,[[["u16"]],[R[0]]]],[11,"local_addr",E,"Returns the local address that this listener is bound to.",0,[[["self"]],["u16"]]],[11,R[22],E,"Consumes this listener, returning a stream of the sockets…",0,[[["self"]],[R[22]]]],[11,"new_pair",E,"Construct both sides of an in-memory socket.",1,[[]]],[11,"connect",E,"Create a new in-memory Socket connected to the specified…",1,[[["u16"]],[[R[23]],[R[0],[R[23]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[89],E,E,2,[[["pin"],["s"],[R[25]]],[[R[24],[R[0]]],["poll",[R[24]]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,R[101],E,E,2,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[102],E,"Attempt to write bytes from `buf` into the outgoing channel.",1,[[["self"],["pin"],[R[25]]],[["poll",[R[0]]],[R[0],["usize"]]]]],[11,R[103],E,"Attempt to flush the channel. Cannot Fail.",1,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[104],E,"Attempt to close the channel. Cannot Fail.",1,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[105],E,"Attempt to read from the `AsyncRead` into `buf`.",1,[[["self"],["pin"],[R[25]]],[["poll",[R[0]]],[R[0],["usize"]]]]]],"p":[[3,R[26]],[3,R[27]],[3,R[28]]]};
searchIndex["move_lang"]={"doc":E,"i":[[5,"move_check",R[1386],R[1364],N,[[[R[24],[R[333]]],[R[333]]],[R[0]]]],[5,"move_check_no_report",E,"Move check but it returns the errors instead of reporting…",N,[[[R[24],[R[333]]],[R[333]]],[R[0]]]],[5,"move_compile",E,R[1364],N,[[[R[24],[R[333]]],[R[333]]],[R[0]]]],[5,"sanity_check_compiled_units",E,"Runs the bytecode verifier on the compiled units Fails if…",N,[[["vec",[R[1365]]],[R[1365]],[R[1366]]]]],[5,"output_compiled_units",E,"Given a file map and a set of compiled programs, saves the…",N,[[[R[1365]],[R[1366]],["vec",[R[1365]]],["str"]],[R[0]]]],[5,R[1367],E,R[1368],N,[[["char"]],["bool"]]],[5,R[1369],E,R[1370],N,[[["char"]],["bool"]]],[5,R[1371],E,R[1372],N,[[["char"]],["bool"]]],[0,"shared",E,E,N,N],[3,R[739],R[1374],E,N,N],[3,"Loc",E,E,N,N],[3,"Spanned",E,E,N,N],[12,"loc",E,E,0,N],[12,"value",E,E,0,N],[3,"Counter",E,E,N,N],[5,"sp",E,"Function used to have nearly tuple-like syntax for…",N,[[["loc"],[T]],["spanned"]]],[5,"format_delim",E,E,N,[[[R[1373]],["str"]],[R[58]]]],[5,"format_comma",E,E,N,[[[R[1373]]],[R[58]]]],[0,"fake_natives",E,E,N,N],[0,R[351],"move_lang::shared::fake_natives","'Native' functions that are actually bytecode isntructions…",N,N],[17,"MOD","move_lang::shared::fake_natives::transaction",E,N,N],[17,"GAS_PRICE",E,E,N,N],[17,"MAX_GAS",E,E,N,N],[17,"GAS_REMAINING",E,E,N,N],[17,"SENDER",E,E,N,N],[17,"SEQUENCE_NUM",E,E,N,N],[17,"PUBLIC_KEY",E,E,N,N],[17,"ASSERT",E,"'Inlined' during hlir::translate",N,N],[0,"unique_map",R[1374],E,N,N],[3,"UniqueMap",R[1433],"Unique wrapper around `BTreeMap` that throws on duplicate…",N,N],[3,"IntoIter",E,E,N,N],[3,"Iter",E,E,N,N],[3,"IterMut",E,E,N,N],[11,"new",E,E,1,[[],["self"]]],[11,R[12],E,E,1,[[["self"]],["bool"]]],[11,"len",E,E,1,[[["self"]],["usize"]]],[11,"add",E,E,1,[[["self"],["k"],["v"]],[R[0]]]],[11,"contains_key",E,E,1,[[["self"],["k"]],["bool"]]],[11,"get",E,E,1,[[["self"],["k"]],[[R[24]],["v"]]]],[11,"get_mut",E,E,1,[[["self"],["k"]],[["v"],[R[24]]]]],[11,"get_loc",E,E,1,[[["self"],["k"]],[R[24]]]],[11,"remove",E,E,1,[[["self"],["k"]],[R[24]]]],[11,"map",E,E,1,[[["f"]],[R[1375]]]],[11,"ref_map",E,E,1,[[["self"],["f"]],[R[1375]]]],[11,"union_with",E,E,1,[[["self"],["f"]],["self"]]],[11,"iter",E,E,1,[[["self"]],["iter"]]],[11,"iter_mut",E,E,1,[[["self"]],["itermut"]]],[11,"maybe_from_opt_iter",E,E,1,[[],[[R[24],[R[0]]],[R[0],[R[1375]]]]]],[11,"maybe_from_iter",E,E,1,[[],[[R[1375]],[R[0],[R[1375]]]]]],[6,"Name",R[1374],E,N,N],[17,R[1376],E,E,N,N],[8,"TName",E,E,N,N],[16,"Key",E,E,2,N],[16,"Loc",E,E,2,N],[10,R[1442],E,E,2,[[]]],[10,R[1441],E,E,2,[[["self"]]]],[10,"add_loc",E,E,2,[[],["self"]]],[8,R[527],E,E,N,N],[10,"value",E,E,3,[[["self"]],["str"]]],[10,"loc",E,E,3,[[["self"]],["loc"]]],[18,"LIBRA_CORE",E,E,4,N],[11,"new",E,E,4,[[],["self"]]],[11,"to_u8",E,E,4,[[]]],[11,"parse_str",E,E,4,[[["str"]],[[R[0],[R[333],R[58]]],[R[58]],[R[333]]]]],[11,"new",E,E,5,[[["span"],["str"]],["loc"]]],[11,"file",E,E,5,[[],["str"]]],[11,"span",E,E,5,[[],["span"]]],[11,"new",E,E,0,[[["loc"],[T]],["spanned"]]],[11,"next",E,E,6,[[],["u64"]]],[0,"errors",R[1386],E,N,N],[5,"report_errors","move_lang::errors",E,N,[[["errors"],[R[1366]]]]],[5,"report_errors_to_buffer",E,E,N,[[["errors"],[R[1366]]],[["vec",["u8"]],["u8"]]]],[6,"Errors",E,E,N,N],[6,"Error",E,E,N,N],[6,"ErrorSlice",E,E,N,N],[6,"HashableError",E,E,N,N],[6,"FilesSourceText",E,E,N,N],[0,"cfgir",R[1386],E,N,N],[5,"refine",R[1383],"This is a placeholder for \"optimization passes\" that \"fix\"…",N,[[[R[1375]],["blockcfg"],[R[635]]]]],[5,"verify",E,E,N,[[["errors"],[R[1375]],[R[635]],["blockcfg"]]]],[0,"ast",E,E,N,N],[3,"Program",R[1378],E,N,N],[12,"modules",E,E,7,N],[12,"main",E,E,7,N],[3,R[639],E,E,N,N],[12,R[1387],E,E,8,N],[12,"structs",E,E,8,N],[12,R[775],E,E,8,N],[3,R[642],E,E,N,N],[12,R[1388],E,E,9,N],[12,R[1094],E,E,9,N],[12,"fields",E,E,9,N],[3,R[643],E,E,N,N],[12,R[1094],E,E,10,N],[12,R[1395],E,E,10,N],[12,R[1160],E,E,10,N],[3,R[1396],E,E,N,N],[12,R[1377],E,E,11,N],[12,R[412],E,E,11,N],[12,R[1399],E,E,11,N],[12,"body",E,E,11,N],[3,"Label",E,E,N,N],[12,"0",E,E,12,N],[3,R[1397],E,E,N,N],[12,"module",E,E,13,N],[12,"name",E,E,13,N],[12,R[1398],E,E,13,N],[12,"arguments",E,E,13,N],[12,R[1399],E,E,13,N],[3,"Exp",E,E,N,N],[12,"ty",E,E,14,N],[12,"exp",E,E,14,N],[4,R[1389],E,E,N,N],[13,"Defined",E,E,15,N],[13,"Native",E,E,15,N],[4,R[1390],E,E,N,N],[13,"Native",E,E,16,N],[13,"Defined",E,E,16,N],[12,"locals","move_lang::cfgir::ast::FunctionBody_",E,16,N],[12,"start",E,E,16,N],[12,"blocks",E,E,16,N],[4,R[1455],R[1378],E,N,N],[13,"Param",E,E,17,N],[13,"Apply",E,E,17,N],[4,R[1391],E,E,N,N],[13,"Base",E,E,18,N],[13,"Ref",E,E,18,N],[4,"Type_",E,E,N,N],[13,"Unit",E,E,19,N],[13,"Single",E,E,19,N],[13,"Multiple",E,E,19,N],[4,"Command_",E,E,N,N],[13,"Assign",E,E,20,N],[13,"Mutate",E,E,20,N],[13,"Abort",E,E,20,N],[13,"Return",E,E,20,N],[13,R[1403],E,E,20,N],[12,"pop_num",R[1379],E,20,N],[12,"exp",E,E,20,N],[13,"Jump",R[1378],E,20,N],[13,"JumpIf",E,E,20,N],[12,"cond",R[1379],E,20,N],[12,"if_true",E,E,20,N],[12,"if_false",E,E,20,N],[4,"LValue_",R[1378],E,N,N],[13,"Ignore",E,E,21,N],[13,"Var",E,E,21,N],[13,"Unpack",E,E,21,N],[4,R[1404],E,E,N,N],[13,R[746],E,E,22,N],[13,R[1464],E,E,22,N],[13,R[1200],E,E,22,N],[13,"Exists",E,E,22,N],[4,R[1405],E,E,N,N],[13,"Unit",E,E,23,N],[13,"Value",E,E,23,N],[13,"Move",E,E,23,N],[12,R[1406],R[1380],E,23,N],[12,"var",E,E,23,N],[13,"Copy",R[1378],E,23,N],[12,R[1406],R[1380],E,23,N],[12,"var",E,E,23,N],[13,R[1397],R[1378],E,23,N],[13,"Builtin",E,E,23,N],[13,"Freeze",E,E,23,N],[13,R[1240],E,E,23,N],[13,R[1424],E,E,23,N],[13,R[1425],E,E,23,N],[13,"Pack",E,E,23,N],[13,"ExpList",E,E,23,N],[13,"Borrow",E,E,23,N],[13,R[1248],E,E,23,N],[13,R[1392],E,E,23,N],[4,R[1408],E,E,N,N],[13,"Single",E,E,24,N],[13,"Splat",E,E,24,N],[5,"exp",E,E,N,[[[R[1409]],["type"]],["exp"]]],[6,R[648],E,E,N,N],[6,"BaseType",E,E,N,N],[6,R[1410],E,E,N,N],[6,"Type",E,E,N,N],[6,"Blocks",E,E,N,N],[6,R[1991],E,E,N,N],[6,"Command",E,E,N,N],[6,"LValue",E,E,N,N],[6,R[1411],E,E,N,N],[6,R[1412],E,E,N,N],[11,"is_terminal",E,E,20,[[["self"]],["bool"]]],[11,R[1381],E,E,20,[[["self"]],[[R[1384],["label"]],["label"]]]],[11,"builtin",E,E,17,[[["loc"],[R[1413]]],[R[1414]]]],[11,"bool",E,E,17,[[["loc"]],[R[1414]]]],[11,R[333],E,E,17,[[["loc"]],[R[1414]]]],[11,"u64",E,E,17,[[["loc"]],[R[1414]]]],[11,"kind",E,E,17,[[["self"]],["kind"]]],[11,"base",E,E,18,[[[R[1414]]],[R[1382]]]],[11,"bool",E,E,18,[[["loc"]],[R[1382]]]],[11,R[333],E,E,18,[[["loc"]],[R[1382]]]],[11,"u64",E,E,18,[[["loc"]],[R[1382]]]],[11,"kind",E,E,18,[[["self"],["loc"]],["kind"]]],[11,"base",E,E,19,[[[R[1414]]],["type"]]],[11,"single",E,E,19,[[[R[1382]]],["type"]]],[11,"bool",E,E,19,[[["loc"]],["type"]]],[11,R[333],E,E,19,[[["loc"]],["type"]]],[11,"u64",E,E,19,[[["loc"]],["type"]]],[11,R[1415],E,E,19,[[["self"],["usize"]],[R[1382]]]],[0,"cfg",R[1383],E,N,N],[3,"BlockCFG",R[1434],E,N,N],[11,"new",E,E,25,[[["label"],["blocks"]]]],[11,R[1381],E,E,25,[[["self"],["label"]],[R[1384]]]],[11,"predecessors",E,E,25,[[["self"],["label"]],[R[1384]]]],[11,"block",E,E,25,[[["self"],["label"]],[R[1972]]]],[11,"block_mut",E,E,25,[[["self"],["label"]],[R[1972]]]],[11,"blocks_iter_mut",E,E,25,[[["self"]]]],[11,R[1385],E,E,25,[[["self"]],["usize"]]],[11,"start_block",E,E,25,[[["self"]],["label"]]],[0,R[1393],R[1383],E,N,N],[5,"program","move_lang::cfgir::translate",E,N,[[["errors"],["program"]]]],[0,"expansion",R[1386],E,N,N],[0,"ast",R[1394],E,N,N],[3,"Program",R[1435],E,N,N],[12,"modules",E,E,26,N],[12,"main",E,E,26,N],[3,R[639],E,E,N,N],[12,R[1387],E,E,27,N],[12,"structs",E,E,27,N],[12,R[775],E,E,27,N],[3,R[642],E,E,N,N],[12,R[1388],E,E,28,N],[12,R[1094],E,E,28,N],[12,"fields",E,E,28,N],[3,R[643],E,E,N,N],[12,R[1094],E,E,29,N],[12,R[1395],E,E,29,N],[12,R[1160],E,E,29,N],[3,R[1396],E,E,N,N],[12,R[1377],E,E,30,N],[12,R[412],E,E,30,N],[12,R[1399],E,E,30,N],[12,"body",E,E,30,N],[4,R[1389],E,E,N,N],[13,"Defined",E,E,31,N],[13,"Native",E,E,31,N],[4,R[1390],E,E,N,N],[13,"Defined",E,E,32,N],[13,"Native",E,E,32,N],[4,R[1456],E,E,N,N],[13,"Name",E,E,33,N],[13,R[1423],E,E,33,N],[4,R[1391],E,E,N,N],[13,"Apply",E,E,34,N],[13,"Ref",E,E,34,N],[13,R[1392],E,E,34,N],[4,"Type_",E,E,N,N],[13,"Unit",E,E,35,N],[13,"Single",E,E,35,N],[13,"Multiple",E,E,35,N],[4,"Assign_",E,E,N,N],[13,"Var",E,E,36,N],[13,"Unpack",E,E,36,N],[4,"Bind_",E,E,N,N],[13,"Var",E,E,37,N],[13,"Unpack",E,E,37,N],[4,R[1457],E,E,N,N],[13,"Exp",E,E,38,N],[13,"Dot",E,E,38,N],[4,"Exp_",E,E,N,N],[13,"Value",E,E,39,N],[13,"Move",E,E,39,N],[13,"Copy",E,E,39,N],[13,"Name",E,E,39,N],[13,"MName",E,E,39,N],[13,R[645],E,E,39,N],[13,"GlobalCall",E,E,39,N],[13,"Call",E,E,39,N],[13,"IfElse",E,E,39,N],[13,"While",E,E,39,N],[13,"Loop",E,E,39,N],[13,"Block",E,E,39,N],[13,"Assign",E,E,39,N],[13,"Mutate",E,E,39,N],[13,"Return",E,E,39,N],[13,"Abort",E,E,39,N],[13,"Break",E,E,39,N],[13,R[1429],E,E,39,N],[13,R[1240],E,E,39,N],[13,R[1424],E,E,39,N],[13,R[1425],E,E,39,N],[13,"Pack",E,E,39,N],[13,"ExpList",E,E,39,N],[13,"Unit",E,E,39,N],[13,"Borrow",E,E,39,N],[13,"ExpDotted",E,E,39,N],[13,"Annotate",E,E,39,N],[13,R[1392],E,E,39,N],[4,R[1417],E,E,N,N],[13,"Seq",E,E,40,N],[13,"Declare",E,E,40,N],[13,"Bind",E,E,40,N],[6,"Fields",E,E,N,N],[6,R[648],E,E,N,N],[6,"TypeName",E,E,N,N],[6,R[1410],E,E,N,N],[6,"Type",E,E,N,N],[6,"Assign",E,E,N,N],[6,R[1431],E,E,N,N],[6,"Bind",E,E,N,N],[6,"BindList",E,E,N,N],[6,"ExpDotted",E,E,N,N],[6,"Exp",E,E,N,N],[6,"Sequence",E,E,N,N],[6,R[1418],E,E,N,N],[0,R[1393],R[1394],E,N,N],[5,"program","move_lang::expansion::translate",E,N,[[["program"],[R[24],[R[333]]],[R[333]]]]],[0,"hlir",R[1386],E,N,N],[0,"ast",R[1416],E,N,N],[3,"Program",R[1400],E,N,N],[12,"modules",E,E,41,N],[12,"main",E,E,41,N],[3,R[639],E,E,N,N],[12,R[1387],E,E,42,N],[12,"structs",E,E,42,N],[12,R[775],E,E,42,N],[3,R[642],E,E,N,N],[12,R[1388],E,E,43,N],[12,R[1094],E,E,43,N],[12,"fields",E,E,43,N],[3,R[643],E,E,N,N],[12,R[1094],E,E,44,N],[12,R[1395],E,E,44,N],[12,R[1160],E,E,44,N],[3,R[1396],E,E,N,N],[12,R[1377],E,E,45,N],[12,R[412],E,E,45,N],[12,R[1399],E,E,45,N],[12,"body",E,E,45,N],[3,R[1397],E,E,N,N],[12,"module",E,E,46,N],[12,"name",E,E,46,N],[12,R[1398],E,E,46,N],[12,"arguments",E,E,46,N],[12,R[1399],E,E,46,N],[3,"Exp",E,E,N,N],[12,"ty",E,E,47,N],[12,"exp",E,E,47,N],[4,R[1389],E,E,N,N],[13,"Defined",E,E,48,N],[13,"Native",E,E,48,N],[4,R[1390],E,E,N,N],[13,"Native",E,E,49,N],[13,"Defined",E,E,49,N],[12,"locals","move_lang::hlir::ast::FunctionBody_",E,49,N],[12,"body",E,E,49,N],[4,R[1455],R[1400],E,N,N],[13,"Param",E,E,50,N],[13,"Apply",E,E,50,N],[13,R[1392],E,E,50,N],[4,R[1391],E,E,N,N],[13,"Base",E,E,51,N],[13,"Ref",E,E,51,N],[4,"Type_",E,E,N,N],[13,"Unit",E,E,52,N],[13,"Single",E,E,52,N],[13,"Multiple",E,E,52,N],[4,"Statement_",E,E,N,N],[13,"Command",E,E,53,N],[13,"IfElse",E,E,53,N],[12,"cond",R[1402],E,53,N],[12,R[619],E,E,53,N],[12,R[1401],E,E,53,N],[13,"While",R[1400],E,53,N],[12,"cond",R[1402],E,53,N],[12,"block",E,E,53,N],[13,"Loop",R[1400],E,53,N],[12,"block",R[1402],E,53,N],[4,"Command_",R[1400],E,N,N],[13,"Assign",E,E,54,N],[13,"Mutate",E,E,54,N],[13,"Abort",E,E,54,N],[13,"Return",E,E,54,N],[13,"Break",E,E,54,N],[13,R[1429],E,E,54,N],[13,R[1403],E,E,54,N],[12,"pop_num","move_lang::hlir::ast::Command_",E,54,N],[12,"exp",E,E,54,N],[4,"LValue_",R[1400],E,N,N],[13,"Ignore",E,E,55,N],[13,"Var",E,E,55,N],[13,"Unpack",E,E,55,N],[4,R[1404],E,E,N,N],[13,R[746],E,E,56,N],[13,R[1464],E,E,56,N],[13,R[1200],E,E,56,N],[13,"Exists",E,E,56,N],[4,R[1405],E,E,N,N],[13,"Unit",E,E,57,N],[13,"Value",E,E,57,N],[13,"Move",E,E,57,N],[12,R[1406],R[1407],E,57,N],[12,"var",E,E,57,N],[13,"Copy",R[1400],E,57,N],[12,R[1406],R[1407],E,57,N],[12,"var",E,E,57,N],[13,R[1397],R[1400],E,57,N],[13,"Builtin",E,E,57,N],[13,"Freeze",E,E,57,N],[13,R[1240],E,E,57,N],[13,R[1424],E,E,57,N],[13,R[1425],E,E,57,N],[13,"Pack",E,E,57,N],[13,"ExpList",E,E,57,N],[13,"Borrow",E,E,57,N],[13,R[1248],E,E,57,N],[13,R[1392],E,E,57,N],[4,R[1408],E,E,N,N],[13,"Single",E,E,58,N],[13,"Splat",E,E,58,N],[5,"exp",E,E,N,[[[R[1409]],["type"]],["exp"]]],[6,R[648],E,E,N,N],[6,"BaseType",E,E,N,N],[6,R[1410],E,E,N,N],[6,"Type",E,E,N,N],[6,R[649],E,E,N,N],[6,"Block",E,E,N,N],[6,"Command",E,E,N,N],[6,"LValue",E,E,N,N],[6,R[1411],E,E,N,N],[6,R[1412],E,E,N,N],[11,"builtin",E,E,50,[[["loc"],[R[1413]]],[R[1414]]]],[11,"bool",E,E,50,[[["loc"]],[R[1414]]]],[11,R[333],E,E,50,[[["loc"]],[R[1414]]]],[11,"u64",E,E,50,[[["loc"]],[R[1414]]]],[11,"base",E,E,51,[[[R[1414]]],[R[1382]]]],[11,"bool",E,E,51,[[["loc"]],[R[1382]]]],[11,R[333],E,E,51,[[["loc"]],[R[1382]]]],[11,"u64",E,E,51,[[["loc"]],[R[1382]]]],[11,"base",E,E,52,[[[R[1414]]],["type"]]],[11,"single",E,E,52,[[[R[1382]]],["type"]]],[11,"bool",E,E,52,[[["loc"]],["type"]]],[11,R[333],E,E,52,[[["loc"]],["type"]]],[11,"u64",E,E,52,[[["loc"]],["type"]]],[11,R[1415],E,E,52,[[["self"],["usize"]],[R[1382]]]],[11,"from_vec",E,E,52,[[["loc"],["vec",[R[1382]]],[R[1382]]],["type"]]],[0,R[1393],R[1416],E,N,N],[5,"program","move_lang::hlir::translate",E,N,[[["program"]]]],[0,"naming",R[1386],E,N,N],[0,"ast",R[1420],E,N,N],[3,"Program",R[1436],E,N,N],[12,"modules",E,E,59,N],[12,"main",E,E,59,N],[3,R[639],E,E,N,N],[12,R[1387],E,E,60,N],[12,"structs",E,E,60,N],[12,R[775],E,E,60,N],[3,R[642],E,E,N,N],[12,R[1388],E,E,61,N],[12,R[1094],E,E,61,N],[12,"fields",E,E,61,N],[3,R[643],E,E,N,N],[12,R[1094],E,E,62,N],[12,R[1395],E,E,62,N],[12,R[1160],E,E,62,N],[3,R[1396],E,E,N,N],[12,R[1377],E,E,63,N],[12,R[412],E,E,63,N],[12,R[1399],E,E,63,N],[12,"body",E,E,63,N],[3,"TParamID",E,E,N,N],[12,"0",E,E,64,N],[3,"TParam",E,E,N,N],[12,"id",E,E,65,N],[12,"debug",E,E,65,N],[12,"kind",E,E,65,N],[3,"TVar",E,E,N,N],[4,R[1389],E,E,N,N],[13,"Defined",E,E,66,N],[13,"Native",E,E,66,N],[4,R[1390],E,E,N,N],[13,"Defined",E,E,67,N],[13,"Native",E,E,67,N],[4,R[1458],E,E,N,N],[13,R[739],E,E,68,N],[13,"U64",E,E,68,N],[13,"Bool",E,E,68,N],[13,"Bytearray",E,E,68,N],[4,R[1456],E,E,N,N],[13,"Builtin",E,E,69,N],[13,R[1423],E,E,69,N],[4,R[1455],E,E,N,N],[13,"Param",E,E,70,N],[13,"Apply",E,E,70,N],[13,"Var",E,E,70,N],[13,"Anything",E,E,70,N],[4,R[1391],E,E,N,N],[13,"Base",E,E,71,N],[13,"Ref",E,E,71,N],[4,"Type_",E,E,N,N],[13,"Unit",E,E,72,N],[13,"Single",E,E,72,N],[13,"Multiple",E,E,72,N],[4,"Assign_",E,E,N,N],[13,"Ignore",E,E,73,N],[13,"Var",E,E,73,N],[13,"Unpack",E,E,73,N],[4,"Bind_",E,E,N,N],[13,"Ignore",E,E,74,N],[13,"Var",E,E,74,N],[13,"Unpack",E,E,74,N],[4,R[1457],E,E,N,N],[13,"Exp",E,E,75,N],[13,"Dot",E,E,75,N],[4,R[1404],E,E,N,N],[13,R[746],E,E,76,N],[13,R[1464],E,E,76,N],[13,R[1200],E,E,76,N],[13,"Exists",E,E,76,N],[13,"Freeze",E,E,76,N],[4,"Exp_",E,E,N,N],[13,"Value",E,E,77,N],[13,"Move",E,E,77,N],[13,"Copy",E,E,77,N],[13,"Use",E,E,77,N],[13,R[1397],E,E,77,N],[13,"MethodCall",E,E,77,N],[13,"Builtin",E,E,77,N],[13,"IfElse",E,E,77,N],[13,"While",E,E,77,N],[13,"Loop",E,E,77,N],[13,"Block",E,E,77,N],[13,"Assign",E,E,77,N],[13,"Mutate",E,E,77,N],[13,"Return",E,E,77,N],[13,"Abort",E,E,77,N],[13,"Break",E,E,77,N],[13,R[1429],E,E,77,N],[13,R[1240],E,E,77,N],[13,R[1424],E,E,77,N],[13,R[1425],E,E,77,N],[13,"Pack",E,E,77,N],[13,"ExpList",E,E,77,N],[13,"Unit",E,E,77,N],[13,"DerefBorrow",E,E,77,N],[13,"Borrow",E,E,77,N],[13,"Annotate",E,E,77,N],[13,R[1392],E,E,77,N],[4,R[1417],E,E,N,N],[13,"Seq",E,E,78,N],[13,"Declare",E,E,78,N],[13,"Bind",E,E,78,N],[6,R[648],E,E,N,N],[6,"BuiltinTypeName",E,E,N,N],[6,"TypeName",E,E,N,N],[6,"BaseType",E,E,N,N],[6,R[1410],E,E,N,N],[6,"Type",E,E,N,N],[6,"Assign",E,E,N,N],[6,R[1431],E,E,N,N],[6,"Bind",E,E,N,N],[6,"BindList",E,E,N,N],[6,"ExpDotted",E,E,N,N],[6,R[1411],E,E,N,N],[6,"Exp",E,E,N,N],[6,"Sequence",E,E,N,N],[6,R[1418],E,E,N,N],[18,"ADDRESS",E,E,68,N],[18,"U_64",E,E,68,N],[18,"BOOL",E,E,68,N],[18,"BYTE_ARRAY",E,E,68,N],[11,"signed",E,E,68,[[],[[R[1384],[R[1413]]],[R[1413]]]]],[11,"numeric",E,E,68,[[],[[R[1384],[R[1413]]],[R[1413]]]]],[11,"bits",E,E,68,[[],[[R[1384],[R[1413]]],[R[1413]]]]],[11,"ordered",E,E,68,[[],[[R[1384],[R[1413]]],[R[1413]]]]],[11,"resolve",E,E,68,[[["str"]],[R[24]]]],[11,"kind",E,E,68,[[["self"]],["kind_"]]],[11,"tparam_constraints",E,E,68,[[["self"],["loc"]],[["kind"],["vec",["kind"]]]]],[11,"next",E,E,64,[[],[R[1447]]]],[11,"next",E,E,79,[[],["tvar"]]],[18,"MOVE_TO_SENDER",E,E,76,N],[18,"MOVE_FROM",E,E,76,N],[18,"BORROW_GLOBAL",E,E,76,N],[18,"BORROW_GLOBAL_MUT",E,E,76,N],[18,"EXISTS",E,E,76,N],[18,"FREEZE",E,E,76,N],[11,R[1419],E,E,70,[[["self"],["hashmap"]],[R[58]]]],[11,"anything",E,E,70,[[["loc"]],[R[1414]]]],[11,"builtin",E,E,70,[[["loc"],[R[1413]]],[R[1414]]]],[11,"bool",E,E,70,[[["loc"]],[R[1414]]]],[11,R[333],E,E,70,[[["loc"]],[R[1414]]]],[11,"u64",E,E,70,[[["loc"]],[R[1414]]]],[11,R[1419],E,E,71,[[["self"],["hashmap"]],[R[58]]]],[11,"base",E,E,71,[[[R[1414]]],[R[1382]]]],[11,"anything",E,E,71,[[["loc"]],[R[1382]]]],[11,"bool",E,E,71,[[["loc"]],[R[1382]]]],[11,R[333],E,E,71,[[["loc"]],[R[1382]]]],[11,"u64",E,E,71,[[["loc"]],[R[1382]]]],[11,R[1419],E,E,72,[[["self"],["hashmap"]],[R[58]]]],[11,"base",E,E,72,[[[R[1414]]],["type"]]],[11,"single",E,E,72,[[[R[1382]]],["type"]]],[11,"anything",E,E,72,[[["loc"]],["type"]]],[11,"bool",E,E,72,[[["loc"]],["type"]]],[11,R[333],E,E,72,[[["loc"]],["type"]]],[11,"u64",E,E,72,[[["loc"]],["type"]]],[0,R[1393],R[1420],E,N,N],[5,"program","move_lang::naming::translate",E,N,[[["errors"],["program"]]]],[0,"parser",R[1386],E,N,N],[0,"syntax",R[1422],E,N,N],[3,"FileParser",R[1437],E,N,N],[3,"Token",E,E,N,N],[12,"0",E,E,80,N],[12,"1",E,E,80,N],[11,"new",E,E,81,[[],["fileparser"]]],[11,"parse",E,E,81,[[["self"],["str"],["str"]],[[R[608],["usize","token","str"]],[R[1421]],[R[0],[R[1421],R[608]]]]]],[8,"__ToTriple",E,E,N,N],[10,"to_triple",E,E,82,[[],[[R[0],[R[608]]],[R[608],["usize","token","str"]]]]],[0,"ast",R[1422],E,N,N],[3,"Program",R[1438],E,N,N],[12,"source_definitions",E,E,83,N],[12,"lib_definitions",E,E,83,N],[3,"Main",E,E,N,N],[12,"uses",E,E,84,N],[12,R[636],E,E,84,N],[3,R[651],E,E,N,N],[12,"0",E,E,85,N],[3,R[1459],E,E,N,N],[12,"name",E,E,86,N],[12,R[333],E,E,86,N],[3,R[645],E,E,N,N],[12,"0",E,E,87,N],[3,R[639],E,E,N,N],[12,"uses",E,E,88,N],[12,"name",E,E,88,N],[12,"structs",E,E,88,N],[12,R[775],E,E,88,N],[3,"Field",E,E,N,N],[12,"0",E,E,89,N],[3,R[652],E,E,N,N],[12,"0",E,E,90,N],[3,R[642],E,E,N,N],[12,R[1388],E,E,91,N],[12,"name",E,E,91,N],[12,R[1094],E,E,91,N],[12,"fields",E,E,91,N],[3,R[653],E,E,N,N],[12,"0",E,E,92,N],[3,R[643],E,E,N,N],[12,R[1094],E,E,93,N],[12,R[1395],E,E,93,N],[12,R[1160],E,E,93,N],[3,R[1396],E,E,N,N],[12,R[1377],E,E,94,N],[12,R[412],E,E,94,N],[12,R[1399],E,E,94,N],[12,"name",E,E,94,N],[12,"body",E,E,94,N],[3,"Var",E,E,N,N],[12,"0",E,E,95,N],[4,R[1460],E,E,N,N],[13,"Modules",E,E,96,N],[13,"Main",E,E,96,N],[4,R[1461],E,E,N,N],[13,"Sender",E,E,97,N],[13,"Specified",E,E,97,N],[4,R[1389],E,E,N,N],[13,"Defined",E,E,98,N],[13,"Native",E,E,98,N],[4,R[647],E,E,N,N],[13,"Public",E,E,99,N],[13,"Internal",E,E,99,N],[4,R[1390],E,E,N,N],[13,"Defined",E,E,100,N],[13,"Native",E,E,100,N],[4,R[1456],E,E,N,N],[13,"Name",E,E,101,N],[13,R[1423],E,E,101,N],[13,"QualifiedModuleType",E,E,101,N],[4,"Kind_",E,E,N,N],[13,"Unknown",E,E,102,N],[13,"Resource",E,E,102,N],[13,"Affine",E,E,102,N],[13,R[737],E,E,102,N],[4,R[1391],E,E,N,N],[13,"Apply",E,E,103,N],[13,"Ref",E,E,103,N],[4,"Type_",E,E,N,N],[13,"Unit",E,E,104,N],[13,"Single",E,E,104,N],[13,"Multiple",E,E,104,N],[4,"Bind_",E,E,N,N],[13,"Var",E,E,105,N],[13,"Unpack",E,E,105,N],[4,"Value_",E,E,N,N],[13,R[739],E,E,106,N],[13,"U64",E,E,106,N],[13,"Bool",E,E,106,N],[13,"Bytearray",E,E,106,N],[4,"UnaryOp_",E,E,N,N],[13,"Not",E,E,107,N],[13,"Neg",E,E,107,N],[4,"BinOp_",E,E,N,N],[13,"Add",E,E,108,N],[13,"Sub",E,E,108,N],[13,"Mul",E,E,108,N],[13,"Mod",E,E,108,N],[13,"Div",E,E,108,N],[13,"BitOr",E,E,108,N],[13,"BitAnd",E,E,108,N],[13,"Xor",E,E,108,N],[13,"And",E,E,108,N],[13,"Or",E,E,108,N],[13,"Eq",E,E,108,N],[13,"Neq",E,E,108,N],[13,"Lt",E,E,108,N],[13,"Gt",E,E,108,N],[13,"Le",E,E,108,N],[13,"Ge",E,E,108,N],[4,"Exp_",E,E,N,N],[13,"Value",E,E,109,N],[13,"Move",E,E,109,N],[13,"Copy",E,E,109,N],[13,"Name",E,E,109,N],[13,"NameTypeArgs",E,E,109,N],[13,"MName",E,E,109,N],[13,"MNameTypeArgs",E,E,109,N],[13,"GlobalApply",E,E,109,N],[13,"Apply",E,E,109,N],[13,"Fields",E,E,109,N],[13,"IfElse",E,E,109,N],[13,"While",E,E,109,N],[13,"Loop",E,E,109,N],[13,"Block",E,E,109,N],[13,"ExpList",E,E,109,N],[13,"Unit",E,E,109,N],[13,"Assign",E,E,109,N],[13,"Return",E,E,109,N],[13,"Abort",E,E,109,N],[13,"Break",E,E,109,N],[13,R[1429],E,E,109,N],[13,R[1240],E,E,109,N],[13,R[1424],E,E,109,N],[13,R[1425],E,E,109,N],[13,"Borrow",E,E,109,N],[13,"Dot",E,E,109,N],[13,"MDot",E,E,109,N],[13,"Annotate",E,E,109,N],[13,R[1392],E,E,109,N],[4,R[1417],E,E,N,N],[13,"Seq",E,E,110,N],[13,"Declare",E,E,110,N],[13,"Bind",E,E,110,N],[6,"ResourceLoc",E,E,N,N],[6,R[648],E,E,N,N],[6,"TypeName",E,E,N,N],[6,"Kind",E,E,N,N],[6,R[1410],E,E,N,N],[6,"Type",E,E,N,N],[6,"Bind",E,E,N,N],[6,"BindList",E,E,N,N],[6,"Value",E,E,N,N],[6,"UnaryOp",E,E,N,N],[6,"BinOp",E,E,N,N],[6,"Exp",E,E,N,N],[6,"Sequence",E,E,N,N],[6,R[1418],E,E,N,N],[11,"loc",E,E,87,[[["self"]],["loc"]]],[18,"SELF_NAME",E,E,85,N],[18,"MAIN_NAME",E,E,92,N],[11,"starts_with_underscore",E,E,95,[[["self"]],["bool"]]],[18,"VALUE_CONSTRAINT",E,E,102,N],[18,"RESOURCE_CONSTRAINT",E,E,102,N],[11,"unit",E,E,104,[[["loc"]],["type"]]],[0,"to_bytecode",R[1386],E,N,N],[0,R[1393],"move_lang::to_bytecode",E,N,N],[4,R[1462],R[1439],E,N,N],[13,"Module",E,E,111,N],[13,"Script",E,E,111,N],[5,"verify_units",E,E,N,[[["vec",[R[1365]]],[R[1365]]]]],[5,"program",E,E,N,[[["program"]],[["vec",[R[1365]]],["errors"],[R[0],["vec","errors"]]]]],[11,"name",E,E,111,[[["self"]],[R[58]]]],[11,R[142],E,E,111,[[],[["vec",["u8"]],["u8"]]]],[11,"serialize_debug",E,E,111,[[],[["vec",["u8"]],["u8"]]]],[11,"verify",E,E,111,[[]]],[0,"typing",R[1386],E,N,N],[0,"ast",R[1432],E,N,N],[3,"Program",R[1427],E,N,N],[12,"modules",E,E,112,N],[12,"main",E,E,112,N],[3,R[639],E,E,N,N],[12,R[1387],E,E,113,N],[12,"structs",E,E,113,N],[12,R[775],E,E,113,N],[3,R[1396],E,E,N,N],[12,R[1377],E,E,114,N],[12,R[412],E,E,114,N],[12,R[1399],E,E,114,N],[12,"body",E,E,114,N],[3,R[1397],E,E,N,N],[12,"module",E,E,115,N],[12,"name",E,E,115,N],[12,R[1398],E,E,115,N],[12,"arguments",E,E,115,N],[12,"parameter_types",E,E,115,N],[12,R[1399],E,E,115,N],[3,"Exp",E,E,N,N],[12,"ty",E,E,116,N],[12,"exp",E,E,116,N],[4,R[1390],E,E,N,N],[13,"Defined",E,E,117,N],[13,"Native",E,E,117,N],[4,"Assign_",E,E,N,N],[13,"Ignore",E,E,118,N],[13,"Var",E,E,118,N],[13,"Unpack",E,E,118,N],[13,R[1426],E,E,118,N],[4,"Bind_",E,E,N,N],[13,"Ignore",E,E,119,N],[13,"Var",E,E,119,N],[13,"Unpack",E,E,119,N],[13,R[1426],E,E,119,N],[4,R[1404],E,E,N,N],[13,R[746],E,E,120,N],[13,R[1464],E,E,120,N],[13,R[1200],E,E,120,N],[13,"Exists",E,E,120,N],[13,"Freeze",E,E,120,N],[4,R[1405],E,E,N,N],[13,"Unit",E,E,121,N],[13,"Value",E,E,121,N],[13,"Move",E,E,121,N],[12,R[1406],R[1428],E,121,N],[12,"var",E,E,121,N],[13,"Copy",R[1427],E,121,N],[12,R[1406],R[1428],E,121,N],[12,"var",E,E,121,N],[13,"Use",R[1427],E,121,N],[13,R[1397],E,E,121,N],[13,"Builtin",E,E,121,N],[13,"IfElse",E,E,121,N],[13,"While",E,E,121,N],[13,"Loop",E,E,121,N],[13,"Block",E,E,121,N],[13,"Assign",E,E,121,N],[13,"Mutate",E,E,121,N],[13,"Return",E,E,121,N],[13,"Abort",E,E,121,N],[13,"Break",E,E,121,N],[13,R[1429],E,E,121,N],[13,R[1240],E,E,121,N],[13,R[1424],E,E,121,N],[13,R[1425],E,E,121,N],[13,"Pack",E,E,121,N],[13,"ExpList",E,E,121,N],[13,"Borrow",E,E,121,N],[13,"TempBorrow",E,E,121,N],[13,R[1248],E,E,121,N],[13,R[1392],E,E,121,N],[4,R[1417],E,E,N,N],[13,"Seq",E,E,122,N],[13,"Declare",E,E,122,N],[13,"Bind",E,E,122,N],[4,R[1408],E,E,N,N],[13,"Single",E,E,123,N],[13,"Splat",E,E,123,N],[5,"exp",E,E,N,[[["type"],[R[1409]]],["exp"]]],[5,"single_item",E,E,N,[[["exp"]],[R[1430]]]],[5,"splat_item",E,E,N,[[["loc"],["exp"]],[R[1430]]]],[6,R[648],E,E,N,N],[6,"Assign",E,E,N,N],[6,R[1431],E,E,N,N],[6,"Bind",E,E,N,N],[6,"BindList",E,E,N,N],[6,R[1411],E,E,N,N],[6,R[1412],E,E,N,N],[6,"Sequence",E,E,N,N],[6,R[1418],E,E,N,N],[0,R[1393],R[1432],E,N,N],[5,"program","move_lang::typing::translate",E,N,[[["program"],["errors"]]]],[5,"join_single",E,E,N,[[["fnonce"],[R[1382]],[R[25]],["loc"]],[R[1382]]]],[0,"command_line",R[1386],E,N,N],[5,"parse_address","move_lang::command_line",E,N,[[["str"]],[[R[0],[R[333],R[58]]],[R[58]],[R[333]]]]],[5,"leak_str",E,E,N,[[["str"]],["str"]]],[17,"SOURCE_FILES",E,E,N,N],[17,"SOURCE_FILES_SHORT",E,E,N,N],[17,"DEPENDENCIES",E,E,N,N],[17,"DEPENDENCIES_SHORT",E,E,N,N],[17,"SENDER",E,E,N,N],[17,"SENDER_SHORT",E,E,N,N],[17,"OUT_DIR",E,E,N,N],[17,"OUT_DIR_SHORT",E,E,N,N],[17,"DEFAULT_OUTPUT_DIR",E,E,N,N],[0,"test_utils",R[1386],E,N,N],[3,R[1463],R[1440],E,N,N],[5,"stdlib_files",E,E,N,[[],[["vec",["str"]],["str"]]]],[5,"read_env_var",E,E,N,[[["str"]],[R[58]]]],[5,"read_bool_var",E,E,N,[[["str"]],["bool"]]],[5,"error",E,E,N,[[[R[58]]],[R[0]]]],[17,"STD_LIB",E,E,N,N],[17,"SENDER",E,E,N,N],[14,"bail",R[1386],E,N,N],[11,R[13],R[1374],E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[58]]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[451],E,E,4,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[452],E,E,4,[[["self"],["w"]],[[R[0],["error"]],["error"]]]],[11,R[453],E,R[454],4,[[["self"]],[["u5"],["vec",["u5"]]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[172],E,E,4,[[]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[455],E,E,4,[[],[["vec",["u5"]],[R[0],["vec"]]]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[172],E,E,5,[[]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[172],E,E,0,[[]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],R[1433],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,R[246],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,124,[[],[U]]],[11,R[246],E,E,124,[[],["i"]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[2],E,E,124,[[[U]],[R[0]]]],[11,R[3],E,E,124,[[],[R[0]]]],[11,R[4],E,E,124,[[["self"]],[T]]],[11,R[5],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[R[7]]]],[11,"vzip",E,E,124,[[],["v"]]],[11,"into",E,E,125,[[],[U]]],[11,R[246],E,E,125,[[],["i"]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[2],E,E,125,[[[U]],[R[0]]]],[11,R[3],E,E,125,[[],[R[0]]]],[11,R[4],E,E,125,[[["self"]],[T]]],[11,R[5],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[R[7]]]],[11,"vzip",E,E,125,[[],["v"]]],[11,"into",E,E,126,[[],[U]]],[11,R[246],E,E,126,[[],["i"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[2],E,E,126,[[[U]],[R[0]]]],[11,R[3],E,E,126,[[],[R[0]]]],[11,R[4],E,E,126,[[["self"]],[T]]],[11,R[5],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[R[7]]]],[11,"vzip",E,E,126,[[],["v"]]],[11,"into",R[1378],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",R[1434],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",R[1435],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[57],E,E,33,[[["self"]],[R[58]]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[57],E,E,34,[[["self"]],[R[58]]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[2],E,E,36,[[[U]],[R[0]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[R[7]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[2],E,E,37,[[[U]],[R[0]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[R[7]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[2],E,E,38,[[[U]],[R[0]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[R[7]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[2],E,E,39,[[[U]],[R[0]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[R[7]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[2],E,E,40,[[[U]],[R[0]]]],[11,R[3],E,E,40,[[],[R[0]]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[R[7]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",R[1400],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[2],E,E,41,[[[U]],[R[0]]]],[11,R[3],E,E,41,[[],[R[0]]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[R[7]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[2],E,E,42,[[[U]],[R[0]]]],[11,R[3],E,E,42,[[],[R[0]]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[R[7]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[2],E,E,43,[[[U]],[R[0]]]],[11,R[3],E,E,43,[[],[R[0]]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[R[7]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[2],E,E,44,[[[U]],[R[0]]]],[11,R[3],E,E,44,[[],[R[0]]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[R[7]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[2],E,E,45,[[[U]],[R[0]]]],[11,R[3],E,E,45,[[],[R[0]]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[R[7]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[2],E,E,46,[[[U]],[R[0]]]],[11,R[3],E,E,46,[[],[R[0]]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[R[7]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[2],E,E,47,[[[U]],[R[0]]]],[11,R[3],E,E,47,[[],[R[0]]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[R[7]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[2],E,E,48,[[[U]],[R[0]]]],[11,R[3],E,E,48,[[],[R[0]]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[R[7]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[2],E,E,49,[[[U]],[R[0]]]],[11,R[3],E,E,49,[[],[R[0]]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[R[7]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[2],E,E,50,[[[U]],[R[0]]]],[11,R[3],E,E,50,[[],[R[0]]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[R[7]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[2],E,E,51,[[[U]],[R[0]]]],[11,R[3],E,E,51,[[],[R[0]]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[R[7]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[2],E,E,52,[[[U]],[R[0]]]],[11,R[3],E,E,52,[[],[R[0]]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[R[7]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[2],E,E,53,[[[U]],[R[0]]]],[11,R[3],E,E,53,[[],[R[0]]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[R[7]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[2],E,E,54,[[[U]],[R[0]]]],[11,R[3],E,E,54,[[],[R[0]]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[R[7]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[2],E,E,55,[[[U]],[R[0]]]],[11,R[3],E,E,55,[[],[R[0]]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[R[7]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[2],E,E,56,[[[U]],[R[0]]]],[11,R[3],E,E,56,[[],[R[0]]]],[11,R[4],E,E,56,[[["self"]],[T]]],[11,R[5],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[R[7]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[2],E,E,57,[[[U]],[R[0]]]],[11,R[3],E,E,57,[[],[R[0]]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[R[7]]]],[11,"vzip",E,E,57,[[],["v"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[2],E,E,58,[[[U]],[R[0]]]],[11,R[3],E,E,58,[[],[R[0]]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[R[7]]]],[11,"vzip",E,E,58,[[],["v"]]],[11,"into",R[1436],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[2],E,E,59,[[[U]],[R[0]]]],[11,R[3],E,E,59,[[],[R[0]]]],[11,R[4],E,E,59,[[["self"]],[T]]],[11,R[5],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[R[7]]]],[11,"vzip",E,E,59,[[],["v"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[2],E,E,60,[[[U]],[R[0]]]],[11,R[3],E,E,60,[[],[R[0]]]],[11,R[4],E,E,60,[[["self"]],[T]]],[11,R[5],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[R[7]]]],[11,"vzip",E,E,60,[[],["v"]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[2],E,E,61,[[[U]],[R[0]]]],[11,R[3],E,E,61,[[],[R[0]]]],[11,R[4],E,E,61,[[["self"]],[T]]],[11,R[5],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[R[7]]]],[11,"vzip",E,E,61,[[],["v"]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"],[T]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[2],E,E,62,[[[U]],[R[0]]]],[11,R[3],E,E,62,[[],[R[0]]]],[11,R[4],E,E,62,[[["self"]],[T]]],[11,R[5],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[R[7]]]],[11,"vzip",E,E,62,[[],["v"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[2],E,E,63,[[[U]],[R[0]]]],[11,R[3],E,E,63,[[],[R[0]]]],[11,R[4],E,E,63,[[["self"]],[T]]],[11,R[5],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[R[7]]]],[11,"vzip",E,E,63,[[],["v"]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"],[T]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[2],E,E,64,[[[U]],[R[0]]]],[11,R[3],E,E,64,[[],[R[0]]]],[11,R[4],E,E,64,[[["self"]],[T]]],[11,R[5],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[R[7]]]],[11,"vzip",E,E,64,[[],["v"]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"],[T]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[2],E,E,65,[[[U]],[R[0]]]],[11,R[3],E,E,65,[[],[R[0]]]],[11,R[4],E,E,65,[[["self"]],[T]]],[11,R[5],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[R[7]]]],[11,"vzip",E,E,65,[[],["v"]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[["self"],[T]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[2],E,E,79,[[[U]],[R[0]]]],[11,R[3],E,E,79,[[],[R[0]]]],[11,R[4],E,E,79,[[["self"]],[T]]],[11,R[5],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[R[7]]]],[11,"vzip",E,E,79,[[],["v"]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"],[T]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[2],E,E,66,[[[U]],[R[0]]]],[11,R[3],E,E,66,[[],[R[0]]]],[11,R[4],E,E,66,[[["self"]],[T]]],[11,R[5],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[R[7]]]],[11,"vzip",E,E,66,[[],["v"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[2],E,E,67,[[[U]],[R[0]]]],[11,R[3],E,E,67,[[],[R[0]]]],[11,R[4],E,E,67,[[["self"]],[T]]],[11,R[5],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[R[7]]]],[11,"vzip",E,E,67,[[],["v"]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"],[T]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[57],E,E,68,[[["self"]],[R[58]]]],[11,R[2],E,E,68,[[[U]],[R[0]]]],[11,R[3],E,E,68,[[],[R[0]]]],[11,R[4],E,E,68,[[["self"]],[T]]],[11,R[5],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[R[7]]]],[11,"vzip",E,E,68,[[],["v"]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"],[T]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[57],E,E,69,[[["self"]],[R[58]]]],[11,R[2],E,E,69,[[[U]],[R[0]]]],[11,R[3],E,E,69,[[],[R[0]]]],[11,R[4],E,E,69,[[["self"]],[T]]],[11,R[5],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[R[7]]]],[11,"vzip",E,E,69,[[],["v"]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"],[T]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[2],E,E,70,[[[U]],[R[0]]]],[11,R[3],E,E,70,[[],[R[0]]]],[11,R[4],E,E,70,[[["self"]],[T]]],[11,R[5],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[R[7]]]],[11,"vzip",E,E,70,[[],["v"]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"],[T]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[2],E,E,71,[[[U]],[R[0]]]],[11,R[3],E,E,71,[[],[R[0]]]],[11,R[4],E,E,71,[[["self"]],[T]]],[11,R[5],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[R[7]]]],[11,"vzip",E,E,71,[[],["v"]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"],[T]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[2],E,E,72,[[[U]],[R[0]]]],[11,R[3],E,E,72,[[],[R[0]]]],[11,R[4],E,E,72,[[["self"]],[T]]],[11,R[5],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[R[7]]]],[11,"vzip",E,E,72,[[],["v"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[2],E,E,73,[[[U]],[R[0]]]],[11,R[3],E,E,73,[[],[R[0]]]],[11,R[4],E,E,73,[[["self"]],[T]]],[11,R[5],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[R[7]]]],[11,"vzip",E,E,73,[[],["v"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[2],E,E,74,[[[U]],[R[0]]]],[11,R[3],E,E,74,[[],[R[0]]]],[11,R[4],E,E,74,[[["self"]],[T]]],[11,R[5],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[R[7]]]],[11,"vzip",E,E,74,[[],["v"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[2],E,E,75,[[[U]],[R[0]]]],[11,R[3],E,E,75,[[],[R[0]]]],[11,R[4],E,E,75,[[["self"]],[T]]],[11,R[5],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[R[7]]]],[11,"vzip",E,E,75,[[],["v"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[2],E,E,76,[[[U]],[R[0]]]],[11,R[3],E,E,76,[[],[R[0]]]],[11,R[4],E,E,76,[[["self"]],[T]]],[11,R[5],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[R[7]]]],[11,"vzip",E,E,76,[[],["v"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[2],E,E,77,[[[U]],[R[0]]]],[11,R[3],E,E,77,[[],[R[0]]]],[11,R[4],E,E,77,[[["self"]],[T]]],[11,R[5],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[R[7]]]],[11,"vzip",E,E,77,[[],["v"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[2],E,E,78,[[[U]],[R[0]]]],[11,R[3],E,E,78,[[],[R[0]]]],[11,R[4],E,E,78,[[["self"]],[T]]],[11,R[5],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[R[7]]]],[11,"vzip",E,E,78,[[],["v"]]],[11,"into",R[1437],E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[2],E,E,81,[[[U]],[R[0]]]],[11,R[3],E,E,81,[[],[R[0]]]],[11,R[4],E,E,81,[[["self"]],[T]]],[11,R[5],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[R[7]]]],[11,"vzip",E,E,81,[[],["v"]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[["self"],[T]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[57],E,E,80,[[["self"]],[R[58]]]],[11,R[2],E,E,80,[[[U]],[R[0]]]],[11,R[3],E,E,80,[[],[R[0]]]],[11,R[4],E,E,80,[[["self"]],[T]]],[11,R[5],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[R[7]]]],[11,"vzip",E,E,80,[[],["v"]]],[11,"into",R[1438],E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[2],E,E,83,[[[U]],[R[0]]]],[11,R[3],E,E,83,[[],[R[0]]]],[11,R[4],E,E,83,[[["self"]],[T]]],[11,R[5],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[R[7]]]],[11,"vzip",E,E,83,[[],["v"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[2],E,E,84,[[[U]],[R[0]]]],[11,R[3],E,E,84,[[],[R[0]]]],[11,R[4],E,E,84,[[["self"]],[T]]],[11,R[5],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[R[7]]]],[11,"vzip",E,E,84,[[],["v"]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[["self"],[T]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[57],E,E,85,[[["self"]],[R[58]]]],[11,R[2],E,E,85,[[[U]],[R[0]]]],[11,R[3],E,E,85,[[],[R[0]]]],[11,R[4],E,E,85,[[["self"]],[T]]],[11,R[5],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[R[7]]]],[11,"vzip",E,E,85,[[],["v"]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[["self"],[T]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[2],E,E,86,[[[U]],[R[0]]]],[11,R[3],E,E,86,[[],[R[0]]]],[11,R[4],E,E,86,[[["self"]],[T]]],[11,R[5],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[R[7]]]],[11,"vzip",E,E,86,[[],["v"]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[["self"],[T]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[57],E,E,87,[[["self"]],[R[58]]]],[11,R[2],E,E,87,[[[U]],[R[0]]]],[11,R[3],E,E,87,[[],[R[0]]]],[11,R[4],E,E,87,[[["self"]],[T]]],[11,R[5],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[R[7]]]],[11,"vzip",E,E,87,[[],["v"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[2],E,E,88,[[[U]],[R[0]]]],[11,R[3],E,E,88,[[],[R[0]]]],[11,R[4],E,E,88,[[["self"]],[T]]],[11,R[5],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[R[7]]]],[11,"vzip",E,E,88,[[],["v"]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[["self"],[T]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[57],E,E,89,[[["self"]],[R[58]]]],[11,R[2],E,E,89,[[[U]],[R[0]]]],[11,R[3],E,E,89,[[],[R[0]]]],[11,R[4],E,E,89,[[["self"]],[T]]],[11,R[5],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[R[7]]]],[11,"vzip",E,E,89,[[],["v"]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[["self"],[T]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[57],E,E,90,[[["self"]],[R[58]]]],[11,R[2],E,E,90,[[[U]],[R[0]]]],[11,R[3],E,E,90,[[],[R[0]]]],[11,R[4],E,E,90,[[["self"]],[T]]],[11,R[5],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[R[7]]]],[11,"vzip",E,E,90,[[],["v"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[2],E,E,91,[[[U]],[R[0]]]],[11,R[3],E,E,91,[[],[R[0]]]],[11,R[4],E,E,91,[[["self"]],[T]]],[11,R[5],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[R[7]]]],[11,"vzip",E,E,91,[[],["v"]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[["self"],[T]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[57],E,E,92,[[["self"]],[R[58]]]],[11,R[2],E,E,92,[[[U]],[R[0]]]],[11,R[3],E,E,92,[[],[R[0]]]],[11,R[4],E,E,92,[[["self"]],[T]]],[11,R[5],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[R[7]]]],[11,"vzip",E,E,92,[[],["v"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[2],E,E,93,[[[U]],[R[0]]]],[11,R[3],E,E,93,[[],[R[0]]]],[11,R[4],E,E,93,[[["self"]],[T]]],[11,R[5],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[R[7]]]],[11,"vzip",E,E,93,[[],["v"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[2],E,E,94,[[[U]],[R[0]]]],[11,R[3],E,E,94,[[],[R[0]]]],[11,R[4],E,E,94,[[["self"]],[T]]],[11,R[5],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[R[7]]]],[11,"vzip",E,E,94,[[],["v"]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[["self"],[T]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[57],E,E,95,[[["self"]],[R[58]]]],[11,R[2],E,E,95,[[[U]],[R[0]]]],[11,R[3],E,E,95,[[],[R[0]]]],[11,R[4],E,E,95,[[["self"]],[T]]],[11,R[5],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[R[7]]]],[11,"vzip",E,E,95,[[],["v"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[2],E,E,96,[[[U]],[R[0]]]],[11,R[3],E,E,96,[[],[R[0]]]],[11,R[4],E,E,96,[[["self"]],[T]]],[11,R[5],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[R[7]]]],[11,"vzip",E,E,96,[[],["v"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[2],E,E,97,[[[U]],[R[0]]]],[11,R[3],E,E,97,[[],[R[0]]]],[11,R[4],E,E,97,[[["self"]],[T]]],[11,R[5],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[R[7]]]],[11,"vzip",E,E,97,[[],["v"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[2],E,E,98,[[[U]],[R[0]]]],[11,R[3],E,E,98,[[],[R[0]]]],[11,R[4],E,E,98,[[["self"]],[T]]],[11,R[5],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[R[7]]]],[11,"vzip",E,E,98,[[],["v"]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[["self"],[T]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[2],E,E,99,[[[U]],[R[0]]]],[11,R[3],E,E,99,[[],[R[0]]]],[11,R[4],E,E,99,[[["self"]],[T]]],[11,R[5],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[R[7]]]],[11,"vzip",E,E,99,[[],["v"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[2],E,E,100,[[[U]],[R[0]]]],[11,R[3],E,E,100,[[],[R[0]]]],[11,R[4],E,E,100,[[["self"]],[T]]],[11,R[5],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[R[7]]]],[11,"vzip",E,E,100,[[],["v"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[2],E,E,101,[[[U]],[R[0]]]],[11,R[3],E,E,101,[[],[R[0]]]],[11,R[4],E,E,101,[[["self"]],[T]]],[11,R[5],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[R[7]]]],[11,"vzip",E,E,101,[[],["v"]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[["self"],[T]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[2],E,E,102,[[[U]],[R[0]]]],[11,R[3],E,E,102,[[],[R[0]]]],[11,R[4],E,E,102,[[["self"]],[T]]],[11,R[5],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[R[7]]]],[11,"vzip",E,E,102,[[],["v"]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[2],E,E,103,[[[U]],[R[0]]]],[11,R[3],E,E,103,[[],[R[0]]]],[11,R[4],E,E,103,[[["self"]],[T]]],[11,R[5],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[R[7]]]],[11,"vzip",E,E,103,[[],["v"]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[2],E,E,104,[[[U]],[R[0]]]],[11,R[3],E,E,104,[[],[R[0]]]],[11,R[4],E,E,104,[[["self"]],[T]]],[11,R[5],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[R[7]]]],[11,"vzip",E,E,104,[[],["v"]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[2],E,E,105,[[[U]],[R[0]]]],[11,R[3],E,E,105,[[],[R[0]]]],[11,R[4],E,E,105,[[["self"]],[T]]],[11,R[5],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[R[7]]]],[11,"vzip",E,E,105,[[],["v"]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[2],E,E,106,[[[U]],[R[0]]]],[11,R[3],E,E,106,[[],[R[0]]]],[11,R[4],E,E,106,[[["self"]],[T]]],[11,R[5],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[R[7]]]],[11,"vzip",E,E,106,[[],["v"]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[57],E,E,107,[[["self"]],[R[58]]]],[11,R[2],E,E,107,[[[U]],[R[0]]]],[11,R[3],E,E,107,[[],[R[0]]]],[11,R[4],E,E,107,[[["self"]],[T]]],[11,R[5],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[R[7]]]],[11,"vzip",E,E,107,[[],["v"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[57],E,E,108,[[["self"]],[R[58]]]],[11,R[2],E,E,108,[[[U]],[R[0]]]],[11,R[3],E,E,108,[[],[R[0]]]],[11,R[4],E,E,108,[[["self"]],[T]]],[11,R[5],E,E,108,[[["self"]],[T]]],[11,R[6],E,E,108,[[["self"]],[R[7]]]],[11,"vzip",E,E,108,[[],["v"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[2],E,E,109,[[[U]],[R[0]]]],[11,R[3],E,E,109,[[],[R[0]]]],[11,R[4],E,E,109,[[["self"]],[T]]],[11,R[5],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[R[7]]]],[11,"vzip",E,E,109,[[],["v"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[2],E,E,110,[[[U]],[R[0]]]],[11,R[3],E,E,110,[[],[R[0]]]],[11,R[4],E,E,110,[[["self"]],[T]]],[11,R[5],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[R[7]]]],[11,"vzip",E,E,110,[[],["v"]]],[11,"into",R[1439],E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[2],E,E,111,[[[U]],[R[0]]]],[11,R[3],E,E,111,[[],[R[0]]]],[11,R[4],E,E,111,[[["self"]],[T]]],[11,R[5],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[R[7]]]],[11,"vzip",E,E,111,[[],["v"]]],[11,"into",R[1427],E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[2],E,E,112,[[[U]],[R[0]]]],[11,R[3],E,E,112,[[],[R[0]]]],[11,R[4],E,E,112,[[["self"]],[T]]],[11,R[5],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[R[7]]]],[11,"vzip",E,E,112,[[],["v"]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[2],E,E,113,[[[U]],[R[0]]]],[11,R[3],E,E,113,[[],[R[0]]]],[11,R[4],E,E,113,[[["self"]],[T]]],[11,R[5],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[R[7]]]],[11,"vzip",E,E,113,[[],["v"]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[2],E,E,114,[[[U]],[R[0]]]],[11,R[3],E,E,114,[[],[R[0]]]],[11,R[4],E,E,114,[[["self"]],[T]]],[11,R[5],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[R[7]]]],[11,"vzip",E,E,114,[[],["v"]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[2],E,E,115,[[[U]],[R[0]]]],[11,R[3],E,E,115,[[],[R[0]]]],[11,R[4],E,E,115,[[["self"]],[T]]],[11,R[5],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[R[7]]]],[11,"vzip",E,E,115,[[],["v"]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[2],E,E,116,[[[U]],[R[0]]]],[11,R[3],E,E,116,[[],[R[0]]]],[11,R[4],E,E,116,[[["self"]],[T]]],[11,R[5],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[R[7]]]],[11,"vzip",E,E,116,[[],["v"]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[2],E,E,117,[[[U]],[R[0]]]],[11,R[3],E,E,117,[[],[R[0]]]],[11,R[4],E,E,117,[[["self"]],[T]]],[11,R[5],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[R[7]]]],[11,"vzip",E,E,117,[[],["v"]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[2],E,E,118,[[[U]],[R[0]]]],[11,R[3],E,E,118,[[],[R[0]]]],[11,R[4],E,E,118,[[["self"]],[T]]],[11,R[5],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[R[7]]]],[11,"vzip",E,E,118,[[],["v"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[2],E,E,119,[[[U]],[R[0]]]],[11,R[3],E,E,119,[[],[R[0]]]],[11,R[4],E,E,119,[[["self"]],[T]]],[11,R[5],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[R[7]]]],[11,"vzip",E,E,119,[[],["v"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[57],E,E,120,[[["self"]],[R[58]]]],[11,R[2],E,E,120,[[[U]],[R[0]]]],[11,R[3],E,E,120,[[],[R[0]]]],[11,R[4],E,E,120,[[["self"]],[T]]],[11,R[5],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[R[7]]]],[11,"vzip",E,E,120,[[],["v"]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[2],E,E,121,[[[U]],[R[0]]]],[11,R[3],E,E,121,[[],[R[0]]]],[11,R[4],E,E,121,[[["self"]],[T]]],[11,R[5],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[R[7]]]],[11,"vzip",E,E,121,[[],["v"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[2],E,E,122,[[[U]],[R[0]]]],[11,R[3],E,E,122,[[],[R[0]]]],[11,R[4],E,E,122,[[["self"]],[T]]],[11,R[5],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[R[7]]]],[11,"vzip",E,E,122,[[],["v"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[2],E,E,123,[[[U]],[R[0]]]],[11,R[3],E,E,123,[[],[R[0]]]],[11,R[4],E,E,123,[[["self"]],[T]]],[11,R[5],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[R[7]]]],[11,"vzip",E,E,123,[[],["v"]]],[11,"into",R[1440],E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[57],E,E,127,[[["self"]],[R[58]]]],[11,R[2],E,E,127,[[[U]],[R[0]]]],[11,R[3],E,E,127,[[],[R[0]]]],[11,R[4],E,E,127,[[["self"]],[T]]],[11,R[5],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[R[7]]]],[11,R[59],E,E,127,[[["self"]],["fail"]]],[11,"vzip",E,E,127,[[],["v"]]],[11,R[1442],R[1386],E,128,[[]]],[11,R[1441],E,E,128,[[["self"]]]],[11,"add_loc",E,E,128,[[["loc"],[R[58]]],["self"]]],[11,R[1442],R[1438],E,85,[[]]],[11,R[1441],E,E,85,[[["self"]]]],[11,"add_loc",E,E,85,[[["loc"],[R[58]]],["self"]]],[11,R[1442],E,E,89,[[]]],[11,R[1441],E,E,89,[[["self"]]]],[11,"add_loc",E,E,89,[[["loc"],[R[58]]],["self"]]],[11,R[1442],E,E,90,[[]]],[11,R[1441],E,E,90,[[["self"]]]],[11,"add_loc",E,E,90,[[["loc"],[R[58]]],["self"]]],[11,R[1442],E,E,92,[[]]],[11,R[1441],E,E,92,[[["self"]]]],[11,"add_loc",E,E,92,[[["loc"],[R[58]]],["self"]]],[11,R[1442],E,E,95,[[]]],[11,R[1441],E,E,95,[[["self"]]]],[11,"add_loc",E,E,95,[[["loc"],[R[58]]],["self"]]],[11,R[1442],E,E,87,[[]]],[11,R[1441],E,E,87,[[["self"]]]],[11,"add_loc",E,E,87,[[],[R[626]]]],[11,"value",E,E,85,[[["self"]],["str"]]],[11,"loc",E,E,85,[[["self"]],["loc"]]],[11,"value",E,E,89,[[["self"]],["str"]]],[11,"loc",E,E,89,[[["self"]],["loc"]]],[11,"value",E,E,90,[[["self"]],["str"]]],[11,"loc",E,E,90,[[["self"]],["loc"]]],[11,"value",E,E,92,[[["self"]],["str"]]],[11,"loc",E,E,92,[[["self"]],["loc"]]],[11,"value",E,E,95,[[["self"]],["str"]]],[11,"loc",E,E,95,[[["self"]],["loc"]]],[11,R[75],R[1433],E,1,[[],[R[1375]]]],[11,R[75],R[1374],E,4,[[],[R[333]]]],[11,R[75],E,E,5,[[],["loc"]]],[11,R[75],E,E,0,[[],["spanned"]]],[11,"clone",R[1433],E,1,[[["self"]],[R[1375]]]],[11,"clone",R[1374],E,4,[[["self"]],[R[333]]]],[11,"clone",E,E,5,[[["self"]],["loc"]]],[11,"clone",E,E,0,[[["self"]],["spanned"]]],[11,"clone",E,E,6,[[["self"]],["counter"]]],[11,"clone",R[1378],E,9,[[["self"]],[R[633]]]],[11,"clone",E,E,15,[[["self"]],[R[1444]]]],[11,"clone",E,E,10,[[["self"]],[R[635]]]],[11,"clone",E,E,17,[[["self"]],[R[1445]]]],[11,"clone",E,E,18,[[["self"]],[R[1443]]]],[11,"clone",E,E,19,[[["self"]],["type_"]]],[11,"clone",E,E,12,[[["self"]],["label"]]],[11,"clone",R[1435],E,33,[[["self"]],[R[1446]]]],[11,"clone",E,E,34,[[["self"]],[R[1443]]]],[11,"clone",R[1400],E,43,[[["self"]],[R[633]]]],[11,"clone",E,E,48,[[["self"]],[R[1444]]]],[11,"clone",E,E,44,[[["self"]],[R[635]]]],[11,"clone",E,E,50,[[["self"]],[R[1445]]]],[11,"clone",E,E,51,[[["self"]],[R[1443]]]],[11,"clone",E,E,52,[[["self"]],["type_"]]],[11,"clone",R[1436],E,61,[[["self"]],[R[633]]]],[11,"clone",E,E,66,[[["self"]],[R[1444]]]],[11,"clone",E,E,62,[[["self"]],[R[635]]]],[11,"clone",E,E,68,[[["self"]],[R[1413]]]],[11,"clone",E,E,69,[[["self"]],[R[1446]]]],[11,"clone",E,E,64,[[["self"]],[R[1447]]]],[11,"clone",E,E,65,[[["self"]],["tparam"]]],[11,"clone",E,E,79,[[["self"]],["tvar"]]],[11,"clone",E,E,70,[[["self"]],[R[1445]]]],[11,"clone",E,E,71,[[["self"]],[R[1443]]]],[11,"clone",E,E,72,[[["self"]],["type_"]]],[11,"clone",R[1437],E,80,[[["self"]],["token"]]],[11,"clone",R[1438],E,85,[[["self"]],[R[611]]]],[11,"clone",E,E,86,[[["self"]],[R[1448]]]],[11,"clone",E,E,87,[[["self"]],[R[626]]]],[11,"clone",E,E,89,[[["self"]],["field"]]],[11,"clone",E,E,90,[[["self"]],[R[615]]]],[11,"clone",E,E,92,[[["self"]],[R[628]]]],[11,"clone",E,E,99,[[["self"]],[R[629]]]],[11,"clone",E,E,102,[[["self"]],["kind_"]]],[11,"clone",E,E,95,[[["self"]],["var"]]],[11,"as_ref",R[1374],E,4,[[["self"]]]],[11,R[247],E,E,4,[[["self"],[R[333]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,4,[[["self"],[R[333]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[333]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[333]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[333]]],["bool"]]],[11,R[247],E,E,0,[[["self"],["spanned"]],[[R[24],[R[32]]],[R[32]]]]],[11,R[247],R[1378],E,17,[[["self"],[R[1445]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,17,[[["self"],[R[1445]]],["bool"]]],[11,"le",E,E,17,[[["self"],[R[1445]]],["bool"]]],[11,"gt",E,E,17,[[["self"],[R[1445]]],["bool"]]],[11,"ge",E,E,17,[[["self"],[R[1445]]],["bool"]]],[11,R[247],E,E,12,[[["self"],["label"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,12,[[["self"],["label"]],["bool"]]],[11,"le",E,E,12,[[["self"],["label"]],["bool"]]],[11,"gt",E,E,12,[[["self"],["label"]],["bool"]]],[11,"ge",E,E,12,[[["self"],["label"]],["bool"]]],[11,R[247],R[1400],E,50,[[["self"],[R[1445]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,50,[[["self"],[R[1445]]],["bool"]]],[11,"le",E,E,50,[[["self"],[R[1445]]],["bool"]]],[11,"gt",E,E,50,[[["self"],[R[1445]]],["bool"]]],[11,"ge",E,E,50,[[["self"],[R[1445]]],["bool"]]],[11,R[247],R[1436],E,68,[[["self"],[R[1413]]],[[R[24],[R[32]]],[R[32]]]]],[11,R[247],E,E,69,[[["self"],[R[1446]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,69,[[["self"],[R[1446]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[1446]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[1446]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[1446]]],["bool"]]],[11,R[247],E,E,64,[[["self"],[R[1447]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,64,[[["self"],[R[1447]]],["bool"]]],[11,"le",E,E,64,[[["self"],[R[1447]]],["bool"]]],[11,"gt",E,E,64,[[["self"],[R[1447]]],["bool"]]],[11,"ge",E,E,64,[[["self"],[R[1447]]],["bool"]]],[11,R[247],E,E,65,[[["self"],["tparam"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,65,[[["self"],["tparam"]],["bool"]]],[11,"le",E,E,65,[[["self"],["tparam"]],["bool"]]],[11,"gt",E,E,65,[[["self"],["tparam"]],["bool"]]],[11,"ge",E,E,65,[[["self"],["tparam"]],["bool"]]],[11,R[247],E,E,79,[[["self"],["tvar"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,79,[[["self"],["tvar"]],["bool"]]],[11,"le",E,E,79,[[["self"],["tvar"]],["bool"]]],[11,"gt",E,E,79,[[["self"],["tvar"]],["bool"]]],[11,"ge",E,E,79,[[["self"],["tvar"]],["bool"]]],[11,R[247],E,E,70,[[["self"],[R[1445]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,70,[[["self"],[R[1445]]],["bool"]]],[11,"le",E,E,70,[[["self"],[R[1445]]],["bool"]]],[11,"gt",E,E,70,[[["self"],[R[1445]]],["bool"]]],[11,"ge",E,E,70,[[["self"],[R[1445]]],["bool"]]],[11,R[247],R[1437],E,80,[[["self"],["token"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,80,[[["self"],["token"]],["bool"]]],[11,"le",E,E,80,[[["self"],["token"]],["bool"]]],[11,"gt",E,E,80,[[["self"],["token"]],["bool"]]],[11,"ge",E,E,80,[[["self"],["token"]],["bool"]]],[11,R[247],R[1438],E,85,[[["self"],[R[611]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,85,[[["self"],[R[611]]],["bool"]]],[11,"le",E,E,85,[[["self"],[R[611]]],["bool"]]],[11,"gt",E,E,85,[[["self"],[R[611]]],["bool"]]],[11,"ge",E,E,85,[[["self"],[R[611]]],["bool"]]],[11,R[247],E,E,86,[[["self"],[R[1448]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,86,[[["self"],[R[1448]]],["bool"]]],[11,"le",E,E,86,[[["self"],[R[1448]]],["bool"]]],[11,"gt",E,E,86,[[["self"],[R[1448]]],["bool"]]],[11,"ge",E,E,86,[[["self"],[R[1448]]],["bool"]]],[11,R[247],E,E,87,[[["self"],[R[626]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,87,[[["self"],[R[626]]],["bool"]]],[11,"le",E,E,87,[[["self"],[R[626]]],["bool"]]],[11,"gt",E,E,87,[[["self"],[R[626]]],["bool"]]],[11,"ge",E,E,87,[[["self"],[R[626]]],["bool"]]],[11,R[247],E,E,89,[[["self"],["field"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,89,[[["self"],["field"]],["bool"]]],[11,"le",E,E,89,[[["self"],["field"]],["bool"]]],[11,"gt",E,E,89,[[["self"],["field"]],["bool"]]],[11,"ge",E,E,89,[[["self"],["field"]],["bool"]]],[11,R[247],E,E,90,[[["self"],[R[615]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,90,[[["self"],[R[615]]],["bool"]]],[11,"le",E,E,90,[[["self"],[R[615]]],["bool"]]],[11,"gt",E,E,90,[[["self"],[R[615]]],["bool"]]],[11,"ge",E,E,90,[[["self"],[R[615]]],["bool"]]],[11,R[247],E,E,92,[[["self"],[R[628]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,92,[[["self"],[R[628]]],["bool"]]],[11,"le",E,E,92,[[["self"],[R[628]]],["bool"]]],[11,"gt",E,E,92,[[["self"],[R[628]]],["bool"]]],[11,"ge",E,E,92,[[["self"],[R[628]]],["bool"]]],[11,R[247],E,E,102,[[["self"],["kind_"]],[[R[24],[R[32]]],[R[32]]]]],[11,R[247],E,E,95,[[["self"],["var"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,95,[[["self"],["var"]],["bool"]]],[11,"le",E,E,95,[[["self"],["var"]],["bool"]]],[11,"gt",E,E,95,[[["self"],["var"]],["bool"]]],[11,"ge",E,E,95,[[["self"],["var"]],["bool"]]],[11,"eq",R[1433],E,1,[[["self"],[R[1375]]],["bool"]]],[11,"eq",R[1374],E,4,[[["self"],[R[333]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[333]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["loc"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["loc"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["spanned"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["counter"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["counter"]],["bool"]]],[11,"eq",R[1378],E,9,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[1444]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[1444]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[1445]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[1445]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[1443]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[1443]]],["bool"]]],[11,"eq",E,E,19,[[["self"],["type_"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["type_"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["label"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["label"]],["bool"]]],[11,"eq",E,E,20,[[["self"],["command_"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["command_"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["lvalue_"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["lvalue_"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1453]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1453]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[1450]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1450]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[1451]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[1451]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["exp"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["exp"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[1430]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[1430]]],["bool"]]],[11,"eq",R[1435],E,28,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[1444]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[1444]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[1446]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[1446]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[1443]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[1443]]],["bool"]]],[11,"eq",E,E,35,[[["self"],["type_"]],["bool"]]],[11,"ne",E,E,35,[[["self"],["type_"]],["bool"]]],[11,"eq",E,E,36,[[["self"],["assign_"]],["bool"]]],[11,"ne",E,E,36,[[["self"],["assign_"]],["bool"]]],[11,"eq",E,E,37,[[["self"],["bind_"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["bind_"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[1454]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[1454]]],["bool"]]],[11,"eq",E,E,39,[[["self"],["exp_"]],["bool"]]],[11,"ne",E,E,39,[[["self"],["exp_"]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[1452]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[1452]]],["bool"]]],[11,"eq",R[1400],E,43,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[1444]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[1444]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[1445]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[1445]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[1443]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[1443]]],["bool"]]],[11,"eq",E,E,52,[[["self"],["type_"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["type_"]],["bool"]]],[11,"eq",E,E,53,[[["self"],["statement_"]],["bool"]]],[11,"ne",E,E,53,[[["self"],["statement_"]],["bool"]]],[11,"eq",E,E,54,[[["self"],["command_"]],["bool"]]],[11,"ne",E,E,54,[[["self"],["command_"]],["bool"]]],[11,"eq",E,E,55,[[["self"],["lvalue_"]],["bool"]]],[11,"ne",E,E,55,[[["self"],["lvalue_"]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[1453]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[1453]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[1450]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[1450]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[1451]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[1451]]],["bool"]]],[11,"eq",E,E,47,[[["self"],["exp"]],["bool"]]],[11,"ne",E,E,47,[[["self"],["exp"]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[1430]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[1430]]],["bool"]]],[11,"eq",R[1436],E,61,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[1444]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[1444]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[1413]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[1446]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[1446]]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[1447]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[1447]]],["bool"]]],[11,"eq",E,E,65,[[["self"],["tparam"]],["bool"]]],[11,"ne",E,E,65,[[["self"],["tparam"]],["bool"]]],[11,"eq",E,E,79,[[["self"],["tvar"]],["bool"]]],[11,"ne",E,E,79,[[["self"],["tvar"]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[1445]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[1445]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[1443]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[1443]]],["bool"]]],[11,"eq",E,E,72,[[["self"],["type_"]],["bool"]]],[11,"ne",E,E,72,[[["self"],["type_"]],["bool"]]],[11,"eq",E,E,73,[[["self"],["assign_"]],["bool"]]],[11,"ne",E,E,73,[[["self"],["assign_"]],["bool"]]],[11,"eq",E,E,74,[[["self"],["bind_"]],["bool"]]],[11,"ne",E,E,74,[[["self"],["bind_"]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[1454]]],["bool"]]],[11,"ne",E,E,75,[[["self"],[R[1454]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[1450]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[1450]]],["bool"]]],[11,"eq",E,E,77,[[["self"],["exp_"]],["bool"]]],[11,"ne",E,E,77,[[["self"],["exp_"]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[1452]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[1452]]],["bool"]]],[11,"eq",R[1437],E,80,[[["self"],["token"]],["bool"]]],[11,"ne",E,E,80,[[["self"],["token"]],["bool"]]],[11,"eq",R[1438],E,85,[[["self"],[R[611]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[611]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[1448]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[1448]]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[626]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[626]]],["bool"]]],[11,"eq",E,E,89,[[["self"],["field"]],["bool"]]],[11,"ne",E,E,89,[[["self"],["field"]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[615]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[615]]],["bool"]]],[11,"eq",E,E,91,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,91,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,98,[[["self"],[R[1444]]],["bool"]]],[11,"ne",E,E,98,[[["self"],[R[1444]]],["bool"]]],[11,"eq",E,E,92,[[["self"],[R[628]]],["bool"]]],[11,"ne",E,E,92,[[["self"],[R[628]]],["bool"]]],[11,"eq",E,E,93,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,93,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,99,[[["self"],[R[629]]],["bool"]]],[11,"ne",E,E,99,[[["self"],[R[629]]],["bool"]]],[11,"eq",E,E,100,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,100,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,101,[[["self"],[R[1446]]],["bool"]]],[11,"ne",E,E,101,[[["self"],[R[1446]]],["bool"]]],[11,"eq",E,E,102,[[["self"],["kind_"]],["bool"]]],[11,"eq",E,E,103,[[["self"],[R[1443]]],["bool"]]],[11,"ne",E,E,103,[[["self"],[R[1443]]],["bool"]]],[11,"eq",E,E,104,[[["self"],["type_"]],["bool"]]],[11,"ne",E,E,104,[[["self"],["type_"]],["bool"]]],[11,"eq",E,E,95,[[["self"],["var"]],["bool"]]],[11,"ne",E,E,95,[[["self"],["var"]],["bool"]]],[11,"eq",E,E,105,[[["self"],["bind_"]],["bool"]]],[11,"ne",E,E,105,[[["self"],["bind_"]],["bool"]]],[11,"eq",E,E,106,[[["self"],["value_"]],["bool"]]],[11,"ne",E,E,106,[[["self"],["value_"]],["bool"]]],[11,"eq",E,E,107,[[["self"],["unaryop_"]],["bool"]]],[11,"eq",E,E,108,[[["self"],["binop_"]],["bool"]]],[11,"eq",E,E,109,[[["self"],["exp_"]],["bool"]]],[11,"ne",E,E,109,[[["self"],["exp_"]],["bool"]]],[11,"eq",E,E,110,[[["self"],[R[1452]]],["bool"]]],[11,"ne",E,E,110,[[["self"],[R[1452]]],["bool"]]],[11,"eq",R[1427],E,117,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,117,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,114,[[["self"],[R[636]]],["bool"]]],[11,"ne",E,E,114,[[["self"],[R[636]]],["bool"]]],[11,"eq",E,E,118,[[["self"],["assign_"]],["bool"]]],[11,"ne",E,E,118,[[["self"],["assign_"]],["bool"]]],[11,"eq",E,E,119,[[["self"],["bind_"]],["bool"]]],[11,"ne",E,E,119,[[["self"],["bind_"]],["bool"]]],[11,"eq",E,E,115,[[["self"],[R[1453]]],["bool"]]],[11,"ne",E,E,115,[[["self"],[R[1453]]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[1450]]],["bool"]]],[11,"ne",E,E,120,[[["self"],[R[1450]]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[1451]]],["bool"]]],[11,"ne",E,E,121,[[["self"],[R[1451]]],["bool"]]],[11,"eq",E,E,116,[[["self"],["exp"]],["bool"]]],[11,"ne",E,E,116,[[["self"],["exp"]],["bool"]]],[11,"eq",E,E,122,[[["self"],[R[1452]]],["bool"]]],[11,"ne",E,E,122,[[["self"],[R[1452]]],["bool"]]],[11,"eq",E,E,123,[[["self"],[R[1430]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[1430]]],["bool"]]],[11,"cmp",R[1374],E,4,[[["self"],[R[333]]],[R[32]]]],[11,"cmp",E,E,0,[[["self"],["spanned"]],[R[32]]]],[11,"cmp",R[1378],E,17,[[["self"],[R[1445]]],[R[32]]]],[11,"cmp",E,E,12,[[["self"],["label"]],[R[32]]]],[11,"cmp",R[1400],E,50,[[["self"],[R[1445]]],[R[32]]]],[11,"cmp",R[1436],E,68,[[["self"],[R[1413]]],[R[32]]]],[11,"cmp",E,E,69,[[["self"],[R[1446]]],[R[32]]]],[11,"cmp",E,E,64,[[["self"],[R[1447]]],[R[32]]]],[11,"cmp",E,E,65,[[["self"],["tparam"]],[R[32]]]],[11,"cmp",E,E,79,[[["self"],["tvar"]],[R[32]]]],[11,"cmp",E,E,70,[[["self"],[R[1445]]],[R[32]]]],[11,"cmp",R[1437],E,80,[[["self"],["token"]],[R[32]]]],[11,"cmp",R[1438],E,85,[[["self"],[R[611]]],[R[32]]]],[11,"cmp",E,E,86,[[["self"],[R[1448]]],[R[32]]]],[11,"cmp",E,E,87,[[["self"],[R[626]]],[R[32]]]],[11,"cmp",E,E,89,[[["self"],["field"]],[R[32]]]],[11,"cmp",E,E,90,[[["self"],[R[615]]],[R[32]]]],[11,"cmp",E,E,92,[[["self"],[R[628]]],[R[32]]]],[11,"cmp",E,E,102,[[["self"],["kind_"]],[R[32]]]],[11,"cmp",E,E,95,[[["self"],["var"]],[R[32]]]],[11,R[246],R[1433],E,1,[[]]],[11,"next",E,E,124,[[["self"]],[R[24]]]],[11,"next",E,E,125,[[["self"]],[R[24]]]],[11,"next",E,E,126,[[["self"]],[R[24]]]],[11,"hash",R[1374],E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",R[1378],E,12,[[["self"],["__h"]]]],[11,"hash",R[1436],E,64,[[["self"],["__h"]]]],[11,"hash",E,E,79,[[["self"],["__h"]]]],[11,"hash",R[1438],E,85,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,89,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",E,E,92,[[["self"],["__h"]]]],[11,"hash",E,E,95,[[["self"],["__h"]]]],[11,"fmt",R[1433],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1374],E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1378],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1434],E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1435],E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,36,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,37,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,39,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,40,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1400],E,41,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,42,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,43,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,48,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,44,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,49,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,45,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,50,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,51,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,52,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,53,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,54,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,55,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,46,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,56,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,57,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,47,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,58,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1436],E,59,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,60,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,61,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,66,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,62,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,67,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,63,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,68,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,69,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,64,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,65,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,79,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,70,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,71,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,72,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,73,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,74,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,75,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,76,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,77,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,78,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1437],E,80,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1438],E,83,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,96,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,97,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,84,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,85,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,86,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,87,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,88,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,89,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,90,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,91,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,98,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,92,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,93,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,99,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,100,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,94,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,101,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,102,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,103,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,104,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,95,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,105,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,106,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,107,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,108,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,109,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,110,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1427],E,112,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,113,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,117,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,114,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,118,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,119,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,115,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,120,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,121,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,116,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,122,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,123,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1440],E,127,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1374],E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1435],E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1436],E,68,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,69,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1437],E,80,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[1438],E,85,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,89,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,90,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,92,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,95,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,87,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,107,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,108,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1427],E,120,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1440],E,127,[[["self"],[R[17]]],[R[0]]]],[11,R[2],R[1374],E,4,[[],[[R[0],[R[333],R[58]]],[R[58]],[R[333]]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,R[61],R[1440],E,127,[[["self"]],["str"]]],[11,"type_",R[1438],E,106,[[["self"],["loc"]],[R[1414]]]]],"p":[[3,"Spanned"],[3,"UniqueMap"],[8,"TName"],[8,R[527]],[3,R[739]],[3,"Loc"],[3,"Counter"],[3,"Program"],[3,R[639]],[3,R[642]],[3,R[643]],[3,R[1396]],[3,"Label"],[3,R[1397]],[3,"Exp"],[4,R[1389]],[4,R[1390]],[4,R[1455]],[4,R[1391]],[4,"Type_"],[4,"Command_"],[4,"LValue_"],[4,R[1404]],[4,R[1405]],[4,R[1408]],[3,"BlockCFG"],[3,"Program"],[3,R[639]],[3,R[642]],[3,R[643]],[3,R[1396]],[4,R[1389]],[4,R[1390]],[4,R[1456]],[4,R[1391]],[4,"Type_"],[4,"Assign_"],[4,"Bind_"],[4,R[1457]],[4,"Exp_"],[4,R[1417]],[3,"Program"],[3,R[639]],[3,R[642]],[3,R[643]],[3,R[1396]],[3,R[1397]],[3,"Exp"],[4,R[1389]],[4,R[1390]],[4,R[1455]],[4,R[1391]],[4,"Type_"],[4,"Statement_"],[4,"Command_"],[4,"LValue_"],[4,R[1404]],[4,R[1405]],[4,R[1408]],[3,"Program"],[3,R[639]],[3,R[642]],[3,R[643]],[3,R[1396]],[3,"TParamID"],[3,"TParam"],[4,R[1389]],[4,R[1390]],[4,R[1458]],[4,R[1456]],[4,R[1455]],[4,R[1391]],[4,"Type_"],[4,"Assign_"],[4,"Bind_"],[4,R[1457]],[4,R[1404]],[4,"Exp_"],[4,R[1417]],[3,"TVar"],[3,"Token"],[3,"FileParser"],[8,"__ToTriple"],[3,"Program"],[3,"Main"],[3,R[651]],[3,R[1459]],[3,R[645]],[3,R[639]],[3,"Field"],[3,R[652]],[3,R[642]],[3,R[653]],[3,R[643]],[3,R[1396]],[3,"Var"],[4,R[1460]],[4,R[1461]],[4,R[1389]],[4,R[647]],[4,R[1390]],[4,R[1456]],[4,"Kind_"],[4,R[1391]],[4,"Type_"],[4,"Bind_"],[4,"Value_"],[4,"UnaryOp_"],[4,"BinOp_"],[4,"Exp_"],[4,R[1417]],[4,R[1462]],[3,"Program"],[3,R[639]],[3,R[1396]],[3,R[1397]],[3,"Exp"],[4,R[1390]],[4,"Assign_"],[4,"Bind_"],[4,R[1404]],[4,R[1405]],[4,R[1417]],[4,R[1408]],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,R[1463]],[6,"Name"]]};
searchIndex["netcore"]={"doc":"Core types and traits for building Peer to Peer networks.","i":[[0,R[36],R[79],"This module provides a compatibility shim between traits…",N,N],[3,"IoCompat",R[87],"`IoCompat` provides a compatibility shim between the…",N,N],[11,"new",E,E,0,[[[T]],["self"]]],[0,"multiplexing",R[79],"Module responsible for defining and implementing Stream…",N,N],[0,"yamux",R[77],"Implementation of [`StreamMultiplexer`] using the…",N,N],[4,"Mode",R[88],"Re-export `Mode` from the yamux crate",N,N],[13,"Client",E,E,1,N],[13,"Server",E,E,1,N],[3,"Yamux",E,E,N,N],[3,"Close",E,E,N,N],[3,R[78],E,E,N,N],[6,"StreamHandle",E,"The substream type produced by the `Yamux` multiplexer",N,N],[11,"new",E,E,2,[[[R[80]],["mode"]],["self"]]],[11,R[249],E,E,2,[[[R[80]],[R[100]]]]],[11,"new",E,E,3,[[[R[36]],[R[76],[R[36]]]],["self"]]],[11,"new",E,E,4,[[[R[36]],[R[76],[R[36]]]],["self"]]],[8,R[106],R[77],"A StreamMultiplexer is responsible for multiplexing…",N,N],[16,"Substream",E,"The type of substreams opened by this Multiplexer.",5,N],[16,R[78],E,"A stream of new `Substreams` opened by the remote side.",5,N],[16,R[82],E,"A pending `Substream` to be opened on the underlying…",5,N],[16,"Close",E,"A pending request to shut down the underlying connection,…",5,N],[10,R[96],E,"Returns a stream of new Substreams opened by the remote…",5,[[["self"]]]],[10,R[97],E,"Requests that a new Substream be opened.",5,[[["self"]]]],[10,"close",E,"Close and shutdown this [`StreamMultiplexer`].",5,[[["self"]]]],[0,"negotiate",R[79],"Protocol negotiation on AsyncRead/AsyncWrite streams",N,N],[5,"negotiate_inbound","netcore::negotiate","Perform protocol negotiation on an inbound `stream`…",N,[[[R[80]],[R[81]]]]],[5,"negotiate_outbound_interactive",E,"Perform protocol negotiation on an outbound `stream` using…",N,[[[R[80]],[R[81]]]]],[5,"negotiate_outbound_select",E,"Perform an optimistic protocol negotiation on `stream`…",N,[[[R[80]],["tproto"]]]],[0,"transport",R[79],"Low-level module for establishing connections with peers",N,N],[4,R[107],R[83],"Origin of how a Connection was established.",N,N],[13,R[84],E,"`Inbound` indicates that we are the listener for this…",6,N],[13,R[82],E,"`Outbound` indicates that we are the dialer for this…",6,N],[0,R[86],E,E,N,N],[3,"AndThen",R[90],"An [`AndThen`] is a transport which applies a closure (F)…",N,N],[3,R[111],E,"Listener stream returned by listen_on on an AndThen…",N,N],[3,R[112],E,"Future generated by the [`AndThen`] transport.",N,N],[0,"boxed",R[83],E,N,N],[3,R[113],R[92],"See the boxed method for more information.",N,N],[6,R[78],E,E,N,N],[6,R[84],E,E,N,N],[6,R[82],E,E,N,N],[0,"memory",R[83],E,N,N],[3,R[114],R[93],"Transport to build in-memory connections",N,N],[3,R[78],E,E,N,N],[0,"tcp",R[83],"TCP Transport",N,N],[3,R[115],R[94],"Transport to build TCP connections",N,N],[3,R[116],E,E,N,N],[3,R[117],E,E,N,N],[3,R[118],E,"A wrapper around a tokio TcpStream",N,N],[0,"timeout",R[83],E,N,N],[3,R[119],R[95],"A [`TimeoutTransport`] is a transport which wraps another…",N,N],[3,R[120],E,"Listener stream returned by listen_on on a TimeoutTransport.",N,N],[3,R[121],E,"Future which wraps an inner Future with a timeout.",N,N],[4,R[108],E,E,N,N],[13,"Timeout",E,E,7,N],[13,"TimerError",E,E,7,N],[13,R[2006],E,E,7,N],[8,R[109],R[83],"A Transport is responsible for establishing connections…",N,N],[16,"Output",E,"The result of establishing a connection.",8,N],[16,"Error",E,"The Error type of errors which can happen while…",8,N],[16,R[78],E,"A stream of `Inbound` connections and the address of the…",8,N],[16,R[84],E,"A pending `Output` for an inbound connection, obtained…",8,N],[16,R[82],E,"A pending `Output` for an outbound connection, obtained…",8,N],[10,R[98],E,"Listens on the given [`Multiaddr`], returning a stream of…",8,[[["self"],[R[85]]],[R[0]]]],[10,"dial",E,"Dials the given [`Multiaddr`], returning a future for a…",8,[[["self"],[R[85]]],[R[0]]]],[8,R[110],E,"An extension trait for [`Transport`]s that provides a…",N,N],[11,"boxed",E,"Turns a [`Transport`] into an abstract boxed transport.",9,[[],["boxedtransport"]]],[11,R[86],E,"Applies a function producing an asynchronous result to…",9,[[["f"]],["andthen"]]],[11,"with_timeout",E,"Wraps a [`Transport`] with a timeout to the Inbound and…",9,[[[R[410]]],["timeouttransport"]]],[11,R[13],R[87],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[13],R[88],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,R[91],E,E,3,[[["f"],[R[25]],["pin"]],["poll"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,R[89],E,E,4,[[["pin"],["s"],[R[25]]],[["poll",[R[24]]],[R[24],[R[0]]]]]],[11,R[13],R[83],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"into",R[90],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,R[89],E,E,11,[[["pin"],["s"],[R[25]]],[["poll",[R[24]]],[R[24],[R[0]]]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,R[91],E,E,12,[[["f"],[R[25]],["pin"]],["poll"]]],[11,"into",R[92],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"into",R[93],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,R[89],E,E,15,[[["pin"],["s"],[R[25]]],[["poll",[R[24]]],[R[24],[R[0]]]]]],[11,R[13],R[94],E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,R[89],E,E,17,[[["pin"],["s"],[R[25]]],[["poll",[R[24]]],[R[24],[R[0]]]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,R[91],E,E,18,[[["f"],[R[25]],["pin"]],["poll"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"into",R[95],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,R[89],E,E,21,[[["pin"],["s"],[R[25]]],[["poll",[R[24]]],[R[24],[R[0]]]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,R[91],E,E,22,[[["f"],[R[25]],["pin"]],["poll"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[57],E,E,7,[[["self"]],[R[58]]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"fmt",R[88],E,1,[[["self"],[R[17]]],[[R[0],["error"]],["error"]]]],[11,"clone",E,E,1,[[["self"]],["mode"]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"eq",E,E,1,[[["self"],["mode"]],["bool"]]],[11,R[96],E,E,2,[[["self"]]]],[11,R[97],E,E,2,[[["self"]]]],[11,"close",E,E,2,[[["self"]]]],[11,R[98],R[90],E,10,[[["self"],[R[85]]],[R[0]]]],[11,"dial",E,E,10,[[["self"],[R[85]]],[R[0]]]],[11,R[98],R[92],E,13,[[["self"],[R[85]]],[R[0]]]],[11,"dial",E,E,13,[[["self"],[R[85]]],[R[0]]]],[11,R[98],R[93],E,14,[[["self"],[R[85]]],[R[0]]]],[11,"dial",E,E,14,[[["self"],[R[85]]],[R[0]]]],[11,R[98],R[94],E,16,[[["self"],[R[85]]],[R[0]]]],[11,"dial",E,E,16,[[["self"],[R[85]]],[R[0]]]],[11,R[98],R[95],E,20,[[["self"],[R[85]]],[R[0]]]],[11,"dial",E,E,20,[[["self"],[R[85]]],[R[0]]]],[11,R[75],R[93],E,14,[[],["memorytransport"]]],[11,R[75],R[94],E,16,[[],[R[99]]]],[11,"clone",R[87],E,0,[[["self"]],["iocompat"]]],[11,"clone",R[94],E,16,[[["self"]],[R[99]]]],[11,"clone",R[83],E,6,[[["self"]],[R[100]]]],[11,"eq",E,E,6,[[["self"],[R[100]]],["bool"]]],[11,"from",R[95],E,7,[[["e"]],["self"]]],[11,"fmt",R[87],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[88],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[90],E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[93],E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[94],E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[95],E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[83],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[95],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"source",E,E,7,[[["self"]],[[R[24],["error"]],["error"]]]],[11,"poll",R[88],E,3,[[["pin"],["self"],[R[25]]],["poll"]]],[11,"poll",R[90],E,12,[[["pin"],["self"],[R[25]]],["poll"]]],[11,"poll",R[94],E,18,[[["pin"],["self"],[R[25]]],["poll"]]],[11,"poll",R[95],E,22,[[["pin"],["self"],[R[25]]],["poll"]]],[11,R[101],R[88],E,4,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[101],R[90],E,11,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[101],R[93],E,15,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[101],R[94],E,17,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[101],R[95],E,21,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,R[102],R[87],E,0,[[["self"],[R[25]],["pin"]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[103],E,E,0,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[104],E,E,0,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[102],R[94],E,19,[[["self"],["pin"],[R[25]]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[103],E,E,19,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[104],E,E,19,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[105],R[87],E,0,[[["self"],[R[25]],["pin"]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[105],R[94],E,19,[[["self"],["pin"],[R[25]]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[105],R[87],E,0,[[["self"],[R[25]],["pin"]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[102],E,E,0,[[["self"],[R[25]],["pin"]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[103],E,E,0,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,"poll_shutdown",E,E,0,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]]],"p":[[3,"IoCompat"],[4,"Mode"],[3,"Yamux"],[3,"Close"],[3,R[78]],[8,R[106]],[4,R[107]],[4,R[108]],[8,R[109]],[8,R[110]],[3,"AndThen"],[3,R[111]],[3,R[112]],[3,R[113]],[3,R[114]],[3,R[78]],[3,R[115]],[3,R[116]],[3,R[117]],[3,R[118]],[3,R[119]],[3,R[120]],[3,R[121]]]};
searchIndex["network"]={"doc":E,"i":[[3,R[2062],"network","Public keys used at the network layer",N,N],[12,"signing_public_key",E,"This key can validate signed messages at the network layer.",0,N],[12,"identity_public_key",E,"This key establishes a node's identity in the p2p network.",0,N],[0,"interface",E,"Module exposing generic network API",N,N],[3,R[2067],R[2039],E,N,N],[4,R[2063],E,E,N,N],[13,"IoError",E,E,1,N],[13,R[2006],E,E,1,N],[13,"ShuttingDownPeer",E,E,1,N],[13,R[2024],E,E,1,N],[13,"AlreadyConnected",E,E,1,N],[13,"OneshotSenderDropped",E,E,1,N],[4,R[2064],E,"Requests [`NetworkProvider`] receives from the network…",N,N],[13,"SendRpc",E,"Send an RPC request to a remote peer.",2,N],[13,R[2020],E,"Fire-and-forget style message send to a remote peer.",2,N],[13,"UpdateEligibleNodes",E,"Update set of nodes eligible to join the network.",2,N],[13,"DialPeer",E,"Dial the peer at the given `Multiaddr` to establish a…",2,N],[13,"DisconnectPeer",E,"Disconnect from the peer with `PeerId`. The disconnect…",2,N],[4,R[2065],E,"Notifications that [`NetworkProvider`] sends to consumers…",N,N],[13,"NewPeer",E,"Connection with a new peer has been established.",3,N],[13,"LostPeer",E,"Connection to a peer has been terminated. This could have…",3,N],[13,"RecvRpc",E,"A new RPC request has been received from a remote peer.",3,N],[13,R[2021],E,"A new message has been received from a remote peer.",3,N],[17,"CONSENSUS_INBOUND_MSG_TIMEOUT_MS",E,E,N,N],[17,"MEMPOOL_INBOUND_MSG_TIMEOUT_MS",E,E,N,N],[17,"STATE_SYNCHRONIZER_INBOUND_MSG_TIMEOUT_MS",E,E,N,N],[17,"ADMISSION_CONTROL_INBOUND_MSG_TIMEOUT_MS",E,E,N,N],[8,R[2066],E,"Trait that any provider of network interface needs to…",N,N],[10,R[2044],E,E,4,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[10,R[2045],E,E,4,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[10,R[2046],E,E,4,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[10,R[2047],E,E,4,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[10,"start",E,E,4,[[["box"]],["boxfuture"]]],[11,"new",E,E,5,[[[R[2012]],[R[2011]],["sender",[R[2008]]],["u32"],["sender",[R[2026]]],[R[2008]],["sender",["connectivityrequest"]],[R[2013],[R[2010]]],[R[2013],[R[2009]]],[R[2009]],[R[2010]],[R[2013],[R[2011]]],["sender",[R[2012]]],[R[2013],[R[2014]]],[R[24],["sender"]],[R[2026]],[R[2014]],["usize"],["sender",[R[2010]]]],["self"]]],[0,"proto","network","Protobuf definitions for data structures sent over the…",N,N],[3,"Block",R[2040],E,N,N],[12,"bytes",E,E,6,N],[3,R[2068],E,E,N,N],[12,"message",E,E,7,N],[3,"Proposal",E,E,N,N],[12,"bytes",E,E,8,N],[3,R[2016],E,E,N,N],[12,"bytes",E,E,9,N],[3,R[2018],E,E,N,N],[12,"bytes",E,E,10,N],[3,R[2017],E,E,N,N],[12,"bytes",E,E,11,N],[3,"SyncInfo",E,E,N,N],[12,"bytes",E,E,12,N],[3,"VoteMsg",E,E,N,N],[12,"bytes",E,E,13,N],[3,R[2069],E,E,N,N],[12,"bytes",E,E,14,N],[3,R[2070],E,E,N,N],[12,"message",E,E,15,N],[3,"Ping2",E,E,N,N],[12,"nonce",E,E,16,N],[3,"Pong2",E,E,N,N],[12,"nonce",E,E,17,N],[3,R[2071],E,"MempoolSyncMsg represents the messages exchanging between…",N,N],[12,"peer_id",E,E,18,N],[12,R[353],E,E,18,N],[3,R[2072],E,"Discovery message exchanged as part of the discovery…",N,N],[12,"notes",E,E,19,N],[3,R[2073],E,"Discovery information relevant to public full nodes and…",N,N],[12,"epoch",E,R[2015],20,N],[12,"dns_seed_addr",E,"The DNS domain name other public full nodes should query…",20,N],[3,R[2074],E,"Identity message exchanged as part of the Identity protocol.",N,N],[12,"peer_id",E,E,21,N],[12,"supported_protocols",E,E,21,N],[12,"role",E,E,21,N],[3,"Note",E,"A `Note` contains a validator's signed `PeerInfo` as well…",N,N],[12,"peer_id",E,"Id of the peer.",22,N],[12,"signed_peer_info",E,"The validator node's signed `PeerInfo`.",22,N],[12,"signed_full_node_payload",E,"The validator node's signed `FullNodePayload`.",22,N],[3,"PeerInfo",E,"A `PeerInfo` represents the network address(es) of a Peer.",N,N],[12,"epoch",E,R[2015],23,N],[12,"addrs",E,"Network addresses this peer can be reached at. An address…",23,N],[3,"Ping",E,"Ping message sent as liveness probe.",N,N],[3,"Pong",E,"Pong message sent as response to liveness probe.",N,N],[3,R[2075],E,"A signed `FullNodePayload`.",N,N],[12,"payload",E,"A serialized `FullNodePayload`.",24,N],[12,R[412],E,"A signature over `payload` signed by the validator's…",24,N],[3,R[2076],E,"A `PeerInfo` authenticated by the peer's root…",N,N],[12,"peer_info",E,"A serialized `PeerInfo`.",25,N],[12,R[412],E,"A signature over the above serialzed `PeerInfo`, signed by…",25,N],[3,R[2077],E,E,N,N],[12,"known_version",E,E,26,N],[12,"limit",E,E,26,N],[12,"timeout",E,E,26,N],[12,R[363],E,E,26,N],[3,R[2078],E,E,N,N],[12,R[363],E,E,27,N],[12,R[382],E,"chunk of transactions with proof corresponding to version…",27,N],[3,R[2079],E,E,N,N],[12,"message",E,E,28,N],[4,R[2080],E,E,N,N],[13,"Proposal",E,E,29,N],[13,"VoteMsg",E,E,29,N],[13,R[2016],E,E,29,N],[13,R[2017],E,E,29,N],[13,"SyncInfo",E,E,29,N],[13,"EpochChange",E,E,29,N],[13,R[2018],E,E,29,N],[4,R[2081],E,E,N,N],[13,"Ping",E,E,30,N],[13,"Pong",E,E,30,N],[4,R[2082],E,E,N,N],[13,"Validator",E,E,31,N],[13,"FullNode",E,E,31,N],[4,R[2083],E,E,N,N],[13,"ChunkRequest",E,E,32,N],[13,"ChunkResponse",E,E,32,N],[11,"encode",E,E,29,[[["self"],["b"]]]],[11,"merge",E,E,29,[[[R[24]],["u32"],[R[2019]],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,29,[[["self"]],["usize"]]],[11,"role",E,E,21,[[["self"]],["role"]]],[11,"set_role",E,E,21,[[["self"],["role"]]]],[11,R[302],E,"Returns `true` if `value` is a variant of `Role`.",31,[[["i32"]],["bool"]]],[11,"from_i32",E,"Converts an `i32` to a `Role`, or `None` if `value` is not…",31,[[["i32"]],[[R[24],["role"]],["role"]]]],[11,"encode",E,E,32,[[["self"],["b"]]]],[11,"merge",E,E,32,[[["u32"],[R[2019]],["b"],[R[24]]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,32,[[["self"]],["usize"]]],[11,"encode",E,E,30,[[["self"],["b"]]]],[11,"merge",E,E,30,[[["u32"],[R[2019]],[R[24]],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,30,[[["self"]],["usize"]]],[0,"protocols","network","Protocols used by network module for external APIs and…",N,N],[0,"direct_send",R[2022],"Protocol for fire-and-forget style message delivery to a…",N,N],[3,"Message",R[2041],E,N,N],[12,"protocol",E,"Message type.",33,N],[12,"mdata",E,"Serialized message data.",33,N],[3,"DirectSend",E,"The DirectSend actor.",N,N],[4,R[2084],E,E,N,N],[13,R[2020],E,"A request to send out a message.",34,N],[4,R[2085],E,E,N,N],[13,R[2021],E,"A notification that a DirectSend message is received.",35,N],[11,"new",E,E,36,[[[R[2012]],[R[2011]],[R[2013],[R[2011]]],[R[256]],[R[2014]],[R[2013],[R[2012]]],["sender",[R[2014]]],[R[2027]]],["self"]]],[11,"start",E,E,36,[[]]],[0,"rpc",R[2022],"Protocol for making and handling Remote Procedure Calls",N,N],[3,R[2086],R[2025],"A wrapper struct for an inbound rpc request and its…",N,N],[12,"protocol",E,R[2023],37,N],[12,"data",E,"The serialized request data received from the sender.",37,N],[12,"res_tx",E,"Channel over which the rpc response is sent from the upper…",37,N],[3,R[2087],E,"A wrapper struct for an outbound rpc request and its…",N,N],[12,"protocol",E,R[2023],38,N],[12,"data",E,"The serialized request data to be sent to the receiver.",38,N],[12,"res_tx",E,"Channel over which the rpc response is sent from the rpc…",38,N],[12,"timeout",E,"The timeout duration for the entire rpc call. If the…",38,N],[3,"Rpc",E,"The rpc actor.",N,N],[4,R[2088],E,"Events sent from the `NetworkProvider` actor to the…",N,N],[13,"SendRpc",E,"Send an outbound rpc request to a remote peer.",39,N],[4,R[2089],E,"Events sent from the [`Rpc`] actor to the…",N,N],[13,"RecvRpc",E,"A new inbound rpc request has been received from a remote…",40,N],[0,"error",E,"Rpc protocol errors",N,N],[4,"RpcError",R[2042],E,N,N],[13,"IoError",E,E,41,N],[13,R[2024],E,E,41,N],[13,"ProstEncodeError",E,E,41,N],[13,"ProstDecodeError",E,E,41,N],[13,"InvalidRpcResponse",E,E,41,N],[13,"UnexpectedRpcResponse",E,E,41,N],[13,"UnexpectedRpcRequest",E,E,41,N],[13,"UnexpectedResponseChannelCancel",E,E,41,N],[13,"ApplicationError",E,E,41,N],[13,"MpscSendError",E,E,41,N],[13,"TimedOut",E,E,41,N],[0,"utils",R[2025],E,N,N],[5,"unary_rpc","network::protocols::rpc::utils",R[2037],N,[[["message"],[R[410]],["peerid"],["sender",[R[2010]]],[R[2010]],[R[2007]],[R[75]]]]],[0,"fuzzing",R[2025],"fuzzing module for the rpc protocol",N,N],[5,R[2196],"network::protocols::rpc::fuzzing",E,N,[[[R[2197]]],[["vec",["u8"]],["u8"]]]],[5,"fuzzer",E,E,N,[[]]],[11,"new",R[2025],"Create a new instance of the [`Rpc`] protocol actor.",42,[[["u32"],[R[2011]],[R[2009]],[R[2013],[R[2011]]],[R[256]],[R[2013],[R[2026]]],[R[2026]],["sender",[R[2009]]],[R[410]],[R[2027]]],["self"]]],[11,"start",E,"Start the [`Rpc`] actor's event loop.",42,[[]]],[0,"validator_network","network","Network API for `Consensus` and `Mempool`",N,N],[3,R[2092],R[2033],"The interface from Admission Control to Network layer.",N,N],[3,R[2093],E,"The interface from Consensus to Networking layer.",N,N],[3,R[2094],E,"The interface from Mempool to Networking layer.",N,N],[3,R[2095],E,"The interface from StateSynchronizer to Networking layer.",N,N],[3,R[2096],E,"A `Stream` of `Event<TMessage>` from the lower network…",N,N],[3,R[2097],E,"`NetworkSender` is the generic interface from upper…",N,N],[4,"Event",E,"Events received by network clients in a validator",N,N],[13,"Message",E,"New inbound direct-send message from peer.",43,N],[13,R[2088],E,"New inbound rpc request. The request is fulfilled by…",43,N],[13,"NewPeer",E,"Peer which we have a newly established connection with.",43,N],[13,"LostPeer",E,"Peer with which we've lost our connection.",43,N],[0,"network_builder",E,"Permission-less vs Permissioned network end-points:…",N,N],[3,R[2091],R[2043],"Build Network module with custom configuration values.…",N,N],[4,R[2090],E,"The type of the transport layer, i.e., running on memory…",N,N],[13,"Memory",E,E,44,N],[13,"MemoryNoise",E,E,44,N],[13,"PermissionlessMemoryNoise",E,E,44,N],[13,"Tcp",E,E,44,N],[13,"TcpNoise",E,E,44,N],[13,"PermissionlessTcpNoise",E,E,44,N],[17,"NETWORK_CHANNEL_SIZE",E,E,N,N],[17,"DISCOVERY_INTERVAL_MS",E,E,N,N],[17,"PING_INTERVAL_MS",E,E,N,N],[17,"PING_TIMEOUT_MS",E,E,N,N],[17,"DISOVERY_MSG_TIMEOUT_MS",E,E,N,N],[17,"CONNECTIVITY_CHECK_INTERNAL_MS",E,E,N,N],[17,"INBOUND_RPC_TIMEOUT_MS",E,E,N,N],[17,"MAX_CONCURRENT_OUTBOUND_RPCS",E,E,N,N],[17,"MAX_CONCURRENT_INBOUND_RPCS",E,E,N,N],[17,"PING_FAILURES_TOLERATED",E,E,N,N],[17,"MAX_CONCURRENT_NETWORK_REQS",E,E,N,N],[17,"MAX_CONCURRENT_NETWORK_NOTIFS",E,E,N,N],[17,"MAX_CONNECTION_DELAY_MS",E,E,N,N],[11,"new",E,"Return a new NetworkBuilder initialized with default…",45,[[[R[85]],["peerid"],[R[256]],[R[952]]],["networkbuilder"]]],[11,"transport",E,"Set transport type, i.e., Memory or Tcp transports.",45,[[["self"],["transporttype"]],["self"]]],[11,R[2028],E,"Set and address to advertise, if different from the listen…",45,[[["self"],[R[85]]],["self"]]],[11,R[2029],E,"Set trusted peers.",45,[[["self"],[R[2030]],["hashmap",["peerid",R[2030]]],["peerid"]],["self"]]],[11,"signing_keys",E,"Set signing keys of local node.",45,[[["self"]],["self"]]],[11,R[932],E,"Set seed peers to bootstrap discovery",45,[[["self"],["hashmap",["peerid","vec"]],["peerid"],["vec",[R[85]]]],["self"]]],[11,R[2031],E,"Set discovery ticker interval",45,[[["self"],["u64"]],["self"]]],[11,"ping_interval_ms",E,"Set ping interval.",45,[[["self"],["u64"]],["self"]]],[11,"ping_failures_tolerated",E,"Set number of ping failures tolerated.",45,[[["self"],["u64"]],["self"]]],[11,"ping_timeout_ms",E,"Set ping timeout.",45,[[["self"],["u64"]],["self"]]],[11,"discovery_msg_timeout_ms",E,"Set discovery message timeout.",45,[[["self"],["u64"]],["self"]]],[11,R[2032],E,"Set connectivity check ticker interval",45,[[["self"],["u64"]],["self"]]],[11,"inbound_rpc_timeout_ms",E,"Set inbound rpc timeout.",45,[[["self"],["u64"]],["self"]]],[11,"max_concurrent_outbound_rpcs",E,"The maximum number of concurrent outbound rpc requests we…",45,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_inbound_rpcs",E,"The maximum number of concurrent inbound rpc requests we…",45,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_network_reqs",E,"The maximum number of concurrent NetworkRequests we will…",45,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_network_notifs",E,"The maximum number of concurrent Notifications from each…",45,[[["self"],["u32"]],["self"]]],[11,"max_connection_delay_ms",E,"The maximum duration (in milliseconds) we should wait…",45,[[["self"],["u64"]],["self"]]],[11,"channel_size",E,"Set the size of the channels between different network…",45,[[["self"],["usize"]],["self"]]],[11,"direct_send_protocols",E,"Set the protocol IDs that DirectSend actor subscribes.",45,[[["self"],[R[2007]],["vec",[R[2007]]]],["self"]]],[11,"rpc_protocols",E,"Set the protocol IDs that RPC actor subscribes.",45,[[["self"],[R[2007]],["vec",[R[2007]]]],["self"]]],[11,"permissioned",E,"Set the is_permissioned flag to make the network…",45,[[["self"],["bool"]],["self"]]],[11,"build",E,"Create the configured `NetworkBuilder` Return the…",45,[[["self"]]]],[11,"new",R[2033],E,46,[[["sender",[R[2010]]],[R[2010]]],["self"]]],[11,"send_transaction_upstream",E,"Send a SubmitTransactionRequest RPC request to remote peer…",46,[[["peerid"],[R[1492]],["self"],[R[410]]]]],[11,"new",E,E,47,[[["sender",[R[2010]]],[R[2010]]],["self"]]],[11,"send_to",E,E,47,[[["peerid"],[R[2034]],["self"]]]],[11,R[2036],E,E,47,[[[R[2034]],["self"]]]],[11,"request_block",E,E,47,[[["peerid"],["self"],[R[2048]],[R[410]]]]],[11,R[2038],E,E,47,[[["vec",[R[429]]],[R[429]],["self"]]]],[11,"new",E,E,48,[[["sender",[R[2010]]],[R[2010]]],["self"]]],[11,"send_to",E,E,48,[[["peerid"],[R[2049]],["self"]]]],[11,"new",E,E,49,[[["sender",[R[2010]]],[R[2010]]],["self"]]],[11,"send_to",E,E,49,[[["peerid"],[R[2050]],["self"]]]],[6,"AdmissionControlNetworkEvents",E,"The interface from Network to Admission Control layer.",N,N],[6,"ConsensusNetworkEvents",E,"The interface from Network to Consensus layer.",N,N],[6,"HealthCheckerNetworkEvents",E,"The interface from Network to HealthChecker layer.",N,N],[6,"MempoolNetworkEvents",E,"The interface from Network to Mempool layer.",N,N],[6,"StateSynchronizerEvents",E,"The interface from Network to StateSynchronizer layer.",N,N],[17,"ADMISSION_CONTROL_RPC_PROTOCOL",E,"Protocol id for admission control RPC calls",N,N],[17,"CONSENSUS_DIRECT_SEND_PROTOCOL",E,"Protocol id for consensus direct-send calls",N,N],[17,"CONSENSUS_RPC_PROTOCOL",E,"Protocol id for consensus RPC calls",N,N],[17,"MEMPOOL_DIRECT_SEND_PROTOCOL",E,"Protocol id for mempool direct-send calls",N,N],[17,"STATE_SYNCHRONIZER_DIRECT_SEND_PROTOCOL",E,"Protocol id for state-synchronizer direct-send calls",N,N],[11,"new",E,E,50,[[[R[2013],[R[2035]]],[R[2035]]],["self"]]],[11,R[280],E,E,50,[[],[[R[2013],[R[2035]]],[R[2035]]]]],[11,"new",E,E,51,[[["sender",[R[2010]]],[R[2010]]],["self"]]],[11,"send_to",E,"Send a fire-and-forget direct-send message to remote peer…",51,[[["tmessage"],["peerid"],[R[2007]],["self"]]]],[11,R[2036],E,"Send the same message to many `recipients` using the…",51,[[["tmessage"],["self"],[R[2007]]]]],[11,"unary_rpc",E,R[2037],51,[[["tmessage"],["peerid"],[R[2007]],["self"],[R[410]]]]],[11,R[2038],E,"Update the set of eligible nodes that the network should…",51,[[[R[2030]],["hashmap",["peerid",R[2030]]],["self"],["peerid"]]]],[11,"dial_peer",E,"Dial the peer with the given `PeerId` at a `Multiaddr`.",51,[[["peerid"],[R[85]],["self"]]]],[11,"disconnect_peer",E,"Disconnect from the peer with the given `PeerId`.",51,[[["peerid"],["self"]]]],[11,R[280],E,"Unwrap the `NetworkSender` into the underlying…",51,[[],[["sender",[R[2010]]],[R[2010]]]]],[11,"get_mut",E,"Get a mutable reference to the underlying…",51,[[["self"]],["sender"]]],[11,"from_transport_error",R[2039],E,1,[[["error"],["into",["error"]]],["self"]]],[6,"ProtocolId","network","Type for unique identifier associated with each network…",N,N],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[2039],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[59],E,E,1,[[["self"]],["fail"]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],R[2040],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[172],E,E,6,[[]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[172],E,E,7,[[]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[172],E,E,8,[[]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[172],E,E,9,[[]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[172],E,E,10,[[]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[172],E,E,11,[[]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[172],E,E,12,[[]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[172],E,E,13,[[]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[172],E,E,14,[[]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[172],E,E,15,[[]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[172],E,E,16,[[]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"clear",E,E,17,[[["self"]]]],[11,R[172],E,E,17,[[]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[172],E,E,18,[[]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"clear",E,E,19,[[["self"]]]],[11,R[172],E,E,19,[[]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"clear",E,E,20,[[["self"]]]],[11,R[172],E,E,20,[[]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"clear",E,E,21,[[["self"]]]],[11,R[172],E,E,21,[[]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"clear",E,E,22,[[["self"]]]],[11,R[172],E,E,22,[[]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"clear",E,E,23,[[["self"]]]],[11,R[172],E,E,23,[[]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[2],E,E,52,[[[U]],[R[0]]]],[11,R[3],E,E,52,[[],[R[0]]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[R[7]]]],[11,"clear",E,E,52,[[["self"]]]],[11,R[172],E,E,52,[[]]],[11,"vzip",E,E,52,[[],["v"]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[2],E,E,53,[[[U]],[R[0]]]],[11,R[3],E,E,53,[[],[R[0]]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[R[7]]]],[11,"clear",E,E,53,[[["self"]]]],[11,R[172],E,E,53,[[]]],[11,"vzip",E,E,53,[[],["v"]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"clear",E,E,24,[[["self"]]]],[11,R[172],E,E,24,[[]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"clear",E,E,25,[[["self"]]]],[11,R[172],E,E,25,[[]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"clear",E,E,26,[[["self"]]]],[11,R[172],E,E,26,[[]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"clear",E,E,27,[[["self"]]]],[11,R[172],E,E,27,[[]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[172],E,E,28,[[]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,R[1038],E,E,31,[[["self"],["k"]],["bool"]]],[11,"clear",E,E,31,[[["self"]]]],[11,R[172],E,E,31,[[]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[13],R[2041],E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,R[1038],E,E,33,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[2],E,E,36,[[[U]],[R[0]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[R[7]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,R[1038],E,E,34,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,R[1038],E,E,35,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"into",R[2025],E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[2],E,E,37,[[[U]],[R[0]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[R[7]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[2],E,E,38,[[[U]],[R[0]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[R[7]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[2],E,E,42,[[[U]],[R[0]]]],[11,R[3],E,E,42,[[],[R[0]]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[R[7]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[2],E,E,39,[[[U]],[R[0]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[R[7]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[2],E,E,40,[[[U]],[R[0]]]],[11,R[3],E,E,40,[[],[R[0]]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[R[7]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",R[2042],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[57],E,E,41,[[["self"]],[R[58]]]],[11,R[2],E,E,41,[[[U]],[R[0]]]],[11,R[3],E,E,41,[[],[R[0]]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[R[7]]]],[11,R[59],E,E,41,[[["self"]],["fail"]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[13],R[2033],E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[2],E,E,46,[[[U]],[R[0]]]],[11,R[3],E,E,46,[[],[R[0]]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[R[7]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[2],E,E,47,[[[U]],[R[0]]]],[11,R[3],E,E,47,[[],[R[0]]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[R[7]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[2],E,E,48,[[[U]],[R[0]]]],[11,R[3],E,E,48,[[],[R[0]]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[R[7]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[2],E,E,49,[[[U]],[R[0]]]],[11,R[3],E,E,49,[[],[R[0]]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[R[7]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[2],E,E,50,[[[U]],[R[0]]]],[11,R[3],E,E,50,[[],[R[0]]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[R[7]]]],[11,R[89],E,E,50,[[["pin"],["s"],[R[25]]],[["poll",[R[24]]],[R[24],[R[0]]]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[2],E,E,51,[[[U]],[R[0]]]],[11,R[3],E,E,51,[[],[R[0]]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[R[7]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[2],E,E,43,[[[U]],[R[0]]]],[11,R[3],E,E,43,[[],[R[0]]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[R[7]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",R[2043],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[2],E,E,45,[[[U]],[R[0]]]],[11,R[3],E,E,45,[[],[R[0]]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[R[7]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[2],E,E,44,[[[U]],[R[0]]]],[11,R[3],E,E,44,[[],[R[0]]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[R[7]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,R[2044],R[2039],E,5,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[11,R[2045],E,E,5,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[11,R[2046],E,E,5,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[11,R[2047],E,E,5,[[["self"],[R[2007]],["vec",[R[2007]]]]]],[11,"start",E,E,5,[[["box"]],["boxfuture"]]],[11,R[75],R[2040],E,7,[[],[R[2034]]]],[11,R[75],E,E,8,[[],["proposal"]]],[11,R[75],E,E,12,[[],[R[2172]]]],[11,R[75],E,E,6,[[],["block"]]],[11,R[75],E,E,13,[[],["votemsg"]]],[11,R[75],E,E,14,[[],[R[2051]]]],[11,R[75],E,E,9,[[],[R[2048]]]],[11,R[75],E,E,11,[[],[R[2052]]]],[11,R[75],E,E,10,[[],[R[2053]]]],[11,R[75],E,E,23,[[],["peerinfo"]]],[11,R[75],E,E,25,[[],[R[2054]]]],[11,R[75],E,E,20,[[],[R[2055]]]],[11,R[75],E,E,24,[[],[R[2056]]]],[11,R[75],E,E,22,[[],["note"]]],[11,R[75],E,E,19,[[],[R[2057]]]],[11,R[75],E,E,21,[[],[R[2058]]]],[11,R[75],E,E,31,[[],["role"]]],[11,R[75],E,E,52,[[],["ping"]]],[11,R[75],E,E,53,[[],["pong"]]],[11,R[75],E,E,18,[[],[R[2049]]]],[11,R[75],E,E,26,[[],[R[2059]]]],[11,R[75],E,E,27,[[],[R[2060]]]],[11,R[75],E,E,28,[[],[R[2050]]]],[11,R[75],E,E,15,[[],[R[2061]]]],[11,R[75],E,E,16,[[],["ping"]]],[11,R[75],E,E,17,[[],["pong"]]],[11,"clone",E,E,7,[[["self"]],[R[2034]]]],[11,"clone",E,E,29,[[["self"]],["message"]]],[11,"clone",E,E,8,[[["self"]],["proposal"]]],[11,"clone",E,E,12,[[["self"]],[R[2172]]]],[11,"clone",E,E,6,[[["self"]],["block"]]],[11,"clone",E,E,13,[[["self"]],["votemsg"]]],[11,"clone",E,E,14,[[["self"]],[R[2051]]]],[11,"clone",E,E,9,[[["self"]],[R[2048]]]],[11,"clone",E,E,11,[[["self"]],[R[2052]]]],[11,"clone",E,E,10,[[["self"]],[R[2053]]]],[11,"clone",E,E,23,[[["self"]],["peerinfo"]]],[11,"clone",E,E,25,[[["self"]],[R[2054]]]],[11,"clone",E,E,20,[[["self"]],[R[2055]]]],[11,"clone",E,E,24,[[["self"]],[R[2056]]]],[11,"clone",E,E,22,[[["self"]],["note"]]],[11,"clone",E,E,19,[[["self"]],[R[2057]]]],[11,"clone",E,E,21,[[["self"]],[R[2058]]]],[11,"clone",E,E,31,[[["self"]],["role"]]],[11,"clone",E,E,52,[[["self"]],["ping"]]],[11,"clone",E,E,53,[[["self"]],["pong"]]],[11,"clone",E,E,18,[[["self"]],[R[2049]]]],[11,"clone",E,E,26,[[["self"]],[R[2059]]]],[11,"clone",E,E,27,[[["self"]],[R[2060]]]],[11,"clone",E,E,28,[[["self"]],[R[2050]]]],[11,"clone",E,E,32,[[["self"]],["message"]]],[11,"clone",E,E,15,[[["self"]],[R[2061]]]],[11,"clone",E,E,30,[[["self"]],["message"]]],[11,"clone",E,E,16,[[["self"]],["ping"]]],[11,"clone",E,E,17,[[["self"]],["pong"]]],[11,"clone",R[2041],E,34,[[["self"]],[R[2012]]]],[11,"clone",E,E,35,[[["self"]],[R[2014]]]],[11,"clone",E,E,33,[[["self"]],["message"]]],[11,"clone",R[2033],E,46,[[["self"]],[R[2198]]]],[11,"clone",E,E,47,[[["self"]],[R[2208]]]],[11,"clone",E,E,48,[[["self"]],[R[2135]]]],[11,"clone",E,E,49,[[["self"]],["statesynchronizersender"]]],[11,"clone",E,E,51,[[["self"]],["networksender"]]],[11,"clone","network",E,0,[[["self"]],[R[2030]]]],[11,R[247],R[2040],E,31,[[["self"],["role"]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",E,E,7,[[["self"],[R[2034]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[2034]]],["bool"]]],[11,"eq",E,E,29,[[["self"],["message"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["message"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["proposal"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["proposal"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[2172]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[2172]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["votemsg"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["votemsg"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[2051]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[2051]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[2048]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[2048]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[2052]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[2052]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[2053]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[2053]]],["bool"]]],[11,"eq",E,E,23,[[["self"],["peerinfo"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["peerinfo"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[2054]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[2054]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[2055]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[2055]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[2056]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[2056]]],["bool"]]],[11,"eq",E,E,22,[[["self"],["note"]],["bool"]]],[11,"ne",E,E,22,[[["self"],["note"]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[2057]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[2057]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[2058]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[2058]]],["bool"]]],[11,"eq",E,E,31,[[["self"],["role"]],["bool"]]],[11,"eq",E,E,52,[[["self"],["ping"]],["bool"]]],[11,"eq",E,E,53,[[["self"],["pong"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[2049]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[2049]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[2059]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[2059]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[2060]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[2060]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[2050]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[2050]]],["bool"]]],[11,"eq",E,E,32,[[["self"],["message"]],["bool"]]],[11,"ne",E,E,32,[[["self"],["message"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[2061]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[2061]]],["bool"]]],[11,"eq",E,E,30,[[["self"],["message"]],["bool"]]],[11,"ne",E,E,30,[[["self"],["message"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["ping"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["ping"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["pong"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["pong"]],["bool"]]],[11,"eq",R[2041],E,34,[[["self"],[R[2012]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[2012]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[2014]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[2014]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["message"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["message"]],["bool"]]],[11,"eq",R[2033],E,43,[[["self"],["event"]],["bool"]]],[11,"cmp",R[2040],E,31,[[["self"],["role"]],[R[32]]]],[11,"from",R[2042],E,41,[[["error"]],["self"]]],[11,"from",E,E,41,[[["peermanagererror"]],["self"]]],[11,"from",E,E,41,[[[R[253]]],["rpcerror"]]],[11,"from",E,E,41,[[[R[262]]],["rpcerror"]]],[11,"from",E,E,41,[[["canceled"]],["self"]]],[11,"from",E,E,41,[[["senderror"]],["rpcerror"]]],[11,"from",E,E,41,[[["elapsed"]],["rpcerror"]]],[11,"from",R[2039],E,1,[[["error"]],["self"]]],[11,"from",E,E,1,[[["canceled"]],["self"]]],[11,"hash",R[2040],E,31,[[["self"],["__h"]]]],[11,"fmt",R[2039],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2040],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,52,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,53,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2041],E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2042],E,41,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2025],E,37,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,39,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,40,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2033],E,43,[[["self"],[R[17]]],[R[0]]]],[11,"fmt","network",E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2039],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2042],E,41,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[2039],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"name",R[2042],E,41,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,41,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,41,[[["self"]],[[R[35]],[R[24],[R[35]]]]]],[11,"name",R[2039],E,1,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,1,[[["self"]],[[R[35]],[R[24],[R[35]]]]]],[11,R[1599],R[2033],E,50,[[["self"]],["bool"]]],[11,R[101],E,E,50,[[["pin"],["self"],[R[25]]],[[R[24]],["poll",[R[24]]]]]],[11,"size_hint",E,E,50,[[["self"]]]],[11,R[514],R[2040],E,7,[[["self"],["b"]]]],[11,R[515],E,E,7,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,7,[[["self"]],["usize"]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[514],E,E,8,[[["self"],["b"]]]],[11,R[515],E,E,8,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,8,[[["self"]],["usize"]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[514],E,E,12,[[["self"],["b"]]]],[11,R[515],E,E,12,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,12,[[["self"]],["usize"]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[514],E,E,6,[[["self"],["b"]]]],[11,R[515],E,E,6,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,6,[[["self"]],["usize"]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[514],E,E,13,[[["self"],["b"]]]],[11,R[515],E,E,13,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,13,[[["self"]],["usize"]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[514],E,E,14,[[["self"],["b"]]]],[11,R[515],E,E,14,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,14,[[["self"]],["usize"]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[514],E,E,9,[[["self"],["b"]]]],[11,R[515],E,E,9,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,9,[[["self"]],["usize"]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[514],E,E,11,[[["self"],["b"]]]],[11,R[515],E,E,11,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,11,[[["self"]],["usize"]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[514],E,E,10,[[["self"],["b"]]]],[11,R[515],E,E,10,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,10,[[["self"]],["usize"]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[514],E,E,23,[[["self"],["b"]]]],[11,R[515],E,E,23,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,23,[[["self"]],["usize"]]],[11,"clear",E,E,23,[[["self"]]]],[11,R[514],E,E,25,[[["self"],["b"]]]],[11,R[515],E,E,25,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,25,[[["self"]],["usize"]]],[11,"clear",E,E,25,[[["self"]]]],[11,R[514],E,E,20,[[["self"],["b"]]]],[11,R[515],E,E,20,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,20,[[["self"]],["usize"]]],[11,"clear",E,E,20,[[["self"]]]],[11,R[514],E,E,24,[[["self"],["b"]]]],[11,R[515],E,E,24,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,24,[[["self"]],["usize"]]],[11,"clear",E,E,24,[[["self"]]]],[11,R[514],E,E,22,[[["self"],["b"]]]],[11,R[515],E,E,22,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,22,[[["self"]],["usize"]]],[11,"clear",E,E,22,[[["self"]]]],[11,R[514],E,E,19,[[["self"],["b"]]]],[11,R[515],E,E,19,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,19,[[["self"]],["usize"]]],[11,"clear",E,E,19,[[["self"]]]],[11,R[514],E,E,21,[[["self"],["b"]]]],[11,R[515],E,E,21,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,21,[[["self"]],["usize"]]],[11,"clear",E,E,21,[[["self"]]]],[11,R[514],E,E,52,[[["self"],["b"]]]],[11,R[515],E,E,52,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,52,[[["self"]],["usize"]]],[11,"clear",E,E,52,[[["self"]]]],[11,R[514],E,E,53,[[["self"],["b"]]]],[11,R[515],E,E,53,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,53,[[["self"]],["usize"]]],[11,"clear",E,E,53,[[["self"]]]],[11,R[514],E,E,18,[[["self"],["b"]]]],[11,R[515],E,E,18,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,18,[[["self"]],["usize"]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[514],E,E,26,[[["self"],["b"]]]],[11,R[515],E,E,26,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,26,[[["self"]],["usize"]]],[11,"clear",E,E,26,[[["self"]]]],[11,R[514],E,E,27,[[["self"],["b"]]]],[11,R[515],E,E,27,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,27,[[["self"]],["usize"]]],[11,"clear",E,E,27,[[["self"]]]],[11,R[514],E,E,28,[[["self"],["b"]]]],[11,R[515],E,E,28,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,28,[[["self"]],["usize"]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[514],E,E,15,[[["self"],["b"]]]],[11,R[515],E,E,15,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,15,[[["self"]],["usize"]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[514],E,E,16,[[["self"],["b"]]]],[11,R[515],E,E,16,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,16,[[["self"]],["usize"]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[514],E,E,17,[[["self"],["b"]]]],[11,R[515],E,E,17,[[["self"],["b"]],[[R[0],[R[262]]],[R[262]]]]],[11,R[388],E,E,17,[[["self"]],["usize"]]],[11,"clear",E,E,17,[[["self"]]]]],"p":[[3,R[2062]],[4,R[2063]],[4,R[2064]],[4,R[2065]],[8,R[2066]],[3,R[2067]],[3,"Block"],[3,R[2068]],[3,"Proposal"],[3,R[2016]],[3,R[2018]],[3,R[2017]],[3,"SyncInfo"],[3,"VoteMsg"],[3,R[2069]],[3,R[2070]],[3,"Ping2"],[3,"Pong2"],[3,R[2071]],[3,R[2072]],[3,R[2073]],[3,R[2074]],[3,"Note"],[3,"PeerInfo"],[3,R[2075]],[3,R[2076]],[3,R[2077]],[3,R[2078]],[3,R[2079]],[4,R[2080]],[4,R[2081]],[4,R[2082]],[4,R[2083]],[3,"Message"],[4,R[2084]],[4,R[2085]],[3,"DirectSend"],[3,R[2086]],[3,R[2087]],[4,R[2088]],[4,R[2089]],[4,"RpcError"],[3,"Rpc"],[4,"Event"],[4,R[2090]],[3,R[2091]],[3,R[2092]],[3,R[2093]],[3,R[2094]],[3,R[2095]],[3,R[2096]],[3,R[2097]],[3,"Ping"],[3,"Pong"]]};
searchIndex["noise"]={"doc":"[Noise protocol framework][noise] support for use in Libra.","i":[[3,R[250],"noise","A Noise session with a remote",N,N],[3,R[251],E,"The Noise protocol configuration to be used to perform a…",N,N],[11,"get_remote_static",E,"Pull out the static public key of the remote",0,[[["self"]],[R[24]]]],[11,"new",E,"Create a new NoiseConfig with the provided keypair",1,[[],["self"]]],[11,"new_random",E,"Create a new NoiseConfig with an ephemeral static key.",1,[[],["self"]]],[11,R[249],E,"Perform a protocol upgrade on an underlying connection. In…",1,[[["self"],[R[80]],[R[100]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[102],E,E,0,[[["self"],["pin"],[R[25]]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,R[103],E,E,0,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[104],E,E,0,[[["pin"],["self"],[R[25]]],[["poll",[R[0]]],[R[0]]]]],[11,R[105],E,E,0,[[["self"],["pin"],[R[25]]],[[R[0],["usize"]],["poll",[R[0]]]]]]],"p":[[3,R[250]],[3,R[251]]]};
searchIndex["safety_rules"]={"doc":E,"i":[[3,R[2204],R[2199],"The state required to guarantee safety of the protocol. We…",N,N],[3,R[2205],E,"SafetyRules is responsible for two things that are…",N,N],[4,"Error",E,"Different reasons for proposal rejection",N,N],[13,"InvalidAccumulatorExtension",E,E,0,N],[12,"error",R[2200],E,0,N],[13,"ProposalRoundLowerThenPreferredBlock",R[2199],"This proposal's round is less than round of preferred…",0,N],[12,R[2202],R[2200],E,0,N],[13,"OldProposal",R[2199],"This proposal is too old - return last_vote_round",0,N],[12,R[2201],R[2200],E,0,N],[12,"proposal_round",E,E,0,N],[11,"new",R[2199],E,1,[[["u64"],["round"]],["self"]]],[11,R[2201],E,"Returns the last round that was voted on",1,[[["self"]],["round"]]],[11,R[2202],E,"Returns the preferred block round",1,[[["self"]],["round"]]],[11,"new",E,"Constructs a new instance of SafetyRules given the…",2,[[[R[2138]],[R[2203]],["arc",[R[2138]]]],["self"]]],[11,"signer",E,E,2,[[["self"]],[R[2138]]]],[11,"update",E,"Learn about a new quorum certificate. Several things can…",2,[[["self"],[R[2139]]]]],[11,"consensus_state",E,"Clones the up-to-date state of consensus (for monitoring /…",2,[[["self"]],[R[2203]]]],[11,"construct_and_sign_vote",E,"Attempts to vote for a given proposal following the voting…",2,[[["self"],[R[2051]]],[["error"],[R[0],["vote","error"]],["vote"]]]],[11,"sign_proposal",E,E,2,[[["self"],[R[2169]],["payload"]],[[R[0],["block","error"]],["block"],["error"]]]],[11,"sign_timeout",E,"As the holder of the private key, SafetyRules also signs…",2,[[["self"],["timeout"]],[[R[412]],[R[0],[R[412],"error"]],["error"]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,1,[[["self"],["k"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[59],E,E,0,[[["self"]],["fail"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[75],E,E,1,[[],[R[2203]]]],[11,"clone",E,E,1,[[["self"]],[R[2203]]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2203]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2203]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,R[193],E,E,1,[[["__d"]],[R[0]]]],[11,R[142],E,E,1,[[["self"],["__s"]],[R[0]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[24],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[24],["fail"]],["fail"]]]],[11,R[35],E,E,0,[[["self"]],[[R[24],[R[35]]],[R[35]]]]]],"p":[[4,"Error"],[3,R[2204]],[3,R[2205]]]};
searchIndex["schemadb"]={"doc":"This library implements a schematized DB on top of…","i":[[3,R[2000],"schemadb","`SchemaBatch` holds a collection of updates that can be…",N,N],[3,R[2001],E,"DB Iterator parameterized on [`Schema`] that seeks with…",N,N],[3,"DB",E,"This DB is a schematized RocksDB wrapper where all data…",N,N],[0,"schema",E,"This module provides traits that define the behavior of a…",N,N],[5,"assert_encode_decode","schemadb::schema","Helper used in tests to assert a (key, value) pair for a…",N,[[]]],[8,"KeyCodec",E,R[1993],N,N],[10,"encode_key",E,R[1994],0,[[["self"]],[["vec",["u8"]],[R[0],["vec"]]]]],[10,"decode_key",E,R[1995],0,[[],[R[0]]]],[8,"ValueCodec",E,R[1993],N,N],[10,"encode_value",E,R[1994],1,[[["self"]],[["vec",["u8"]],[R[0],["vec"]]]]],[10,"decode_value",E,R[1995],1,[[],[R[0]]]],[8,R[1999],E,"This defines a type that can be used to seek a…",N,N],[10,"encode_seek_key",E,"Converts `self` to bytes which is used to seek the…",2,[[["self"]],[["vec",["u8"]],[R[0],["vec"]]]]],[8,"Schema",E,"This trait defines a schema: an association of a column…",N,N],[18,"COLUMN_FAMILY_NAME",E,"The column family name associated with this struct. Note:…",3,N],[16,"Key",E,"Type of the key.",3,N],[16,"Value",E,"Type of the value.",3,N],[6,"ColumnFamilyOptions","schemadb","Type alias to `rocksdb::ColumnFamilyOptions`. See `rocksdb…",N,N],[6,"ReadOptions",E,"Type alias to `rocksdb::ReadOptions`. See `rocksdb doc`",N,N],[6,"ColumnFamilyName",E,R[1996],N,N],[6,"ColumnFamilyOptionsMap",E,R[1996],N,N],[17,"DEFAULT_CF_NAME",E,"Name for the `default` column family that's always open by…",N,N],[11,"new",E,"Creates an empty batch.",4,[[],["self"]]],[11,"put",E,"Adds an insert/update operation to the batch.",4,[[["self"]],[R[0]]]],[11,"delete",E,"Adds a delete operation to the batch.",4,[[["self"]],[R[0]]]],[11,"seek_to_first",E,"Seeks to the first key.",5,[[["self"]],["bool"]]],[11,"seek_to_last",E,"Seeks to the last key.",5,[[["self"]],["bool"]]],[11,"seek",E,"Seeks to the first key whose binary representation is…",5,[[["self"],["sk"]],[[R[0],["bool"]],["bool"]]]],[11,"seek_for_prev",E,"Seeks to the last key whose binary representation is less…",5,[[["self"],["sk"]],[[R[0],["bool"]],["bool"]]]],[11,"open",E,"Create db with all the column families provided if it…",6,[[["asref",["path"]],["path"],["columnfamilyoptionsmap"]],[R[0]]]],[11,"get",E,"Reads single record by key.",6,[[["self"]],[[R[0],[R[24]]],[R[24]]]]],[11,"put",E,"Writes single record.",6,[[["self"]],[R[0]]]],[11,"range_delete",E,"Delete all keys in range [begin, end).",6,[[["self"],["sk"]],[R[0]]]],[11,"iter",E,"Returns a [`SchemaIterator`] on a certain schema.",6,[[["self"],["readoptions"]],[[R[0],[R[1997]]],[R[1997]]]]],[11,"write_schemas",E,"Writes a group of records wrapped in a [`SchemaBatch`].",6,[[["self"],[R[1998]]],[R[0]]]],[11,"get_approximate_sizes_cf",E,"Returns the approximate size of each non-empty column…",6,[[["self"]],[[R[310],[R[58],"u64"]],[R[0],[R[310]]]]]],[11,"flush_all",E,"Flushes all memtable data. If `sync` is true, the flush…",6,[[["self"],["bool"]],[R[0]]]],[14,"define_schema",E,"Macro for defining a SchemaDB schema.",N,N],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"into",E,E,5,[[],[U]]],[11,R[246],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[75],E,E,4,[[],[R[1998]]]],[11,"next",E,E,5,[[["self"]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]]],"p":[[8,"KeyCodec"],[8,"ValueCodec"],[8,R[1999]],[8,"Schema"],[3,R[2000]],[3,R[2001]],[3,"DB"]]};
searchIndex["scratchpad"]={"doc":"This crate provides in-memory representation of Libra core…","i":[[3,R[572],"scratchpad","The Sparse Merkle Tree implementation.",N,N],[4,R[545],E,"`AccountState` describes the result of querying an account…",N,N],[13,"ExistsInScratchPad",E,"The account exists in the tree, therefore we can give its…",0,N],[13,"ExistsInDB",E,"The account does not exist in the tree, but exists in DB.…",0,N],[13,"DoesNotExist",E,"The account does not exist in either the tree or DB. This…",0,N],[13,"Unknown",E,"We do not know if this account exists or not and need to…",0,N],[11,"new",E,"Constructs a Sparse Merkle Tree with a root hash. This is…",1,[[[R[149]]],["self"]]],[11,"update",E,"Constructs a new Sparse Merkle Tree as if we are updating…",1,[[["self"],["vec"]],[[R[569]],[R[0],[R[569]]]]]],[11,"get",E,"Queries a `key` in this `SparseMerkleTree`.",1,[[["self"],[R[149]]],[R[492]]]],[11,R[570],E,"Returns the root hash of this tree.",1,[[["self"]],[R[149]]]],[11,"prune",E,"Prunes a tree by replacing every node reachable from root…",1,[[["self"]]]],[8,R[573],E,"A type that implements `ProofRead` can provide proof for…",N,N],[10,R[571],E,"Gets verified proof for this key in persistent storage.",2,[[["self"],[R[149]]],[[R[24],[R[322]]],[R[322]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[75],E,E,1,[[],["self"]]],[11,"eq",E,E,0,[[["self"],[R[492]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[492]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]]],"p":[[4,R[545]],[3,R[572]],[8,R[573]]]};
searchIndex["serializer_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["socket_bench_server"]={"doc":E,"i":[[3,"Args","socket_bench_server",E,N,N],[12,"tcp_addr",E,E,0,N],[12,"tcp_noise_addr",E,E,0,N],[12,"tcp_muxer_addr",E,E,0,N],[12,"tcp_noise_muxer_addr",E,E,0,N],[12,"msg_lens",E,E,0,N],[5,"build_memsocket_noise_transport",E,"Build a MemorySocket + Noise transport",N,[[]]],[5,"build_memsocket_muxer_transport",E,"Build a MemorySocket + Muxer transport",N,[[]]],[5,"build_memsocket_dual_muxed_transport",E,"Build a MemorySocket + Muxer + Muxer transport",N,[[]]],[5,"build_memsocket_noise_muxer_transport",E,"Build a MemorySocket + Noise + Muxer transport",N,[[]]],[5,"build_tcp_noise_transport",E,"Build a Tcp + Noise transport",N,[[]]],[5,"build_tcp_muxer_transport",E,"Build a Tcp + Muxer transport",N,[[]]],[5,"build_tcp_noise_muxer_transport",E,"Build a Tcp + Noise + Muxer transport",N,[[]]],[5,"server_stream_handler",E,R[255],N,[[["l"]]]],[5,"server_muxer_handler",E,R[255],N,[[["l"]]]],[5,"start_stream_server",E,E,N,[[[R[85]],[R[256]],[T]],[R[85]]]],[5,"start_muxer_server",E,E,N,[[[R[85]],[R[256]],[T]],[R[85]]]],[11,"from_env",E,E,0,[[],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]]],"p":[[3,"Args"]]};
searchIndex["stackless_bytecode_generator"]={"doc":E,"i":[[0,R[1363],R[1348],E,N,N],[4,R[1353],R[1350],E,N,N],[13,"MoveLoc",E,E,0,N],[13,"CopyLoc",E,E,0,N],[13,"StLoc",E,E,0,N],[13,"BorrowLoc",E,E,0,N],[13,"ReadRef",E,E,0,N],[13,"WriteRef",E,E,0,N],[13,"FreezeRef",E,E,0,N],[13,"Call",E,E,0,N],[13,"Ret",E,E,0,N],[13,"Pack",E,E,0,N],[13,"Unpack",E,E,0,N],[13,"BorrowField",E,E,0,N],[13,R[746],E,E,0,N],[13,R[1464],E,E,0,N],[13,R[1200],E,E,0,N],[13,"Exists",E,E,0,N],[13,R[745],E,E,0,N],[13,R[747],E,E,0,N],[13,R[748],E,E,0,N],[13,R[1359],E,E,0,N],[13,R[744],E,E,0,N],[13,R[743],E,E,0,N],[13,"LdTrue",E,E,0,N],[13,"LdFalse",E,E,0,N],[13,"LdConst",E,E,0,N],[13,"LdAddr",E,E,0,N],[13,R[1358],E,E,0,N],[13,"LdStr",E,E,0,N],[13,"Not",E,E,0,N],[13,"Add",E,E,0,N],[13,"Sub",E,E,0,N],[13,"Mul",E,E,0,N],[13,"Div",E,E,0,N],[13,"Mod",E,E,0,N],[13,"BitOr",E,E,0,N],[13,"BitAnd",E,E,0,N],[13,"Xor",E,E,0,N],[13,"Lt",E,E,0,N],[13,"Gt",E,E,0,N],[13,"Le",E,E,0,N],[13,"Ge",E,E,0,N],[13,"Or",E,E,0,N],[13,"And",E,E,0,N],[13,"Eq",E,E,0,N],[13,"Neq",E,E,0,N],[13,"Branch",E,E,0,N],[13,"BrTrue",E,E,0,N],[13,"BrFalse",E,E,0,N],[13,"Abort",E,E,0,N],[13,"NoOp",E,E,0,N],[0,R[1348],R[1348],E,N,N],[3,R[1354],R[1351],E,N,N],[12,"local_types",E,E,1,N],[12,"code",E,E,1,N],[3,R[1355],E,E,N,N],[12,"module_functions",E,E,2,N],[12,"compiled_modules",E,E,2,N],[3,R[1356],E,E,N,N],[3,R[1357],E,E,N,N],[11,"new",E,E,3,[[[R[829]]],["self"]]],[11,"generate_program",E,E,3,[[],["stacklessprogram"]]],[11,"new",E,E,4,[[[R[750]]],["self"]]],[11,"generate_module",E,E,4,[[],[["vec",[R[1349]]],[R[1349]]]]],[11,R[13],R[1350],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[1351],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"clone",R[1350],E,0,[[["self"]],[R[1352]]]],[11,"eq",E,E,0,[[["self"],[R[1352]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1352]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]]],"p":[[4,R[1353]],[3,R[1354]],[3,R[1355]],[3,R[1356]],[3,R[1357]]]};
searchIndex["state_synchronizer"]={"doc":"Used to perform catching up between nodes for committed…","i":[[3,R[2105],"state_synchronizer",E,N,N],[3,R[2104],E,E,N,N],[11,"bootstrap",E,"Setup state synchronizer. spawns coordinator and…",0,[[["arc",["executor"]],["vec"],["executor",["movevm"]],[R[929]]],["self"]]],[11,"bootstrap_with_executor_proxy",E,E,0,[[["executorproxytrait"],["vec"],[R[952]],[R[2102]]],["self"]]],[11,"create_client",E,E,0,[[["self"]],[["arc",[R[2103]]],[R[2103]]]]],[11,"sync_to",E,"Sync validator's state to target. In case of success…",1,[[["self"],[R[298]]]]],[11,"commit",E,"Notifies state synchronizer about new version",1,[[["self"],["u64"]]]],[11,"get_state",E,"Returns information about StateSynchronizer internal state",1,[[["self"]]]],[11,"get_epoch_proof",E,E,1,[[["self"],["u64"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]]],"p":[[3,R[2104]],[3,R[2105]]]};
searchIndex["stdlib"]={"doc":E,"i":[[5,"stdlib_modules","stdlib","Returns a reference to the standard library, compiled with…",N,[[]]],[5,"stdlib_source_map",E,"Returns a reference to the source maps for the standard…",N,[[]]],[5,"build_stdlib",E,"Builds and returns a copy of the standard library with…",N,[[[R[265]]]]],[0,"stdlib",E,E,N,N],[5,"account_module","stdlib::stdlib",E,N,[[],[R[609]]]],[5,"coin_module",E,E,N,[[],[R[609]]]],[5,"native_hash_module",E,E,N,[[],[R[609]]]],[5,"signature_module",E,E,N,[[],[R[609]]]],[5,"validator_config_module",E,E,N,[[],[R[609]]]],[5,"libra_system_module",E,E,N,[[],[R[609]]]],[5,"address_util_module",E,E,N,[[],[R[609]]]],[5,"u64_util_module",E,E,N,[[],[R[609]]]],[5,"bytearray_util_module",E,E,N,[[],[R[609]]]],[5,"event_module",E,E,N,[[],[R[609]]]],[5,"module_defs",E,E,N,[[]]],[0,"transaction_scripts","stdlib",E,N,N],[3,R[1340],"stdlib::transaction_scripts",E,N,N],[3,R[1341],E,E,N,N],[3,R[1342],E,E,N,N],[3,R[1343],E,E,N,N],[3,R[1344],E,E,N,N],[3,R[1345],E,E,N,N],[5,"peer_to_peer",E,"Returns the source code for peer-to-peer transaction script.",N,[[],["str"]]],[5,R[1668],E,"Returns the source code for create-account transaction…",N,[[],["str"]]],[5,"rotate_consensus_pubkey",E,"Returns the source code for the rotate-consensus-pubkey…",N,[[],["str"]]],[5,R[1798],E,"Returns the source code for the rotate-key transaction…",N,[[],["str"]]],[5,"mint",E,"Returns the source code for the mint transaction script.",N,[[],["str"]]],[5,"block_prologue",E,"Returns the source code for the block prologue script",N,[[],["str"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"deref",E,E,0,[[["self"]],["program"]]],[11,"deref",E,E,1,[[["self"]],["program"]]],[11,"deref",E,E,2,[[["self"]],["program"]]],[11,"deref",E,E,3,[[["self"]],["program"]]],[11,"deref",E,E,4,[[["self"]],["program"]]],[11,"deref",E,E,5,[[["self"]],["program"]]],[11,R[172],E,E,0,[[["self"]]]],[11,R[172],E,E,1,[[["self"]]]],[11,R[172],E,E,2,[[["self"]]]],[11,R[172],E,E,3,[[["self"]]]],[11,R[172],E,E,4,[[["self"]]]],[11,R[172],E,E,5,[[["self"]]]]],"p":[[3,R[1340]],[3,R[1341]],[3,R[1342]],[3,R[1343]],[3,R[1344]],[3,R[1345]]]};
searchIndex["storage_client"]={"doc":"This crate implements a client library for storage that…","i":[[3,R[1570],"storage_client","`VerifiedStateView` is like a snapshot of the global state…",N,N],[3,R[1573],E,"This provides storage read interfaces backed by real…",N,N],[3,R[1574],E,"This provides storage write interfaces backed by real…",N,N],[11,"new",E,"Constructs a [`VerifiedStateView`] with persistent state…",0,[[[R[279]],["arc",[R[1556]]],[R[24],[R[279]]],[R[149]],["sparsemerkletree"],[R[1556]]],["self"]]],[8,R[1571],E,R[1562],N,N],[10,R[1496],E,R[1557],1,[[["self"],[R[279]],[R[297]],["vec",[R[297]]]],[R[0]]]],[10,R[1538],E,R[1557],1,[[["self"],[R[279]],[R[297]],["vec",[R[297]]]],[["box",["future"]],["pin",["box"]]]]],[10,R[1539],E,R[1558],1,[[["self"],[R[279]],["u64"],["bool"]],[[R[301]],[R[0],[R[301]]]]]],[10,R[1565],E,R[1558],1,[[["self"],[R[279]],["u64"],["bool"]],[["pin",["box"]],["box",["future"]]]]],[10,R[1541],E,R[1559],1,[[["self"],[R[265]],[R[279]]],[R[0]]]],[10,R[1566],E,R[1559],1,[[["self"],[R[265]],[R[279]]],[["box",["future"]],["pin",["box"]]]]],[10,R[1543],E,R[1560],1,[[["self"]],[[R[0],[R[24]]],[R[24],[R[1548]]]]]],[10,R[1567],E,R[1560],1,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[10,R[1545],E,R[1561],1,[[["self"],["u64"]],[["vec",[R[298]]],[R[0],["vec"]]]]],[10,R[1568],E,R[1561],1,[[["self"],["u64"]],[["box",["future"]],["pin",["box"]]]]],[8,R[1572],E,R[1562],N,N],[10,R[1535],E,R[1563],2,[[["self"],[R[279]],[R[24],[R[298]]],[R[477]],[R[298]],["vec",[R[477]]]],[R[0]]]],[10,R[1569],E,R[1563],2,[[["self"],[R[279]],[R[24],[R[298]]],[R[477]],[R[298]],["vec",[R[477]]]],[["pin",["box"]],["box",["future"]]]]],[11,"new",E,"Constructs a `StorageReadServiceClient` with given host…",3,[[["u16"],[R[1564]],["str"],["arc",[R[1564]]]],["self"]]],[11,"new",E,"Constructs a `StorageWriteServiceClient` with given host…",4,[[[R[24],["i32"]],["i32"],["u16"],[R[1564]],["str"],["arc",[R[1564]]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[1496],E,E,3,[[["self"],[R[279]],[R[297]],["vec",[R[297]]]],[R[0]]]],[11,R[1538],E,E,3,[[["self"],[R[279]],[R[297]],["vec",[R[297]]]],[["box",["future"]],["pin",["box"]]]]],[11,R[1539],E,E,3,[[["self"],[R[279]],["u64"],["bool"]],[[R[301]],[R[0],[R[301]]]]]],[11,R[1565],E,E,3,[[["self"],[R[279]],["u64"],["bool"]],[["pin",["box"]],["box",["future"]]]]],[11,R[1541],E,E,3,[[["self"],[R[265]],[R[279]]],[R[0]]]],[11,R[1566],E,E,3,[[["self"],[R[265]],[R[279]]],[["box",["future"]],["pin",["box"]]]]],[11,R[1543],E,E,3,[[["self"]],[[R[0],[R[24]]],[R[24],[R[1548]]]]]],[11,R[1567],E,E,3,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,R[1545],E,E,3,[[["self"],["u64"]],[["vec",[R[298]]],[R[0],["vec"]]]]],[11,R[1568],E,E,3,[[["self"],["u64"]],[["box",["future"]],["pin",["box"]]]]],[11,R[1535],E,E,4,[[["self"],[R[279]],[R[24],[R[298]]],[R[477]],[R[298]],["vec",[R[477]]]],[R[0]]]],[11,R[1569],E,E,4,[[["self"],[R[279]],[R[24],[R[298]]],[R[477]],[R[298]],["vec",[R[477]]]],[["pin",["box"]],["box",["future"]]]]],[11,"into",E,E,0,[[]]],[11,"clone",E,E,3,[[["self"]],["storagereadserviceclient"]]],[11,"clone",E,E,4,[[["self"]],["storagewriteserviceclient"]]],[11,"get",E,E,0,[[["self"],[R[267]]],[[R[0],[R[24]]],[R[24],["vec"]]]]],[11,"multi_get",E,E,0,[[["self"]],[["vec",[R[24]]],[R[0],["vec"]]]]],[11,R[1655],E,E,0,[[["self"]],["bool"]]]],"p":[[3,R[1570]],[8,R[1571]],[8,R[1572]],[3,R[1573]],[3,R[1574]]]};
searchIndex["storage_proto"]={"doc":"This crate provides Protocol Buffers definitions for the…","i":[[3,R[1516],R[1546],R[1509],N,N],[12,R[333],E,"The access path to query with.",0,N],[12,R[279],E,"The version the query is based on.",0,N],[3,R[1517],E,R[1509],N,N],[12,R[1510],E,"The account state blob requested.",1,N],[12,R[1518],E,"The state root hash the query is based on.",1,N],[3,R[1511],E,R[1509],N,N],[12,R[1512],E,E,2,N],[12,R[1513],E,E,2,N],[12,R[1514],E,E,2,N],[3,R[387],E,R[1509],N,N],[12,R[380],E,E,3,N],[12,"batch_size",E,E,3,N],[12,R[1515],E,E,3,N],[12,R[290],E,E,3,N],[3,R[392],E,R[1509],N,N],[12,R[382],E,E,4,N],[3,R[1550],E,E,N,N],[12,R[279],E,E,5,N],[12,R[1520],E,E,5,N],[12,R[1521],E,E,5,N],[3,R[1522],E,R[1509],N,N],[12,R[311],E,E,6,N],[12,R[1523],E,E,6,N],[12,R[1524],E,E,6,N],[3,R[1519],E,R[1509],N,N],[12,"info",E,E,7,N],[3,R[1525],E,R[1509],N,N],[12,R[1526],E,E,8,N],[3,R[1527],E,R[1509],N,N],[12,R[1528],E,E,9,N],[0,"proto",E,E,N,N],[0,"storage","storage_proto::proto",E,N,N],[3,R[1511],R[1547],E,N,N],[12,R[1512],E,"Transactions to persist.",10,N],[12,R[1513],E,"The version of the first transaction in `txns_to_commit`.",10,N],[12,R[1514],E,"If this is set, Storage will check its state after…",10,N],[3,R[1552],E,E,N,N],[3,R[387],E,E,N,N],[12,R[380],E,"The version to start with.",11,N],[12,"batch_size",E,"The size of the transaction batch.",11,N],[12,R[1515],E,"All the proofs returned in the response should be relative…",11,N],[12,R[290],E,"Used to return the events associated with each transaction",11,N],[3,R[392],E,E,N,N],[12,R[382],E,E,12,N],[3,R[1516],E,E,N,N],[12,R[333],E,E,13,N],[12,R[279],E,E,13,N],[3,R[1517],E,E,N,N],[12,R[1510],E,E,14,N],[12,R[1518],E,E,14,N],[3,R[1553],E,E,N,N],[3,R[1519],E,E,N,N],[12,"info",E,"When this is empty, Storage needs to be bootstrapped via…",15,N],[3,R[1550],E,E,N,N],[12,R[279],E,"The version of the tree state. All fields below are based…",16,N],[12,R[1520],E,"From left to right, root hashes of all frozen subtrees.",16,N],[12,R[1521],E,"The latest account state root hash.",16,N],[3,R[1522],E,E,N,N],[12,R[311],E,"The latest committed LedgerInfo. Note that at start up…",17,N],[12,R[1523],E,"The latest committed tree state matching the ledger info…",17,N],[12,R[1524],E,"The latest synced tree state when the number of…",17,N],[3,R[1525],E,E,N,N],[12,R[1526],E,E,18,N],[3,R[1527],E,E,N,N],[12,R[1528],E,E,19,N],[3,R[1551],E,E,N,N],[5,"create_storage",E,E,N,[[["storage"],["clone"],["send"]],["service"]]],[8,"Storage",E,E,N,N],[10,R[1535],E,E,20,[[["self"],[R[1508]],[R[1534]],[R[1529]],[R[1530],[R[1529]]]]]],[10,R[1496],E,E,20,[[["self"],[R[1508]],[R[482]],[R[479]],[R[1530],[R[482]]]]]],[10,R[1539],E,E,20,[[["self"],[R[1508]],[R[502]],[R[1530],[R[502]]],[R[501]]]]],[10,R[1541],E,E,20,[[["self"],[R[1508]],[R[1540]],[R[1531]],[R[1530],[R[1531]]]]]],[10,R[1543],E,E,20,[[["self"],[R[1508]],[R[1530],[R[1532]]],[R[1532]],[R[1542]]]]],[10,R[1545],E,E,20,[[["self"],[R[1508]],[R[1544]],[R[1530],[R[1533]]],[R[1533]]]]],[11,"new",E,E,21,[[["channel"]],["self"]]],[11,"save_transactions_opt",E,E,21,[[["self"],[R[1534]],[R[1495]]],[[R[1529]],[R[0],[R[1529]]]]]],[11,R[1535],E,E,21,[[["self"],[R[1534]]],[[R[1529]],[R[0],[R[1529]]]]]],[11,"save_transactions_async_opt",E,E,21,[[["self"],[R[1534]],[R[1495]]],[[R[0],[R[1494]]],[R[1494],[R[1529]]]]]],[11,R[1569],E,E,21,[[["self"],[R[1534]]],[[R[0],[R[1494]]],[R[1494],[R[1529]]]]]],[11,R[1536],E,E,21,[[["self"],[R[479]],[R[1495]]],[[R[482]],[R[0],[R[482]]]]]],[11,R[1496],E,E,21,[[["self"],[R[479]]],[[R[482]],[R[0],[R[482]]]]]],[11,R[1537],E,E,21,[[["self"],[R[479]],[R[1495]]],[[R[0],[R[1494]]],[R[1494],[R[482]]]]]],[11,R[1538],E,E,21,[[["self"],[R[479]]],[[R[0],[R[1494]]],[R[1494],[R[482]]]]]],[11,"get_transactions_opt",E,E,21,[[["self"],[R[1495]],[R[501]]],[[R[502]],[R[0],[R[502]]]]]],[11,R[1539],E,E,21,[[["self"],[R[501]]],[[R[502]],[R[0],[R[502]]]]]],[11,"get_transactions_async_opt",E,E,21,[[["self"],[R[1495]],[R[501]]],[[R[1494],[R[502]]],[R[0],[R[1494]]]]]],[11,R[1565],E,E,21,[[["self"],[R[501]]],[[R[1494],[R[502]]],[R[0],[R[1494]]]]]],[11,"get_account_state_with_proof_by_version_opt",E,E,21,[[["self"],[R[1495]],[R[1540]]],[[R[0],[R[1531]]],[R[1531]]]]],[11,R[1541],E,E,21,[[["self"],[R[1540]]],[[R[0],[R[1531]]],[R[1531]]]]],[11,"get_account_state_with_proof_by_version_async_opt",E,E,21,[[["self"],[R[1495]],[R[1540]]],[[R[1494],[R[1531]]],[R[0],[R[1494]]]]]],[11,R[1566],E,E,21,[[["self"],[R[1540]]],[[R[1494],[R[1531]]],[R[0],[R[1494]]]]]],[11,"get_startup_info_opt",E,E,21,[[["self"],[R[1495]],[R[1542]]],[[R[0],[R[1532]]],[R[1532]]]]],[11,R[1543],E,E,21,[[["self"],[R[1542]]],[[R[0],[R[1532]]],[R[1532]]]]],[11,"get_startup_info_async_opt",E,E,21,[[["self"],[R[1495]],[R[1542]]],[[R[1494],[R[1532]]],[R[0],[R[1494]]]]]],[11,R[1567],E,E,21,[[["self"],[R[1542]]],[[R[1494],[R[1532]]],[R[0],[R[1494]]]]]],[11,"get_latest_ledger_infos_per_epoch_opt",E,E,21,[[["self"],[R[1544]],[R[1495]]],[[R[0],[R[1533]]],[R[1533]]]]],[11,R[1545],E,E,21,[[["self"],[R[1544]]],[[R[0],[R[1533]]],[R[1533]]]]],[11,"get_latest_ledger_infos_per_epoch_async_opt",E,E,21,[[["self"],[R[1544]],[R[1495]]],[[R[1494],[R[1533]]],[R[0],[R[1494]]]]]],[11,R[1568],E,E,21,[[["self"],[R[1544]]],[[R[1494],[R[1533]]],[R[0],[R[1494]]]]]],[11,"spawn",E,E,21,[[["self"],["f"]]]],[0,"prelude",R[1546],E,N,N],[11,"new",E,R[282],0,[[[R[265]],[R[279]]],["self"]]],[11,"new",E,R[282],1,[[[R[277]],[R[322]],[R[24],[R[277]]]],["self"]]],[11,"new",E,R[282],2,[[[R[24],[R[298]]],[R[477]],[R[298]],["vec",[R[477]]],[R[279]]],["self"]]],[11,"new",E,R[282],3,[[["bool"],["u64"],[R[279]]],["self"]]],[11,"new",E,R[282],4,[[[R[301]]],["self"]]],[11,"new",E,E,5,[[[R[279]],[R[149]],["vec",[R[149]]]],["self"]]],[11,"new",E,R[282],8,[[["u64"]],["self"]]],[11,"new",E,R[282],9,[[[R[298]],["vec",[R[298]]]],["self"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],R[1547],E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[172],E,E,10,[[]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"clear",E,E,22,[[["self"]]]],[11,R[172],E,E,22,[[]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[172],E,E,11,[[]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[172],E,E,12,[[]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[172],E,E,13,[[]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[172],E,E,14,[[]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"clear",E,E,23,[[["self"]]]],[11,R[172],E,E,23,[[]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[172],E,E,15,[[]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[172],E,E,16,[[]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"clear",E,E,17,[[["self"]]]],[11,R[172],E,E,17,[[]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[172],E,E,18,[[]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"clear",E,E,19,[[["self"]]]],[11,R[172],E,E,19,[[]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",R[1546],E,1,[[]]],[11,"into",E,E,9,[[],[[R[298]],["vec",[R[298]]]]]],[11,R[75],R[1547],E,10,[[],[R[1534]]]],[11,R[75],E,E,22,[[],[R[1529]]]],[11,R[75],E,E,11,[[],[R[501]]]],[11,R[75],E,E,12,[[],[R[502]]]],[11,R[75],E,E,13,[[],[R[1540]]]],[11,R[75],E,E,14,[[],[R[1531]]]],[11,R[75],E,E,23,[[],[R[1542]]]],[11,R[75],E,E,15,[[],[R[1532]]]],[11,R[75],E,E,16,[[],[R[1549]]]],[11,R[75],E,E,17,[[],[R[1548]]]],[11,R[75],E,E,18,[[],[R[1544]]]],[11,R[75],E,E,19,[[],[R[1533]]]],[11,"clone",E,E,10,[[["self"]],[R[1534]]]],[11,"clone",E,E,22,[[["self"]],[R[1529]]]],[11,"clone",E,E,11,[[["self"]],[R[501]]]],[11,"clone",E,E,12,[[["self"]],[R[502]]]],[11,"clone",E,E,13,[[["self"]],[R[1540]]]],[11,"clone",E,E,14,[[["self"]],[R[1531]]]],[11,"clone",E,E,23,[[["self"]],[R[1542]]]],[11,"clone",E,E,15,[[["self"]],[R[1532]]]],[11,"clone",E,E,16,[[["self"]],[R[1549]]]],[11,"clone",E,E,17,[[["self"]],[R[1548]]]],[11,"clone",E,E,18,[[["self"]],[R[1544]]]],[11,"clone",E,E,19,[[["self"]],[R[1533]]]],[11,"clone",E,E,21,[[["self"]],["storageclient"]]],[11,"clone",R[1546],E,0,[[["self"]],[R[1540]]]],[11,"clone",E,E,1,[[["self"]],[R[1531]]]],[11,"clone",E,E,2,[[["self"]],[R[1534]]]],[11,"clone",E,E,3,[[["self"]],[R[501]]]],[11,"clone",E,E,4,[[["self"]],[R[502]]]],[11,"clone",E,E,5,[[["self"]],[R[1549]]]],[11,"clone",E,E,6,[[["self"]],[R[1548]]]],[11,"clone",E,E,7,[[["self"]],[R[1532]]]],[11,"clone",E,E,8,[[["self"]],[R[1544]]]],[11,"clone",E,E,9,[[["self"]],[R[1533]]]],[11,"eq",R[1547],E,10,[[["self"],[R[1534]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1534]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[1529]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[501]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[501]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[502]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[502]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1540]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1540]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[1531]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[1531]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[1542]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[1532]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[1532]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1549]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1549]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[1548]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[1548]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[1544]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[1544]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[1533]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[1533]]],["bool"]]],[11,"eq",R[1546],E,0,[[["self"],[R[1540]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1540]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1531]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1531]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1534]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1534]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[501]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[501]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[502]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[502]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1549]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1549]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1548]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[1548]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[1532]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[1532]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[1544]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[1544]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1533]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1533]]],["bool"]]],[11,"from",R[1547],E,13,[[[R[1540]]],["self"]]],[11,"from",E,E,14,[[[R[1531]]],["self"]]],[11,"from",E,E,10,[[[R[1534]]],["self"]]],[11,"from",E,E,11,[[[R[501]]],["self"]]],[11,"from",E,E,12,[[[R[502]]],["self"]]],[11,"from",E,E,16,[[[R[1549]]],["self"]]],[11,"from",E,E,17,[[[R[1548]]],["self"]]],[11,"from",E,E,15,[[[R[1532]]],["self"]]],[11,"from",E,E,18,[[[R[1544]]],["self"]]],[11,"from",E,E,19,[[[R[1533]]],["self"]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1546],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,R[2],E,E,0,[[[R[1540]]],[R[0]]]],[11,R[2],E,E,1,[[[R[1531]]],[R[0]]]],[11,R[2],E,E,2,[[[R[1534]]],[R[0]]]],[11,R[2],E,E,3,[[[R[501]]],[R[0]]]],[11,R[2],E,E,4,[[[R[502]]],[R[0]]]],[11,R[2],E,E,5,[[[R[1549]]],[R[0]]]],[11,R[2],E,E,6,[[[R[1548]]],[R[0]]]],[11,R[2],E,E,7,[[[R[1532]]],[R[0]]]],[11,R[2],E,E,8,[[[R[1544]]],[R[0]]]],[11,R[2],E,E,9,[[[R[1533]]],[R[0]]]],[11,R[514],R[1547],E,10,[[["self"],["b"]]]],[11,R[515],E,E,10,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,10,[[["self"]],["usize"]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[514],E,E,22,[[["self"],["b"]]]],[11,R[515],E,E,22,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,22,[[["self"]],["usize"]]],[11,"clear",E,E,22,[[["self"]]]],[11,R[514],E,E,11,[[["self"],["b"]]]],[11,R[515],E,E,11,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,11,[[["self"]],["usize"]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[514],E,E,12,[[["self"],["b"]]]],[11,R[515],E,E,12,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,12,[[["self"]],["usize"]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[514],E,E,13,[[["self"],["b"]]]],[11,R[515],E,E,13,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,13,[[["self"]],["usize"]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[514],E,E,14,[[["self"],["b"]]]],[11,R[515],E,E,14,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,14,[[["self"]],["usize"]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[514],E,E,23,[[["self"],["b"]]]],[11,R[515],E,E,23,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,23,[[["self"]],["usize"]]],[11,"clear",E,E,23,[[["self"]]]],[11,R[514],E,E,15,[[["self"],["b"]]]],[11,R[515],E,E,15,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,15,[[["self"]],["usize"]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[514],E,E,16,[[["self"],["b"]]]],[11,R[515],E,E,16,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,16,[[["self"]],["usize"]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[514],E,E,17,[[["self"],["b"]]]],[11,R[515],E,E,17,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,17,[[["self"]],["usize"]]],[11,"clear",E,E,17,[[["self"]]]],[11,R[514],E,E,18,[[["self"],["b"]]]],[11,R[515],E,E,18,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,18,[[["self"]],["usize"]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[514],E,E,19,[[["self"],["b"]]]],[11,R[515],E,E,19,[[["self"],["b"]],[[R[262]],[R[0],[R[262]]]]]],[11,R[388],E,E,19,[[["self"]],["usize"]]],[11,"clear",E,E,19,[[["self"]]]]],"p":[[3,R[1516]],[3,R[1517]],[3,R[1511]],[3,R[387]],[3,R[392]],[3,R[1550]],[3,R[1522]],[3,R[1519]],[3,R[1525]],[3,R[1527]],[3,R[1511]],[3,R[387]],[3,R[392]],[3,R[1516]],[3,R[1517]],[3,R[1519]],[3,R[1550]],[3,R[1522]],[3,R[1525]],[3,R[1527]],[8,"Storage"],[3,R[1551]],[3,R[1552]],[3,R[1553]]]};
searchIndex["storage_service"]={"doc":"This crate implements the storage GRPC service.","i":[[3,R[2100],R[2098],"The implementation of the storage GRPC service.",N,N],[5,"start_storage_service",E,"Starts storage service according to config.",N,[[[R[929]]],[R[1554]]]],[0,"mocks",E,"This module provides mocks of the storage components for…",N,N],[0,"mock_storage_client","storage_service::mocks","This module provides mock storage clients for tests.",N,N],[3,R[2101],R[2099],"This is a mock of the storage read client used in tests.",N,N],[11,"new",R[2098],"This opens a [`LibraDB`] at `path` and returns a…",0,[[["p"]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[2099],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"clone",E,E,1,[[["self"]],["mockstoragereadclient"]]],[11,"clone",R[2098],E,0,[[["self"]],["storageservice"]]],[11,R[1496],R[2099],E,1,[[["self"],[R[297]],["vec",[R[297]]],[R[279]]],[R[0]]]],[11,R[1538],E,E,1,[[["self"],[R[297]],["vec",[R[297]]],[R[279]]],[["box",["future"]],["pin",["box"]]]]],[11,R[1539],E,E,1,[[["self"],["bool"],[R[279]],["u64"]],[[R[301]],[R[0],[R[301]]]]]],[11,R[1565],E,E,1,[[["self"],["bool"],[R[279]],["u64"]],[["box",["future"]],["pin",["box"]]]]],[11,R[1541],E,E,1,[[["self"],[R[265]],[R[279]]],[R[0]]]],[11,R[1566],E,E,1,[[["self"],[R[265]],[R[279]]],[["box",["future"]],["pin",["box"]]]]],[11,R[1543],E,E,1,[[["self"]],[[R[0],[R[24]]],[R[24],[R[1548]]]]]],[11,R[1567],E,E,1,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,R[1545],E,E,1,[[["self"],["u64"]],[[R[0],["vec"]],["vec",[R[298]]]]]],[11,R[1568],E,E,1,[[["self"],["u64"]],[["box",["future"]],["pin",["box"]]]]],[11,R[1535],R[2098],E,0,[[["self"],[R[1534]],[R[1530],[R[1529]]],[R[1529]],[R[1508]]]]],[11,R[1496],E,E,0,[[["self"],[R[479]],[R[1530],[R[482]]],[R[482]],[R[1508]]]]],[11,R[1539],E,E,0,[[["self"],[R[502]],[R[1530],[R[502]]],[R[501]],[R[1508]]]]],[11,R[1541],E,E,0,[[["self"],[R[1531]],[R[1530],[R[1531]]],[R[1508]],[R[1540]]]]],[11,R[1543],E,E,0,[[["self"],[R[1530],[R[1532]]],[R[1542]],[R[1532]],[R[1508]]]]],[11,R[1545],E,E,0,[[["self"],[R[1544]],[R[1530],[R[1533]]],[R[1508]],[R[1533]]]]]],"p":[[3,R[2100]],[3,R[2101]]]};
searchIndex["test_generation"]={"doc":E,"i":[[5,"generate_bytecode",R[1969],"Generate a sequence of bytecode instructions such that -…",N,[[[R[635]],[R[749]]],[[R[764]],["vec",[R[764]]]]]],[5,"run_generation",E,"Run generate_bytecode for 'iterations' iterations and test…",N,[[["args"]]]],[0,R[1966],E,E,N,N],[3,R[1070],R[1981],"This models a value on the stack or in the locals",N,N],[12,"token",E,"Represents the type of the value",0,N],[12,"kind",E,"Represents the kind of the value",0,N],[3,R[1071],E,"An AbstractState represents an abstract view of the…",N,N],[12,"module",E,"The module state",1,N],[12,R[1992],E,"The global resources acquired by the function…",1,N],[4,R[1989],E,"The BorrowState denotes whether a local is `Available` or…",N,N],[13,"Available",E,E,2,N],[13,"Unavailable",E,E,2,N],[4,"Mutability",E,"This models the mutability of a reference",N,N],[13,"Mutable",E,"Represents a mutable reference",3,N],[13,"Immutable",E,"Represents an immutable reference",3,N],[13,"Either",E,"When we don't need to specify whether the reference is…",3,N],[11,"new_primitive",E,"Create a new primitive `AbstractValue` given its type; the…",0,[[[R[755]]],[R[1061]]]],[11,"new_reference",E,"Create a new reference `AbstractValue` given its type and…",0,[[["kind"],[R[755]]],[R[1061]]]],[11,"new_struct",E,"Create a new struct `AbstractValue` given its type and kind",0,[[["kind"],[R[755]]],[R[1061]]]],[11,"new",E,"Create a new AbstractState with empty stack, locals, and…",1,[[],[R[1056]]]],[11,"from_locals",E,"Create a new AbstractState given a list of…",1,[[["hashmap",["usize"]],["usize"],[R[749]],["vec",[R[778]]],[R[778]]],[R[1056]]]],[11,"register_copy",E,"Get the register value",1,[[["self"]],[[R[24],[R[1061]]],[R[1061]]]]],[11,"register_move",E,"Get the register value and set it to `None`",1,[[["self"]],[[R[24],[R[1061]]],[R[1061]]]]],[11,"register_set",E,"Set the register value and set it to `None`",1,[[["self"],[R[1061]]]]],[11,"stack_push",E,"Add a `AbstractValue` to the stack",1,[[["self"],[R[1061]]]]],[11,R[1974],E,"Add a `AbstractValue` to the stack from the register If…",1,[[["self"]],[["vmerror"],[R[0],["vmerror"]]]]],[11,"stack_pop",E,"Remove an `AbstractValue` from the stack if it exists to…",1,[[["self"]],[["vmerror"],[R[0],["vmerror"]]]]],[11,"stack_peek",E,"Get the `AbstractValue` at index `index` on the stack if…",1,[[["self"],["usize"]],[[R[24],[R[1061]]],[R[1061]]]]],[11,"stack_len",E,"Get the length of the stack.",1,[[["self"]],["usize"]]],[11,R[1975],E,"Check if the local at index `i` exists",1,[[["self"],["usize"]],["bool"]]],[11,"local_get",E,"Get the local at index `i` if it exists",1,[[["self"],["usize"]],[R[24]]]],[11,"local_take",E,"Place the local at index `i` if it exists into the…",1,[[["self"],["usize"]],[["vmerror"],[R[0],["vmerror"]]]]],[11,R[1978],E,"Place a reference to the local at index `i` if it exists…",1,[[["self"],["usize"],[R[1970]]],[["vmerror"],[R[0],["vmerror"]]]]],[11,"local_set",E,"Set the availability of the local at index `i` If it does…",1,[[["self"],["usize"],[R[1967]]],[["vmerror"],[R[0],["vmerror"]]]]],[11,R[1976],E,"Check whether a local is in a particular `BorrowState` If…",1,[[["self"],["usize"],[R[1967]]],[["vmerror"],[R[0],["bool","vmerror"]],["bool"]]]],[11,R[1977],E,"Check whether a local is in a particular `Kind` If the…",1,[[["self"],["kind"],["usize"]],[["vmerror"],[R[0],["bool","vmerror"]],["bool"]]]],[11,"local_insert",E,"Insert a local at index `i` as `Available`",1,[[["self"],["usize"],[R[1061]],[R[1967]]]]],[11,R[1979],E,"Insert a local at index `i` as `Available` from the…",1,[[["self"],["usize"]],[["vmerror"],[R[0],["vmerror"]]]]],[11,"get_locals",E,"Get all of the locals",1,[[["self"]],["hashmap"]]],[11,"abort",E,"Set the abstract state to be `aborted` when a precondition…",1,[[["self"]]]],[11,"has_aborted",E,"Whether the state is aborted",1,[[["self"]],["bool"]]],[11,"is_final",E,"The final state is one where the stack is empty",1,[[["self"]],["bool"]]],[0,R[1968],R[1969],E,N,N],[3,R[1073],R[1982],"The `BorrowGraph` stores information sufficient to…",N,N],[4,"EdgeType",E,"The `EdgeType` is either weak or strong. A weak edge…",N,N],[13,"Weak",E,E,4,N],[13,"Strong",E,E,4,N],[11,"new",E,"Construct a new `BorrowGraph` given the number of locals…",5,[[["u8"]],[R[1059]]]],[11,"fresh_partition",E,"Add a new partition to the graph containing nonce `n` This…",5,[[["self"]],[[R[58]],[R[0],[R[58]]]]]],[11,"partition_mutability",E,"Determine whether a partition is mutable, immutable, or…",5,[[["self"],["u16"]],[[R[1970]],[R[58]],[R[0],[R[1970],R[58]]]]]],[11,"partition_freezable",E,"Determine whether the given partition is freezable. This…",5,[[["self"],["u16"]],[[R[0],["bool",R[58]]],[R[58]],["bool"]]]],[11,"edges_consistent",E,"Determine whether two edges are consistent; i.e. whether…",5,[[["self"]],["bool"]]],[0,"bytecode_generator",R[1969],E,N,N],[3,R[1990],R[1983],"Generates a sequence of bytecode instructions. This…",N,N],[11,"new",E,"The `BytecodeGenerator` is instantiated with a seed to use…",6,[[[R[24]]],["self"]]],[11,"apply_instruction",E,"Transition an abstract state, `state` to the next state…",6,[[["self"],["vec"],[R[764]],[R[1056]]],[R[1056]]]],[11,"generate_block",E,"Given a valid starting state `abstract_state_in`, generate…",6,[[["self"],[R[1056]],[R[749]]],[[R[764]],["vec",[R[764]]]]]],[11,"generate",E,"Generate the body of a function definition given a set of…",6,[[["self"],[R[635]],[R[749]]],[[R[764]],["vec",[R[764]]]]]],[0,"config",R[1969],E,N,N],[3,"Args",R[1984],"Command line arguments for the tool",N,N],[12,"num_iterations",E,"The number of programs that will be generated",7,N],[12,"output_path",E,"Path where a serialized module should be saved. If `None`,…",7,N],[17,"MUTATION_TOLERANCE",E,"This defines how tolerant the generator will be about…",N,N],[17,"MAX_CFG_BLOCKS",E,"This defines the maximum number of blocks that will be…",N,N],[17,"NEGATE_PRECONDITIONS",E,"Whether preconditions will be negated to generate invalid…",N,N],[17,"NEGATION_PROBABILITY",E,"The probability that preconditions will be negated for a…",N,N],[17,"ALLOW_MEMORY_UNSAFE",E,"Whether generation of instructions that require borrow…",N,N],[17,"RUN_ON_VM",E,"Whether the generated programs should be run on the VM…",N,N],[17,"EXECUTE_UNVERIFIED_MODULE",E,"Whether generated modules will be executed even if they…",N,N],[17,"GAS_METERING",E,"Whether gas will be metered when running generated…",N,N],[0,R[1971],R[1969],E,N,N],[3,R[1991],R[1985],"This represents a basic block in a control flow graph",N,N],[3,"CFG",E,"A control flow graph",N,N],[11,"new",E,E,8,[[],[R[1972]]]],[11,"get_locals_in",E,"Get the locals coming into the block",8,[[["self"]],["hashmap"]]],[11,"get_locals_out",E,"Get the locals going out of the block",8,[[["self"]],["hashmap"]]],[11,"set_instructions",E,"Set the list of instructions that comprise the block",8,[[["self"],[R[764]],["vec",[R[764]]]]]],[11,"new",E,"Construct a control flow graph that contains empty basic…",9,[[["stdrng"],[R[635]],["u16"]],["cfg"]]],[11,"get_basic_blocks",E,"Get a reference to all of the basic blocks of the CFG",9,[[["self"]],["hashmap"]]],[11,"get_basic_blocks_mut",E,"Get a mutable reference to all of the basic blocks of the…",9,[[["self"]],["hashmap"]]],[11,"get_children_ids",E,"Retrieve the block IDs of all children of the given basic…",9,[[["self"],["u16"]],[["u16"],["vec",["u16"]]]]],[11,R[1973],E,"Retrieve the number of children the given basic block…",9,[[["self"],["u16"]],["u8"]]],[11,"get_parent_ids",E,"Retrieve the block IDs of all parents of the given basic…",9,[[["self"],["u16"]],[["u16"],["vec",["u16"]]]]],[11,"num_parents",E,"Retrieve the number of parents the given basic block…",9,[[["self"],["u16"]],["u8"]]],[11,"serialize_block_order",E,"Decide the serialization order of the blocks in the CFG",9,[[["self"]],[["u16"],["vec",["u16"]]]]],[11,R[142],E,"Serialize the control flow graph into a sequence of…",9,[[["self"]],[[R[764]],["vec",[R[764]]]]]],[0,"error",R[1969],E,N,N],[3,"VMError",R[1986],"This struct represents an error that is returned during…",N,N],[11,"new",E,E,10,[[[R[58]]],["vmerror"]]],[0,"summaries",R[1969],E,N,N],[3,"Summary",R[1987],"The `Summary` of a bytecode instruction contains a list of…",N,N],[12,"preconditions",E,E,11,N],[12,"effects",E,E,11,N],[5,"instruction_summary",E,"Return the `Summary` for a bytecode instruction,…",N,[[[R[764]]],["summary"]]],[0,"transitions",R[1969],E,N,N],[5,"stack_has","test_generation::transitions","Determine whether the stack is at least of size `index`.…",N,[[[R[1056]],["usize"],[R[24],[R[1061]]],[R[1061]]],["bool"]]],[5,"stack_kind_is",E,"Determine the abstract value at `index` is of the given…",N,[[[R[1056]],["kind"],["usize"]],["bool"]]],[5,"stack_has_polymorphic_eq",E,"Determine whether two tokens on the stack have the same type",N,[[[R[1056]],["usize"]],["bool"]]],[5,"stack_pop",E,"Pop from the top of the stack.",N,[[[R[1056]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_push",E,"Push given abstract_value to the top of the stack.",N,[[[R[1056]],[R[1061]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,R[1974],E,"Push to the top of the stack from the register.",N,[[[R[1056]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,R[1975],E,"Check whether the local at `index` exists",N,[[[R[1056]],["u8"]],["bool"]]],[5,R[1976],E,"Check whether the local at `index` is of the given…",N,[[[R[1056]],[R[1967]],["u8"]],["bool"]]],[5,R[1977],E,"Check whether the local at `index` is of the given kind",N,[[[R[1056]],["kind"],["u8"]],["bool"]]],[5,"local_set",E,"Set the availability of local at `index`",N,[[[R[1056]],[R[1967]],["u8"]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"local_take",E,"Put copy of the local at `index` in register",N,[[[R[1056]],["u8"]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,R[1978],E,"Put reference to local at `index` in register",N,[[[R[1056]],[R[1970]],["u8"]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,R[1979],E,"Insert the register value into the locals at `index`",N,[[[R[1056]],["u8"]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_local_polymorphic_eq",E,"Determine whether an abstract value on the stack and a…",N,[[[R[1056]],["usize"]],["bool"]]],[5,"stack_ref_polymorphic_eq",E,"Determine whether an abstract value on the stack that is a…",N,[[[R[1056]],["usize"]],["bool"]]],[5,"stack_satisfies_struct_signature",E,"Determine whether the struct at the given index can be…",N,[[[R[1056]],[R[778]]],["bool"]]],[5,"stack_struct_popn",E,"Pop the number of stack values required to construct the…",N,[[[R[1056]],[R[778]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"create_struct",E,"Construct a struct from abstract values on the stack The…",N,[[[R[1056]],[R[778]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_has_struct",E,"Determine if a struct (of the given signature) is at the…",N,[[[R[1056]],[R[24],[R[778]]],[R[778]]],["bool"]]],[5,"struct_is_resource",E,"Determine if a struct at the given index is a resource",N,[[[R[1056]],[R[778]]],["bool"]]],[5,"stack_unpack_struct",E,"Push the fields of a struct as `AbstractValue`s to the stack",N,[[[R[1056]],[R[778]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_struct_has_field",E,E,N,[[[R[1056]],[R[684]]],["bool"]]],[5,"stack_struct_borrow_field",E,"Push the field at `field_index` of a struct as an…",N,[[[R[1056]],[R[684]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_has_reference",E,"Determine whether the stack has a reference at `index`…",N,[[[R[1056]],["usize"],[R[1970]]],["bool"]]],[5,"register_dereference",E,"Dereference the value stored in the register. If the value…",N,[[[R[1056]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_push_register_borrow",E,"Push a reference to a register value with the given…",N,[[[R[1056]],[R[1970]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_satisfies_function_signature",E,"Determine whether the function at the given index can be…",N,[[[R[1056]],[R[692]]],["bool"]]],[5,"stack_function_call",E,"Simulate calling the function at `function_index`",N,[[[R[1056]],[R[692]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"stack_function_popn",E,"Pop the number of stack values required to call the…",N,[[[R[1056]],[R[692]]],[["vmerror"],[R[0],[R[1056],"vmerror"]],[R[1056]]]]],[5,"function_can_acquire_resource",E,"Whether the function acquires any global resources or not",N,[[[R[1056]]],["bool"]]],[5,"memory_safe",E,"TODO: This is a temporary function that represents memory…",N,[[[R[1056]],["usize"],[R[24],["usize"]]],["bool"]]],[14,"state_stack_has",R[1969],"Wrapper for enclosing the arguments of `stack_has` so that…",N,N],[14,"state_stack_kind_is",E,"Wrapper for enclosing the arguments of `stack_kind_is` so…",N,N],[14,"state_stack_has_polymorphic_eq",E,"Wrapper for for enclosing the arguments of…",N,N],[14,"state_stack_pop",E,"Wrapper for enclosing the arguments of `stack_pop` so that…",N,N],[14,"state_stack_push",E,"Wrapper for enclosing the arguments of `stack_push` so…",N,N],[14,"state_stack_push_register",E,R[1980],N,N],[14,"state_stack_local_polymorphic_eq",E,R[1980],N,N],[14,"state_local_exists",E,"Wrapper for enclosing the arguments of `local_exists` so…",N,N],[14,"state_local_availability_is",E,R[1980],N,N],[14,"state_local_kind_is",E,"Wrapper for enclosing the arguments of `local_kind_is` so…",N,N],[14,"state_local_set",E,"Wrapper for enclosing the arguments of `local_set` so that…",N,N],[14,"state_local_take",E,"Wrapper for enclosing the arguments of `local_take` so…",N,N],[14,"state_local_take_borrow",E,"Wrapper for enclosing the arguments of `local_take_borrow`…",N,N],[14,"state_local_place",E,"Wrapper for enclosing the arguments of `local_palce` so…",N,N],[14,"state_stack_ref_polymorphic_eq",E,R[1980],N,N],[14,"state_stack_satisfies_struct_signature",E,R[1980],N,N],[14,"state_stack_struct_popn",E,"Wrapper for enclosing the arguments of `stack_struct_popn`…",N,N],[14,"state_create_struct",E,"Wrapper for enclosing the arguments of `stack_pack_struct`…",N,N],[14,"state_stack_has_struct",E,"Wrapper for enclosing the arguments of `stack_has_struct`…",N,N],[14,"state_stack_unpack_struct",E,R[1980],N,N],[14,"state_struct_is_resource",E,R[1980],N,N],[14,"state_stack_struct_has_field",E,"Wrapper for enclosing the arguments of `struct_has_field`…",N,N],[14,"state_stack_struct_borrow_field",E,R[1980],N,N],[14,"state_stack_has_reference",E,R[1980],N,N],[14,"state_register_dereference",E,R[1980],N,N],[14,"state_stack_push_register_borrow",E,R[1980],N,N],[14,"state_stack_satisfies_function_signature",E,R[1980],N,N],[14,"state_stack_function_popn",E,R[1980],N,N],[14,"state_stack_function_call",E,R[1980],N,N],[14,"state_function_can_acquire_resource",E,R[1980],N,N],[14,"state_memory_safe",E,"Wrapper for enclosing the arguments of `memory_safe` so…",N,N],[14,"state_never",E,"Predicate that is false for every state.",N,N],[11,R[13],R[1981],E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[13],R[1982],E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],R[1983],E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",R[1984],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],R[1985],E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",R[1986],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",R[1987],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"clone",R[1981],E,2,[[["self"]],[R[1967]]]],[11,"clone",E,E,0,[[["self"]],[R[1061]]]],[11,"clone",E,E,3,[[["self"]],[R[1970]]]],[11,"clone",E,E,1,[[["self"]],[R[1056]]]],[11,"clone",R[1982],E,4,[[["self"]],["edgetype"]]],[11,"clone",E,E,5,[[["self"]],[R[1059]]]],[11,"clone",R[1983],E,6,[[["self"]],["bytecodegenerator"]]],[11,"clone",R[1985],E,8,[[["self"]],[R[1972]]]],[11,"clone",E,E,9,[[["self"]],["cfg"]]],[11,"eq",R[1981],E,2,[[["self"],[R[1967]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1061]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1061]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1970]]],["bool"]]],[11,"eq",R[1982],E,4,[[["self"],["edgetype"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1059]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1059]]],["bool"]]],[11,"fmt",R[1981],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1982],E,4,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1983],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1984],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1985],E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1986],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1981],E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1986],E,10,[[["self"],[R[17]]],[R[0]]]],[11,"clap",R[1984],E,7,[[],["app"]]],[11,R[1988],E,E,7,[[[R[1930]]],["self"]]]],"p":[[3,R[1070]],[3,R[1071]],[4,R[1989]],[4,"Mutability"],[4,"EdgeType"],[3,R[1073]],[3,R[1990]],[3,"Args"],[3,R[1991]],[3,"CFG"],[3,"VMError"],[3,"Summary"]]};
searchIndex["testsuite"]={"doc":E,"i":[],"p":[]};
searchIndex["transaction_builder"]={"doc":E,"i":[[5,"encode_transfer_script","transaction_builder",R[1347],N,[[["u64"],[R[265]]],["script"]]],[5,"encode_transfer_script_with_padding",E,R[1347],N,[[["u64"],[R[265]]],["script"]]],[5,"encode_create_account_script",E,"Encode a program creating a fresh account at…",N,[[["u64"],[R[265]]],["script"]]],[5,"encode_rotate_consensus_pubkey_script",E,"Encode a program that rotates the sender's consensus…",N,[[["vec",["u8"]],["u8"]],["script"]]],[5,"rotate_authentication_key_script",E,"Encode a program that rotates the sender's authentication…",N,[[[R[265]]],["script"]]],[5,"encode_mint_script",E,"Encode a program creating `amount` coins for sender",N,[[["u64"],[R[265]]],["script"]]],[5,"encode_block_prologue_script",E,E,N,[[[R[504]]],[R[351]]]],[5,"get_transaction_name",E,"Returns a user friendly mnemonic for the transaction type…",N,[[],[R[58]]]],[5,"allowing_script_hashes",E,E,N,[[],["vec"]]],[5,"default_config",E,E,N,[[],["vmconfig"]]]],"p":[]};
searchIndex["tree_heap"]={"doc":R[1940],"i":[[0,R[1941],"tree_heap",R[1942],N,N],[0,"translator",E,R[1943],N,N],[3,R[1361],"tree_heap::translator",E,N,N],[12,"modules",E,E,0,N],[12,R[732],E,E,0,N],[12,R[1944],E,E,0,N],[12,R[1945],E,E,0,N],[3,R[1362],E,E,N,N],[12,"module",E,E,1,N],[12,R[1363],E,E,1,N],[12,R[1946],E,E,1,N],[5,R[1947],E,E,N,[[[R[1035]],[R[686]]],[R[58]]]],[5,R[1948],E,E,N,[[[R[1035]],[R[755]]],[R[58]]]],[5,R[1949],E,E,N,[[[R[755]]],[R[58]]]],[5,R[1950],E,E,N,[[[R[1035]],["usize"]],[[R[58]],[R[310],[R[58]]]]]],[11,"new",E,E,0,[[],["self"]]],[11,R[1393],E,E,0,[[["self"]],[R[58]]]],[11,R[1951],E,E,0,[[["self"]],[R[58]]]],[11,"new",E,E,1,[[[R[1035]]],["self"]]],[11,R[1393],E,E,1,[[["self"]],[R[58]]]],[11,R[1952],E,E,1,[[["self"],["usize"]],[R[58]]]],[11,R[1953],E,E,1,[[["self"],[R[1352]],["usize"],[R[24]]],[R[58]]]],[11,R[1954],E,E,1,[[["self"],["usize"],[R[24]],["bool"]],[R[58]]]],[11,"generate_function_body",E,E,1,[[["self"],["usize"],[R[24]],["bool"]],[R[58]]]],[11,R[1101],E,E,1,[[["self"],[R[24]],["usize"]],[R[58]]]],[11,R[1955],E,E,1,[[["self"],[R[24]],["usize"]],[R[58]]]],[11,R[1956],E,E,1,[[["self"],[R[778]]],[R[58]]]],[11,R[1957],E,E,1,[[["self"],[R[684]]],[R[58]]]],[11,R[1958],E,E,1,[[["self"],["usize"]],[R[755]]]],[11,R[1959],E,E,1,[[["self"],["usize"]],["bool"]]],[11,R[1960],E,E,1,[[["self"],["usize"]],["bool"]]],[11,R[1961],E,E,1,[[["self"],[R[755]]],[R[58]]]],[11,R[1962],E,E,1,[[["self"],[R[58]],[R[755]]],[R[58]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1963],E,E,0,[[["self"]],[R[58]]]],[11,R[1964],E,E,0,[[["self"],[R[1035]],["usize"]],[R[58]]]]],"p":[[3,R[1361]],[3,R[1362]]]};
searchIndex["vm"]={"doc":E,"i":[[4,R[833],"vm","Represents a kind of index -- useful for error messages.",N,N],[13,R[719],E,E,0,N],[13,R[720],E,E,0,N],[13,R[722],E,E,0,N],[13,R[642],E,E,0,N],[13,R[723],E,E,0,N],[13,R[724],E,E,0,N],[13,R[726],E,E,0,N],[13,R[643],E,E,0,N],[13,R[728],E,E,0,N],[13,R[527],E,E,0,N],[13,"UserString",E,E,0,N],[13,R[751],E,E,0,N],[13,R[752],E,E,0,N],[13,"LocalPool",E,E,0,N],[13,"CodeDefinition",E,E,0,N],[13,R[681],E,E,0,N],[4,R[834],E,"Represents the kind of a signature token.",N,N],[13,"Value",E,"Any sort of owned value that isn't an array (Integer,…",1,N],[13,R[682],E,"A reference.",1,N],[13,R[740],E,"A mutable reference.",1,N],[0,"access",E,"Defines accessors for compiled modules.",N,N],[8,R[835],"vm::access","Represents accessors for a compiled module.",N,N],[10,R[810],E,"Returns the `CompiledModule` that will be used for accesses.",2,[[["self"]],[R[750]]]],[11,"self_handle",E,"Returns the `ModuleHandle` for `self`.",2,[[["self"]],[R[683]]]],[11,"name",E,"Returns the name of the module.",2,[[["self"]],[R[271]]]],[11,R[333],E,"Returns the address of the module.",2,[[["self"]],[R[265]]]],[11,R[687],E,E,2,[[["self"],[R[688]]],[R[683]]]],[11,R[689],E,E,2,[[["self"],[R[686]]],[R[690]]]],[11,R[691],E,E,2,[[["self"],[R[692]]],[R[693]]]],[11,R[694],E,E,2,[[["self"],[R[695]]],[R[685]]]],[11,R[696],E,E,2,[[["self"],[R[697]]],[R[635]]]],[11,R[698],E,E,2,[[["self"],[R[699]]],[R[700]]]],[11,R[701],E,E,2,[[["self"],[R[702]]],[R[271]]]],[11,"user_string_at",E,E,2,[[["self"],[R[768]]],["vmstr"]]],[11,R[703],E,E,2,[[["self"],[R[704]]],[R[274]]]],[11,R[705],E,E,2,[[["self"],[R[706]]],[R[265]]]],[11,"struct_def_at",E,E,2,[[["self"],[R[778]]],[R[633]]]],[11,"field_def_at",E,E,2,[[["self"],[R[684]]],[R[767]]]],[11,"function_def_at",E,E,2,[[["self"],[R[824]]],[R[716]]]],[11,"get_field_signature",E,E,2,[[["self"],[R[684]]],[R[685]]]],[11,R[707],E,E,2,[[["self"]]]],[11,R[708],E,E,2,[[["self"]]]],[11,R[709],E,E,2,[[["self"]]]],[11,R[710],E,E,2,[[["self"]]]],[11,R[711],E,E,2,[[["self"]]]],[11,R[712],E,E,2,[[["self"]]]],[11,R[713],E,E,2,[[["self"]]]],[11,R[714],E,E,2,[[["self"]]]],[11,R[715],E,E,2,[[["self"]]]],[11,R[730],E,E,2,[[["self"]]]],[11,R[732],E,E,2,[[["self"]]]],[11,R[733],E,E,2,[[["self"]]]],[11,R[734],E,E,2,[[["self"]]]],[11,R[761],E,E,2,[[["self"],[R[683]]],[R[484]]]],[11,"self_id",E,E,2,[[["self"]],[R[484]]]],[11,"field_def_range",E,E,2,[[["self"],[R[754]],[R[684]]]]],[11,"is_field_in_struct",E,E,2,[[["self"],[R[684]],[R[686]]],["bool"]]],[8,R[836],E,"Represents accessors for a compiled script.",N,N],[10,R[811],E,"Returns the `CompiledScript` that will be used for accesses.",3,[[["self"]],[R[757]]]],[11,R[687],E,E,3,[[["self"],[R[688]]],[R[683]]]],[11,R[689],E,E,3,[[["self"],[R[686]]],[R[690]]]],[11,R[691],E,E,3,[[["self"],[R[692]]],[R[693]]]],[11,R[694],E,E,3,[[["self"],[R[695]]],[R[685]]]],[11,R[696],E,E,3,[[["self"],[R[697]]],[R[635]]]],[11,R[698],E,E,3,[[["self"],[R[699]]],[R[700]]]],[11,R[701],E,E,3,[[["self"],[R[702]]],[R[271]]]],[11,R[703],E,E,3,[[["self"],[R[704]]],[R[274]]]],[11,R[705],E,E,3,[[["self"],[R[706]]],[R[265]]]],[11,R[707],E,E,3,[[["self"]]]],[11,R[708],E,E,3,[[["self"]]]],[11,R[709],E,E,3,[[["self"]]]],[11,R[710],E,E,3,[[["self"]]]],[11,R[711],E,E,3,[[["self"]]]],[11,R[712],E,E,3,[[["self"]]]],[11,R[713],E,E,3,[[["self"]]]],[11,R[714],E,E,3,[[["self"]]]],[11,R[715],E,E,3,[[["self"]]]],[11,"main",E,E,3,[[["self"]],[R[716]]]],[0,R[717],"vm",E,N,N],[3,R[838],R[802],E,N,N],[8,R[837],E,E,N,N],[10,R[717],E,E,4,[[["self"],[R[25]]],[["vec",[R[493]]],[R[493]]]]],[11,"new",E,E,5,[[[R[749]]],["self"]]],[11,"verify",E,E,5,[[],[["vec",[R[493]]],[R[493]]]]],[0,"errors","vm",E,N,N],[3,"Location",R[803],E,N,N],[5,"vm_result_to_transaction_status",E,E,N,[[[R[985]]],[R[416]]]],[5,"vm_status_of_result",E,"Conversion functions from internal VM statuses into…",N,[[[R[985]]],[R[493]]]],[5,"convert_prologue_runtime_error",E,E,N,[[[R[265]],[R[493]]],[R[493]]]],[5,"vm_error",E,E,N,[[[R[823]],[R[420]]],[R[493]]]],[5,"bytecode_offset_err",E,E,N,[[[R[718]],["usize"],[R[420]]],[R[493]]]],[5,"bounds_error",E,E,N,[[[R[718]],["usize"],[R[420]]],[R[493]]]],[5,"verification_error",E,E,N,[[[R[718]],["usize"],[R[420]]],[R[493]]]],[5,"append_err_info",E,E,N,[[[R[718]],[R[493]],["usize"]],[R[493]]]],[5,"err_at_offset",E,E,N,[[["usize"],[R[420]]],[R[493]]]],[6,"VMResult",E,E,N,N],[6,"BinaryLoaderResult",E,E,N,N],[17,"EBAD_SIGNATURE",E,"Error codes that can be emitted by the prologue. These…",N,N],[17,"EBAD_ACCOUNT_AUTHENTICATION_KEY",E,E,N,N],[17,"ESEQUENCE_NUMBER_TOO_OLD",E,E,N,N],[17,"ESEQUENCE_NUMBER_TOO_NEW",E,E,N,N],[17,"EACCOUNT_DOES_NOT_EXIST",E,E,N,N],[17,"ECANT_PAY_GAS_DEPOSIT",E,E,N,N],[17,"EINSUFFICIENT_BALANCE",E,"Generic error codes. These codes don't have any special…",N,N],[17,"EASSERT_ERROR",E,E,N,N],[11,"new",E,E,6,[[],["self"]]],[0,"deserializer","vm",E,N,N],[0,"file_format",E,"Binary format for transactions and modules.",N,N],[3,R[839],R[735],"Index into the `ModuleHandle` table.",N,N],[12,"0",E,E,7,N],[3,R[840],E,"Index into the `StructHandle` table.",N,N],[12,"0",E,E,8,N],[3,R[841],E,"Index into the `FunctionHandle` table.",N,N],[12,"0",E,E,9,N],[3,R[842],E,"Index into the `Identifier` table.",N,N],[12,"0",E,E,10,N],[3,R[843],E,"Index into the `UserString` (VM string) table.",N,N],[12,"0",E,E,11,N],[3,R[844],E,"Index into the `ByteArrayPool` table.",N,N],[12,"0",E,E,12,N],[3,R[845],E,"Index into the `AddressPool` table.",N,N],[12,"0",E,E,13,N],[3,R[846],E,"Index into the `TypeSignature` table.",N,N],[12,"0",E,E,14,N],[3,R[847],E,"Index into the `FunctionSignature` table.",N,N],[12,"0",E,E,15,N],[3,R[848],E,"Index into the `LocalsSignature` table.",N,N],[12,"0",E,E,16,N],[3,R[849],E,"Index into the `StructDefinition` table.",N,N],[12,"0",E,E,17,N],[3,R[850],E,"Index into the `FieldDefinition` table.",N,N],[12,"0",E,E,18,N],[3,R[851],E,"Index into the `FunctionDefinition` table.",N,N],[12,"0",E,E,19,N],[3,R[719],E,"A `ModuleHandle` is a reference to a MOVE module. It is…",N,N],[12,R[333],E,"Index into the `AddressPool`. Identifies the account that…",20,N],[12,"name",E,"The name of the module published in the code section for…",20,N],[3,R[720],E,"A `StructHandle` is a reference to a user defined type. It…",N,N],[12,"module",E,"The module that defines the type.",21,N],[12,"name",E,"The name of the type.",21,N],[12,R[721],E,"There are two ways for a type to have the Kind resource 1)…",21,N],[12,R[605],E,R[727],21,N],[3,R[722],E,"A `FunctionHandle` is a reference to a function. It is…",N,N],[12,"module",E,"The module that defines the function.",22,N],[12,"name",E,"The name of the function.",22,N],[12,R[412],E,"The signature of the function.",22,N],[3,R[642],E,"A `StructDefinition` is a type definition. It either…",N,N],[12,R[786],E,"The `StructHandle` for this `StructDefinition`. This has…",23,N],[12,"field_information",E,"Contains either - Information indicating the struct is…",23,N],[3,R[723],E,"A `FieldDefinition` is the definition of a field: the type…",N,N],[12,"struct_",E,"The type (resource or unrestricted) the field is defined on.",24,N],[12,"name",E,"The name of the field.",24,N],[12,R[412],E,"The type of the field.",24,N],[3,R[724],E,"A `FunctionDefinition` is the implementation of a…",N,N],[12,R[636],E,"The prototype of the function (module, name, signature).",25,N],[12,"flags",E,"Flags for this function (private, public, native, etc.)",25,N],[12,R[1992],E,R[725],25,N],[12,"code",E,"Code for this function.",25,N],[3,R[726],E,"A type definition. `SignatureToken` allows the definition…",N,N],[12,"0",E,E,26,N],[3,R[643],E,"A `FunctionSignature` describes the types of a function.",N,N],[12,"return_types",E,"The list of return types.",27,N],[12,"arg_types",E,"The list of arguments to the function.",27,N],[12,R[605],E,R[727],27,N],[3,R[728],E,"A `LocalsSignature` is the list of locals used by a…",N,N],[12,"0",E,E,28,N],[3,"CodeUnit",E,"A `CodeUnit` is the body of a function. It has the…",N,N],[12,"max_stack_size",E,"Max stack size for the function - currently unused.",29,N],[12,"locals",E,"List of locals type. All locals are typed.",29,N],[12,"code",E,"Code stream, function body.",29,N],[3,R[852],E,"A `CompiledProgram` defines the structure of a transaction…",N,N],[12,"modules",E,"The modules to be published",30,N],[12,"script",E,R[729],30,N],[3,R[857],E,"Contains the main function to execute and its dependencies.",N,N],[3,R[853],E,"A mutable version of `CompiledScript`. Converting to a…",N,N],[12,R[707],E,"Handles to all modules referenced.",31,N],[12,R[708],E,"Handles to external/imported types.",31,N],[12,R[709],E,"Handles to external/imported functions.",31,N],[12,R[710],E,"Type pool. All external types referenced by the transaction.",31,N],[12,R[711],E,"Function signature pool. The signatures of the function…",31,N],[12,R[712],E,"Locals signature pool. The signature of the locals in…",31,N],[12,R[715],E,"All identifiers used in this transaction.",31,N],[12,R[730],E,"User strings. All literals used in this transaction.",31,N],[12,R[713],E,"ByteArray pool. The byte array literals used in the…",31,N],[12,R[714],E,R[731],31,N],[12,"main",E,"The main (script) to execute.",31,N],[3,R[858],E,"A `CompiledModule` defines the structure of a module which…",N,N],[3,R[854],E,"A mutable version of `CompiledModule`. Converting to a…",N,N],[12,R[707],E,"Handles to external modules and self at position 0.",32,N],[12,R[708],E,"Handles to external and internal types.",32,N],[12,R[709],E,"Handles to external and internal functions.",32,N],[12,R[710],E,"Type pool. A definition for all types used in the module.",32,N],[12,R[711],E,"Function signature pool. Represents all function…",32,N],[12,R[712],E,"Locals signature pool. The signature for all locals of the…",32,N],[12,R[715],E,"All identifiers used in this module.",32,N],[12,R[730],E,"User strings. All literals used in this module.",32,N],[12,R[713],E,"ByteArray pool. The byte array literals used in the module.",32,N],[12,R[714],E,R[731],32,N],[12,R[732],E,"Types defined in this module.",32,N],[12,R[733],E,"Fields defined on types in this module.",32,N],[12,R[734],E,"Function defined in this module.",32,N],[4,R[855],E,"`StructFieldInformation` indicates whether a struct is…",N,N],[13,"Native",E,E,33,N],[13,"Declared",E,E,33,N],[12,"field_count","vm::file_format::StructFieldInformation","The number of fields in this type.",33,N],[12,"fields",E,"The starting index for the fields of this type.…",33,N],[4,"Kind",R[735],"A `Kind` classifies types into sets with rules each set…",N,N],[13,"All",E,"Represents the super set of all types. The type might…",34,N],[13,"Resource",E,R[736],34,N],[13,R[737],E,R[738],34,N],[4,R[856],E,"A `SignatureToken` is a type declaration for a location.",N,N],[13,"Bool",E,"Boolean, `true` or `false`.",35,N],[13,"U64",E,"Unsigned integers, 64 bits length.",35,N],[13,"String",E,"Strings, immutable, utf8 representation.",35,N],[13,R[305],E,"ByteArray, variable size, immutable byte array.",35,N],[13,R[739],E,"Address, a 32 bytes immutable type.",35,N],[13,"Struct",E,"MOVE user type, resource or unrestricted",35,N],[13,R[682],E,"Reference to a type.",35,N],[13,R[740],E,"Mutable reference to a type.",35,N],[13,R[681],E,"Type parameter.",35,N],[4,"Bytecode",E,"`Bytecode` is a VM instruction of variable size. The type…",N,N],[13,"Pop",E,"Pop and discard the value at the top of the stack. The…",36,N],[13,"Ret",E,"Return from function, possibly with values according to…",36,N],[13,"BrTrue",E,R[741],36,N],[13,"BrFalse",E,R[741],36,N],[13,"Branch",E,"Branch unconditionally to the instruction at position…",36,N],[13,"LdConst",E,"Push integer constant onto the stack.",36,N],[13,"LdStr",E,"Push a string literal onto the stack. The string is loaded…",36,N],[13,R[1358],E,"Push a `ByteArray` literal onto the stack. The `ByteArray`…",36,N],[13,"LdAddr",E,"Push an 'Address' literal onto the stack. The address is…",36,N],[13,"LdTrue",E,"Push `true` onto the stack.",36,N],[13,"LdFalse",E,"Push `false` onto the stack.",36,N],[13,"CopyLoc",E,R[742],36,N],[13,"MoveLoc",E,R[742],36,N],[13,"StLoc",E,"Pop value from the top of the stack and store it into the…",36,N],[13,"Call",E,"Call a function. The stack has the arguments pushed first…",36,N],[13,"Pack",E,"Create an instance of the type specified via…",36,N],[13,"Unpack",E,"Destroy an instance of a type and push the values bound to…",36,N],[13,"ReadRef",E,"Read a reference. The reference is on the stack, it is…",36,N],[13,"WriteRef",E,"Write to a reference. The reference and the value are on…",36,N],[13,"FreezeRef",E,"Convert a mutable reference to an immutable reference.",36,N],[13,"MutBorrowLoc",E,"Load a mutable reference to a local identified by…",36,N],[13,"ImmBorrowLoc",E,"Load an immutable reference to a local identified by…",36,N],[13,"MutBorrowField",E,"Load a mutable reference to a field identified by…",36,N],[13,"ImmBorrowField",E,"Load an immutable reference to a field identified by…",36,N],[13,"MutBorrowGlobal",E,"Return a mutable reference to an instance of type…",36,N],[13,"ImmBorrowGlobal",E,"Return an immutable reference to an instance of type…",36,N],[13,"Add",E,"Add the 2 u64 at the top of the stack and pushes the…",36,N],[13,"Sub",E,"Subtract the 2 u64 at the top of the stack and pushes the…",36,N],[13,"Mul",E,"Multiply the 2 u64 at the top of the stack and pushes the…",36,N],[13,"Mod",E,"Perform a modulo operation on the 2 u64 at the top of the…",36,N],[13,"Div",E,"Divide the 2 u64 at the top of the stack and pushes the…",36,N],[13,"BitOr",E,"Bitwise OR the 2 u64 at the top of the stack and pushes…",36,N],[13,"BitAnd",E,"Bitwise AND the 2 u64 at the top of the stack and pushes…",36,N],[13,"Xor",E,"Bitwise XOR the 2 u64 at the top of the stack and pushes…",36,N],[13,"Or",E,"Logical OR the 2 bool at the top of the stack and pushes…",36,N],[13,"And",E,"Logical AND the 2 bool at the top of the stack and pushes…",36,N],[13,"Not",E,"Logical NOT the bool at the top of the stack and pushes…",36,N],[13,"Eq",E,"Compare for equality the 2 value at the top of the stack…",36,N],[13,"Neq",E,"Compare for inequality the 2 value at the top of the stack…",36,N],[13,"Lt",E,"Perform a \"less than\" operation of the 2 u64 at the top of…",36,N],[13,"Gt",E,"Perform a \"greater than\" operation of the 2 u64 at the top…",36,N],[13,"Le",E,"Perform a \"less than or equal\" operation of the 2 u64 at…",36,N],[13,"Ge",E,"Perform a \"greater than or equal\" than operation of the 2…",36,N],[13,"Abort",E,"Abort execution with errorcode",36,N],[13,R[743],E,"Get gas unit price from the transaction and pushes it on…",36,N],[13,R[744],E,"Get max gas units set in the transaction and pushes it on…",36,N],[13,R[745],E,"Get remaining gas for the given transaction at the point…",36,N],[13,R[1359],E,"Get the sender address from the transaction and pushes it…",36,N],[13,"Exists",E,"Returns whether or not a given address has an object of…",36,N],[13,R[1464],E,"Move the instance of type StructDefinitionIndex, at the…",36,N],[13,R[746],E,"Move the instance at the top of the stack to the address…",36,N],[13,R[747],E,"Get the sequence number submitted with the transaction and…",36,N],[13,R[748],E,"Get the public key of the sender from the transaction and…",36,N],[5,"self_module_name",E,E,N,[[],[R[271]]]],[5,"empty_module",E,"Return the simplest module that will pass the bounds checker",N,[[],[R[749]]]],[5,"basic_test_module",E,"Create the following module which is convenient in tests:…",N,[[],[R[749]]]],[5,"dummy_procedure_module",E,"Create a dummy module to wrap the bytecode program in…",N,[[["vec",[R[764]]],[R[764]]],[R[750]]]],[6,"TableIndex",E,"Generic index into one of the tables in the binary format.",N,N],[6,"LocalIndex",E,"Index of a local variable in a function.",N,N],[6,"MemberCount",E,"Max number of fields in a `StructDefinition`.",N,N],[6,"CodeOffset",E,"Index into the code stream for a jump. The offset is…",N,N],[6,"IdentifierPool",E,"The pool of identifiers.",N,N],[6,"UserStringPool",E,"The pool of string literals.",N,N],[6,R[751],E,"The pool of `ByteArray` literals.",N,N],[6,R[752],E,"The pool of `AccountAddress` literals.",N,N],[6,"TypeSignaturePool",E,"The pool of `TypeSignature` instances. Those are system…",N,N],[6,"FunctionSignaturePool",E,"The pool of `FunctionSignature` instances.",N,N],[6,"LocalsSignaturePool",E,"The pool of `LocalsSignature` instances. Every function…",N,N],[6,"TypeParameterIndex",E,"Type parameters are encoded as indices. This index can…",N,N],[17,"NO_TYPE_ACTUALS",E,"Index 0 into the LocalsSignaturePool, which is guaranteed…",N,N],[17,"NUMBER_OF_BYTECODE_INSTRUCTIONS",E,"The number of bytecode instructions. This is necessary for…",N,N],[11,"new",E,E,7,[[[R[753]]],["self"]]],[11,"new",E,E,8,[[[R[753]]],["self"]]],[11,"new",E,E,9,[[[R[753]]],["self"]]],[11,"new",E,E,10,[[[R[753]]],["self"]]],[11,"new",E,E,11,[[[R[753]]],["self"]]],[11,"new",E,E,12,[[[R[753]]],["self"]]],[11,"new",E,E,13,[[[R[753]]],["self"]]],[11,"new",E,E,14,[[[R[753]]],["self"]]],[11,"new",E,E,15,[[[R[753]]],["self"]]],[11,"new",E,E,16,[[[R[753]]],["self"]]],[11,"new",E,E,17,[[[R[753]]],["self"]]],[11,"new",E,E,18,[[[R[753]]],["self"]]],[11,"new",E,E,19,[[[R[753]]],["self"]]],[11,"declared_field_count",E,E,23,[[["self"]],[[R[754]],[R[493]],[R[0],[R[754],R[493]]]]]],[11,R[783],E,"Returns whether the FunctionDefinition is public.",25,[[["self"]],["bool"]]],[11,R[782],E,"Returns whether the FunctionDefinition is native.",25,[[["self"]],["bool"]]],[11,"len",E,"Length of the `LocalsSignature`.",28,[[["self"]],["usize"]]],[11,R[12],E,"Whether the function has no locals (both arguments or…",28,[[["self"]],["bool"]]],[11,"is_sub_kind_of",E,"Checks if the given kind is a sub-kind of another.",34,[[["kind"]],["bool"]]],[11,"join",E,"Helper function to determine the kind of a struct instance…",34,[[["kind"]],["kind"]]],[11,"get_struct_handle_from_reference",E,"If a `SignatureToken` is a reference it returns the…",35,[[[R[755]]],[[R[686]],[R[24],[R[686]]]]]],[11,"get_type_actuals_from_reference",E,"Returns the type actuals if the signature token is a…",35,[[["self"]],[R[24]]]],[11,R[788],E,"Returns the \"value kind\" for the `SignatureToken`",35,[[["self"]],[R[789]]]],[11,R[793],E,"Returns the `StructHandleIndex` for a `SignatureToken`…",35,[[["self"]],[[R[686]],[R[24],[R[686]]]]]],[11,"is_primitive",E,"Returns `true` if the `SignatureToken` is a primitive type.",35,[[["self"]],["bool"]]],[11,"allows_equality",E,"Checks if the signature token is usable for Eq and Neq.",35,[[["self"]],["bool"]]],[11,R[791],E,"Returns true if the `SignatureToken` is any kind of…",35,[[["self"]],["bool"]]],[11,R[792],E,"Returns true if the `SignatureToken` is a mutable reference.",35,[[["self"]],["bool"]]],[11,"debug_set_sh_idx",E,"Set the index to this one. Useful for random testing.",35,[[["self"],[R[686]]]]],[11,"substitute",E,"Creating a new type by Substituting the type variables…",35,[[["self"]],[R[755]]]],[11,"kind",E,"Returns the kind of the signature token in the given…",35,[[[R[755]]],["kind"]]],[18,"PUBLIC",E,"Function can be invoked outside of its declaring module.",29,N],[18,"NATIVE",E,"A native function implemented in Rust.",29,N],[11,"is_unconditional_branch",E,"Return true if this bytecode instruction always branches",36,[[["self"]],["bool"]]],[11,"is_conditional_branch",E,"Return true if the branching behavior of this bytecode…",36,[[["self"]],["bool"]]],[11,"is_branch",E,"Returns true if this bytecode instruction is either a…",36,[[["self"]],["bool"]]],[11,"offset",E,"Returns the offset that this bytecode instruction branches…",36,[[["self"]],[[R[24],[R[756]]],[R[756]]]]],[11,"get_successors",E,"Return the successor offsets of this bytecode instruction.",36,[[[R[756]]],[["vec",[R[756]]],[R[756]]]]],[11,"new",E,"Creates a new compiled program from compiled modules and…",30,[[["vec",[R[750]]],[R[750]],[R[757]]],["self"]]],[18,"MAIN_INDEX",E,"Returns the index of `main` in case a script is converted…",37,N],[11,R[618],E,"Returns a reference to the inner `CompiledScriptMut`.",37,[[["self"]],[R[758]]]],[11,R[280],E,"Converts this instance into the inner `CompiledScriptMut`.…",37,[[],[R[758]]]],[11,R[759],E,"Converts a `CompiledScript` into a `CompiledModule` for…",37,[[],[R[750]]]],[11,"freeze",E,"Converts this instance into `CompiledScript` after…",31,[[],[[R[0],[R[757],"vec"]],["vec",[R[493]]],[R[757]]]]],[11,R[759],E,"Converts a `CompiledScriptMut` to a `CompiledModule` for…",31,[[],[R[749]]]],[11,R[760],E,"Returns the count of a specific `IndexKind`",32,[[["self"],[R[718]]],["usize"]]],[11,"freeze",E,"Converts this instance into `CompiledModule` after…",32,[[],[[R[0],[R[750],"vec"]],[R[750]],["vec",[R[493]]]]]],[18,"IMPLEMENTED_MODULE_INDEX",E,"By convention, the index of the module being implemented…",38,N],[11,R[618],E,"Returns a reference to the inner `CompiledModuleMut`.",38,[[["self"]],[R[749]]]],[11,R[280],E,"Converts this instance into the inner `CompiledModuleMut`.…",38,[[],[R[749]]]],[11,R[760],E,"Returns the number of items of a specific `IndexKind`.",38,[[["self"],[R[718]]],["usize"]]],[11,R[761],E,"Returns the code key of `module_handle`",38,[[["self"],[R[683]]],[R[484]]]],[11,"self_id",E,"Returns the code key of `self`",38,[[["self"]],[R[484]]]],[11,R[1346],E,"This function should only be called on an instance of…",38,[[],[R[757]]]],[0,"file_format_common","vm","Constants for the binary format.",N,N],[3,R[866],R[804],"A wrapper for the binary vector",N,N],[4,R[865],E,"Constant values for the binary format header.",N,N],[4,R[859],E,"Constants for table types in the binary.",N,N],[13,"MODULE_HANDLES",E,E,39,N],[13,"STRUCT_HANDLES",E,E,39,N],[13,"FUNCTION_HANDLES",E,E,39,N],[13,"ADDRESS_POOL",E,E,39,N],[13,"IDENTIFIERS",E,E,39,N],[13,"USER_STRINGS",E,E,39,N],[13,"BYTE_ARRAY_POOL",E,E,39,N],[13,"MAIN",E,E,39,N],[13,"STRUCT_DEFS",E,E,39,N],[13,"FIELD_DEFS",E,E,39,N],[13,"FUNCTION_DEFS",E,E,39,N],[13,"TYPE_SIGNATURES",E,E,39,N],[13,"FUNCTION_SIGNATURES",E,E,39,N],[13,"LOCALS_SIGNATURES",E,E,39,N],[4,R[860],E,"Constants for signature kinds (type, function, locals).…",N,N],[13,"TYPE_SIGNATURE",E,E,40,N],[13,"FUNCTION_SIGNATURE",E,E,40,N],[13,"LOCAL_SIGNATURE",E,E,40,N],[4,R[861],E,"Constants for signature blob values.",N,N],[13,"BOOL",E,E,41,N],[13,"INTEGER",E,E,41,N],[13,"STRING",E,E,41,N],[13,"ADDRESS",E,E,41,N],[13,"REFERENCE",E,E,41,N],[13,"MUTABLE_REFERENCE",E,E,41,N],[13,"STRUCT",E,E,41,N],[13,"BYTEARRAY",E,E,41,N],[13,"TYPE_PARAMETER",E,E,41,N],[4,R[862],E,E,N,N],[13,"NOMINAL_RESOURCE",E,E,42,N],[13,"NORMAL_STRUCT",E,E,42,N],[4,R[863],E,E,N,N],[13,"ALL",E,E,43,N],[13,"UNRESTRICTED",E,E,43,N],[13,"RESOURCE",E,E,43,N],[4,R[864],E,E,N,N],[13,"NATIVE",E,E,44,N],[13,"DECLARED",E,E,44,N],[4,"Opcodes",E,"List of opcodes constants.",N,N],[13,"POP",E,E,45,N],[13,"RET",E,E,45,N],[13,"BR_TRUE",E,E,45,N],[13,"BR_FALSE",E,E,45,N],[13,"BRANCH",E,E,45,N],[13,"LD_CONST",E,E,45,N],[13,"LD_ADDR",E,E,45,N],[13,"LD_STR",E,E,45,N],[13,"LD_TRUE",E,E,45,N],[13,"LD_FALSE",E,E,45,N],[13,"COPY_LOC",E,E,45,N],[13,"MOVE_LOC",E,E,45,N],[13,"ST_LOC",E,E,45,N],[13,"MUT_BORROW_LOC",E,E,45,N],[13,"IMM_BORROW_LOC",E,E,45,N],[13,"MUT_BORROW_FIELD",E,E,45,N],[13,"IMM_BORROW_FIELD",E,E,45,N],[13,"LD_BYTEARRAY",E,E,45,N],[13,"CALL",E,E,45,N],[13,"PACK",E,E,45,N],[13,"UNPACK",E,E,45,N],[13,"READ_REF",E,E,45,N],[13,"WRITE_REF",E,E,45,N],[13,"ADD",E,E,45,N],[13,"SUB",E,E,45,N],[13,"MUL",E,E,45,N],[13,"MOD",E,E,45,N],[13,"DIV",E,E,45,N],[13,"BIT_OR",E,E,45,N],[13,"BIT_AND",E,E,45,N],[13,"XOR",E,E,45,N],[13,"OR",E,E,45,N],[13,"AND",E,E,45,N],[13,"NOT",E,E,45,N],[13,"EQ",E,E,45,N],[13,"NEQ",E,E,45,N],[13,"LT",E,E,45,N],[13,"GT",E,E,45,N],[13,"LE",E,E,45,N],[13,"GE",E,E,45,N],[13,"ABORT",E,E,45,N],[13,"GET_TXN_GAS_UNIT_PRICE",E,E,45,N],[13,"GET_TXN_MAX_GAS_UNITS",E,E,45,N],[13,"GET_GAS_REMAINING",E,E,45,N],[13,"GET_TXN_SENDER",E,E,45,N],[13,"EXISTS",E,E,45,N],[13,"MUT_BORROW_GLOBAL",E,E,45,N],[13,"IMM_BORROW_GLOBAL",E,E,45,N],[13,"MOVE_FROM",E,E,45,N],[13,"MOVE_TO",E,E,45,N],[13,"GET_TXN_SEQUENCE_NUMBER",E,E,45,N],[13,"GET_TXN_PUBLIC_KEY",E,E,45,N],[13,"FREEZE_REF",E,E,45,N],[5,"write_u16_as_uleb128",E,R[762],N,[[["u16"],[R[763]]],[R[0]]]],[5,"write_u32_as_uleb128",E,R[762],N,[[["u32"],[R[763]]],[R[0]]]],[5,"write_u16",E,"Write a `u16` in Little Endian format.",N,[[["u16"],[R[763]]],[R[0]]]],[5,"write_u32",E,"Write a `u32` in Little Endian format.",N,[[["u32"],[R[763]]],[R[0]]]],[5,"write_u64",E,"Write a `u64` in Little Endian format.",N,[[[R[763]],["u64"]],[R[0]]]],[5,"read_uleb128_as_u16",E,"Reads a `u16` in ULEB128 format from a `binary`.",N,[[["cursor"]],[["u16"],[R[0],["u16"]]]]],[5,"read_uleb128_as_u32",E,"Reads a `u32` in ULEB128 format from a `binary`.",N,[[["cursor"]],[[R[0],["u32"]],["u32"]]]],[17,"BINARY_SIZE_LIMIT",E,"Upper limit on the binary size",N,N],[18,"LIBRA_MAGIC_SIZE",E,"The blob that must start a binary.",46,N],[18,"LIBRA_MAGIC",E,E,46,N],[18,"HEADER_SIZE",E,"The `LIBRA_MAGIC` size, 1 byte for major version, 1 byte…",46,N],[18,"TABLE_HEADER_SIZE",E,"A (Table Type, Start Offset, Byte Count) size, which is 1…",46,N],[11,"new",E,E,47,[[],["self"]]],[11,R[618],E,E,47,[[["self"]]]],[11,R[280],E,E,47,[[],[["vec",["u8"]],["u8"]]]],[11,"push",E,E,47,[[["self"],["u8"]],[R[0]]]],[11,"extend",E,E,47,[[["self"]],[R[0]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[12],E,E,47,[[["self"]],["bool"]]],[11,"clear",E,E,47,[[["self"]]]],[0,"gas_schedule","vm","This module lays out the basic abstract costing schedule…",N,N],[3,R[885],R[805],"A newtype wrapper that represents the (abstract) memory…",N,N],[3,"GasUnits",E,"A newtype wrapper around the underlying carrier for the…",N,N],[3,"GasPrice",E,"A newtype wrapper around the gas price for each unit of…",N,N],[3,R[886],E,"The cost per-byte written to global storage. TODO: Fill…",N,N],[3,R[887],E,"The cost per-byte written to storage. TODO: Fill this in…",N,N],[3,R[888],E,"The maximum size representable by AbstractMemorySize",N,N],[3,R[889],E,"The units of gas that should be charged per byte for every…",N,N],[3,R[890],E,"The minimum gas price that a transaction can be submitted…",N,N],[3,R[891],E,"The maximum gas unit price that a transaction can be…",N,N],[3,R[892],E,"1 nanosecond should equal one unit of computational gas.…",N,N],[3,R[893],E,"We charge one unit of gas per-byte for the first 600 bytes",N,N],[3,R[894],E,"The word size that we charge by",N,N],[3,R[895],E,"The size in words for a non-string or address constant on…",N,N],[3,R[896],E,"The size in words for a reference on the stack",N,N],[3,R[897],E,"The size of a struct in words",N,N],[3,R[898],E,"For V1 all accounts will be 32 words",N,N],[3,R[899],E,"Any transaction over this size will be charged…",N,N],[3,R[900],E,E,N,N],[3,R[867],E,"The cost tables, keyed by the serialized form of the…",N,N],[12,"instruction_table",E,E,48,N],[12,"native_table",E,E,48,N],[3,"GasCost",E,"The `GasCost` tracks: - instruction cost: how much…",N,N],[12,"instruction_gas",E,E,49,N],[12,"memory_gas",E,E,49,N],[5,"instruction_key",E,"The encoding of the instruction is the serialized form of…",N,[[[R[764]]],["u8"]]],[5,"words_in",E,"Computes the number of words rounded up",N,[[[R[766],[R[765]]],[R[765]]],[[R[766],[R[765]]],[R[765]]]]],[5,"calculate_intrinsic_gas",E,"Calculate the intrinsic gas for the transaction based upon…",N,[[[R[766],[R[765]]],[R[765]]],[[R[765]],[R[826],[R[765]]]]]],[6,"GasCarrier",E,"The underlying carrier for gas-related units and costs.…",N,N],[8,R[868],E,"A trait encoding the operations permitted on the…",N,N],[10,"new",E,"Project a value into the gas algebra.",50,[[[R[765]]],["self"]]],[10,"get",E,"Get the carrier.",50,[[["self"]],[R[765]]]],[11,"map",E,"Map a function `f` of one argument over the underlying data.",50,[[["fn"]],["self"]]],[11,"map2",E,"Map a function `f` of two arguments over the underlying…",50,[[["fn"]],["self"]]],[11,"app",E,"Apply a function `f` of two arguments to the carrier.…",50,[[["self"],["fn"]],[T]]],[11,"unitary_cast",E,"We allow casting between GasAlgebras as long as they have…",50,[[],["gasalgebra"]]],[11,"add",E,"Add the two `GasAlgebra`s together.",50,[[],["self"]]],[11,"sub",E,"Subtract one `GasAlgebra` from the other.",50,[[],["self"]]],[11,"mul",E,"Multiply two `GasAlgebra`s together.",50,[[],["self"]]],[11,"div",E,"Divide one `GasAlgebra` by the other.",50,[[],["self"]]],[11,"new",E,E,48,[[["vec"]],["self"]]],[11,"get_gas",E,E,48,[[["self"],[R[766],[R[765]]],[R[765]],[R[764]]],["gascost"]]],[11,"zero",E,E,48,[[],["self"]]],[11,"new",E,E,49,[[[R[765]]],["self"]]],[0,"internals","vm","Types meant for use by other parts of this crate, and by…",N,N],[8,R[869],"vm::internals","Represents a module index.",N,N],[18,"KIND",E,E,51,N],[10,R[812],E,E,51,[[],["usize"]]],[0,"printers","vm",E,N,N],[8,R[870],"vm::printers",E,N,N],[10,R[813],E,E,52,[[["self"],[R[684]]],[[R[767]],[R[0],[R[767]]]]]],[10,R[814],E,E,52,[[["self"],[R[688]]],[[R[683]],[R[0],[R[683]]]]]],[10,R[815],E,E,52,[[["self"],[R[686]]],[[R[0],[R[690]]],[R[690]]]]],[10,R[816],E,E,52,[[["self"],[R[692]]],[[R[693]],[R[0],[R[693]]]]]],[10,R[817],E,E,52,[[["self"],[R[702]]],[[R[0],[R[271]]],[R[271]]]]],[10,R[818],E,E,52,[[["self"],[R[768]]],[[R[0],["vmstr"]],["vmstr"]]]],[10,R[819],E,E,52,[[["self"],[R[706]]],[[R[265]],[R[0],[R[265]]]]]],[10,R[820],E,E,52,[[["self"],[R[695]]],[[R[685]],[R[0],[R[685]]]]]],[10,R[821],E,E,52,[[["self"],[R[697]]],[[R[0],[R[635]]],[R[635]]]]],[10,R[822],E,E,52,[[["self"],[R[699]]],[[R[0],[R[700]]],[R[700]]]]],[0,R[769],"vm","Utilities for property-based testing.",N,N],[3,R[871],R[770],"Contains configuration to generate [`CompiledModule`]…",N,N],[6,"TableSize",E,"Represents how large [`CompiledModule`] tables can be.",N,N],[11,"valid_strategy",R[735],"Convenience wrapper around…",38,[[["usize"]]]],[11,"new",R[770],"Create a new configuration for randomly generating…",53,[[["tablesize"]],["self"]]],[11,"member_count",E,"Set a new range for the number of fields in a struct or…",53,[[["self"]],["self"]]],[11,"generate",E,"Create a `proptest` strategy for `CompiledModule`…",53,[[]]],[0,"resolver","vm","This module implements a resolver for importing a…",N,N],[3,"Resolver",R[806],"Resolution context for importing types",N,N],[11,"new",E,"create a new instance of Resolver for module",54,[[],["self"]]],[11,"import_signature_token",E,"given a signature token in dependency, construct an…",54,[[["self"],[R[755]]],[[R[755]],[R[493]],[R[0],[R[755],R[493]]]]]],[11,"import_function_signature",E,"given a function signature in dependency, construct an…",54,[[["self"],[R[635]]],[[R[0],[R[635],R[493]]],[R[635]],[R[493]]]]],[0,"serializer","vm","Serialization of transactions and modules.",N,N],[11,R[142],R[735],"Serializes a `CompiledScript` into a binary. The mutable…",37,[[["self"],["vec"]],[R[0]]]],[11,R[142],E,R[771],31,[[["self"],["vec"]],[R[0]]]],[11,R[142],E,"Serializes a `CompiledModule` into a binary. The mutable…",38,[[["self"],["vec"]],[R[0]]]],[11,R[142],E,R[771],32,[[["self"],["vec"]],[R[0]]]],[0,"transaction_metadata","vm",E,N,N],[3,R[872],R[807],E,N,N],[12,"sender",E,E,55,N],[12,R[168],E,E,55,N],[12,R[281],E,E,55,N],[12,R[772],E,E,55,N],[12,R[773],E,E,55,N],[12,R[774],E,E,55,N],[11,"new",E,E,55,[[[R[394]]],["self"]]],[11,R[772],E,E,55,[[["self"]],[[R[765]],[R[826],[R[765]]]]]],[11,R[773],E,E,55,[[["self"]],[[R[831],[R[765]]],[R[765]]]]],[11,"sender",E,E,55,[[["self"]],[R[265]]]],[11,R[168],E,E,55,[[["self"]],[R[181]]]],[11,R[281],E,E,55,[[["self"]],["u64"]]],[11,R[774],E,E,55,[[["self"]],[[R[766],[R[765]]],[R[765]]]]],[0,"views","vm","An alternate representation of the file format built on…",N,N],[3,R[874],R[808],"Represents a lazily evaluated abstraction over a module.",N,N],[3,R[875],E,E,N,N],[3,R[876],E,E,N,N],[3,R[877],E,E,N,N],[3,R[878],E,E,N,N],[3,R[879],E,E,N,N],[3,R[880],E,E,N,N],[3,R[881],E,E,N,N],[3,R[882],E,E,N,N],[3,R[883],E,E,N,N],[3,R[884],E,E,N,N],[8,R[873],E,"This is used to expose some view internals to checks and…",N,N],[16,R[1423],E,E,56,N],[16,"Inner",E,E,56,N],[10,"module",E,E,56,[[["self"]]]],[10,R[618],E,E,56,[[["self"]]]],[11,"new",E,E,57,[[[T]],["self"]]],[11,R[707],E,E,57,[[["self"]]]],[11,R[708],E,E,57,[[["self"]]]],[11,R[709],E,E,57,[[["self"]]]],[11,"structs",E,E,57,[[["self"]]]],[11,"fields",E,E,57,[[["self"]]]],[11,R[775],E,E,57,[[["self"]]]],[11,R[710],E,E,57,[[["self"]]]],[11,R[711],E,E,57,[[["self"]]]],[11,R[712],E,E,57,[[["self"]]]],[11,"function_definition",E,E,57,[[["self"],[R[271]]],[[R[24],[R[776]]],[R[776]]]]],[11,"struct_definition",E,E,57,[[["self"],[R[271]]],[[R[777]],[R[24],[R[777]]]]]],[11,"function_acquired_resources",E,E,57,[[["self"],[R[693]]],[[R[778]],[R[1384],[R[778]]]]]],[11,"id",E,E,57,[[["self"]],[R[484]]]],[11,"new",E,E,58,[[[T],[R[683]]],["self"]]],[11,R[780],E,E,58,[[["self"]],[R[484]]]],[11,"new",E,E,59,[[[T],[R[690]]],["self"]]],[11,R[721],E,E,59,[[["self"]],["bool"]]],[11,R[605],E,E,59,[[["self"]],["vec"]]],[11,R[779],E,E,59,[[["self"]],[R[777]]]],[11,R[781],E,E,59,[[["self"]],[R[683]]]],[11,"name",E,E,59,[[["self"]],[R[271]]]],[11,R[780],E,E,59,[[["self"]],[R[484]]]],[11,"new",E,E,60,[[[T],[R[693]]],["self"]]],[11,R[781],E,E,60,[[["self"]],[R[683]]]],[11,"name",E,E,60,[[["self"]],[R[271]]]],[11,R[412],E,E,60,[[["self"]],[R[784]]]],[11,R[780],E,E,60,[[["self"]],[R[484]]]],[11,"new",E,E,61,[[[T],[R[633]]],["self"]]],[11,R[721],E,E,61,[[["self"]],["bool"]]],[11,R[782],E,E,61,[[["self"]],["bool"]]],[11,R[605],E,E,61,[[["self"]],["vec"]]],[11,"fields",E,E,61,[[["self"]],[R[24]]]],[11,"name",E,E,61,[[["self"]],[R[271]]]],[11,"new",E,E,62,[[[T],[R[767]]],["self"]]],[11,"name",E,E,62,[[["self"]],[R[271]]]],[11,"type_signature",E,E,62,[[["self"]],["typesignatureview"]]],[11,"signature_token",E,E,62,[[["self"]],[R[755]]]],[11,"member_of",E,"The struct this field is defined in.",62,[[["self"]],[R[787]]]],[11,"new",E,E,63,[[[T],[R[716]]],["self"]]],[11,R[783],E,E,63,[[["self"]],["bool"]]],[11,R[782],E,E,63,[[["self"]],["bool"]]],[11,"locals_signature",E,E,63,[[["self"]],["localssignatureview"]]],[11,"name",E,E,63,[[["self"]],[R[271]]]],[11,R[412],E,E,63,[[["self"]],[R[784]]]],[11,"code",E,E,63,[[["self"]],[R[825]]]],[11,"new",E,E,64,[[[T],[R[685]]],["self"]]],[11,"token",E,E,64,[[["self"]],[R[785]]]],[11,"kind",E,E,64,[[["self"]],["kind"]]],[11,R[790],E,E,64,[[["self"]],["bool"]]],[11,"new",E,E,65,[[[T],[R[635]]],["self"]]],[11,"return_tokens",E,E,65,[[["self"]]]],[11,"arg_tokens",E,E,65,[[["self"]]]],[11,R[1660],E,E,65,[[["self"]],["usize"]]],[11,R[1691],E,E,65,[[["self"]],["usize"]]],[11,"new",E,E,66,[[[T],[R[700]]],["self"]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[12],E,E,66,[[["self"]],["bool"]]],[11,"tokens",E,E,66,[[["self"]]]],[11,"token_at",E,E,66,[[["self"],[R[1029]]],[R[785]]]],[11,"new",E,E,67,[[[T],[R[755]]],["self"]]],[11,R[786],E,E,67,[[["self"]],[[R[787]],[R[24],[R[787]]]]]],[11,R[788],E,E,67,[[["self"]],[R[789]]]],[11,"kind",E,E,67,[[["self"]],["kind"]]],[11,R[790],E,"Determines if the given signature token contains a nominal…",67,[[["self"]],["bool"]]],[11,R[791],E,E,67,[[["self"]],["bool"]]],[11,R[792],E,E,67,[[["self"]],["bool"]]],[11,R[793],E,E,67,[[["self"]],[[R[686]],[R[24],[R[686]]]]]],[0,"vm_string","vm","A \"VM string\" is a string in Move code. VM strings can be…",N,N],[3,"VMString",R[809],"An owned string in a Move transaction.",N,N],[3,"VMStr",E,"A borrowed string in Move code.",N,N],[11,"new",E,"Creates a new `VMString` instance.",68,[[],["self"]]],[11,R[794],E,"Converts a vector of bytes to a `VMString`.",68,[[["vec",["u8"]],["u8"]],[[R[0],[R[795]]],[R[795]]]]],[11,"as_vm_str",E,R[796],68,[[["self"]],["vmstr"]]],[11,R[797],E,"Converts this `VMString` into a `String`.",68,[[],[R[58]]]],[11,R[577],E,"Converts this `VMString` into a UTF-8-encoded byte sequence.",68,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,E,69,[[],["vmstr"]]],[11,"len",E,R[798],69,[[["self"]],["usize"]]],[11,R[12],E,R[799],69,[[["self"]],["bool"]]],[11,"as_str",E,R[800],69,[[["self"]],["str"]]],[11,R[304],E,R[801],69,[[["self"]]]],[11,"variants","vm",E,0,[[]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[58]]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[58]]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[802],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",R[803],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[172],E,E,6,[[]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],R[735],E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[57],E,E,7,[[["self"]],[R[58]]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[172],E,E,7,[[]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[58]]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[172],E,E,8,[[]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[58]]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[172],E,E,9,[[]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[58]]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"clear",E,E,10,[[["self"]]]],[11,R[172],E,E,10,[[]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[58]]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[172],E,E,11,[[]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[58]]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[172],E,E,12,[[]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[58]]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[172],E,E,13,[[]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[58]]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[172],E,E,14,[[]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[57],E,E,15,[[["self"]],[R[58]]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[172],E,E,15,[[]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[58]]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[172],E,E,16,[[]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[57],E,E,17,[[["self"]],[R[58]]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"clear",E,E,17,[[["self"]]]],[11,R[172],E,E,17,[[]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[57],E,E,18,[[["self"]],[R[58]]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[172],E,E,18,[[]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[57],E,E,19,[[["self"]],[R[58]]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"clear",E,E,19,[[["self"]]]],[11,R[172],E,E,19,[[]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[2],E,E,20,[[[U]],[R[0]]]],[11,R[3],E,E,20,[[],[R[0]]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[R[7]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[2],E,E,21,[[[U]],[R[0]]]],[11,R[3],E,E,21,[[],[R[0]]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[R[7]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"clear",E,E,25,[[["self"]]]],[11,R[172],E,E,25,[[]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[172],E,E,28,[[]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"clear",E,E,29,[[["self"]]]],[11,R[172],E,E,29,[[]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[57],E,E,30,[[["self"]],[R[58]]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[57],E,E,37,[[["self"]],[R[58]]]],[11,R[2],E,E,37,[[[U]],[R[0]]]],[11,R[3],E,E,37,[[],[R[0]]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[R[7]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"clear",E,E,31,[[["self"]]]],[11,R[172],E,E,31,[[]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[57],E,E,38,[[["self"]],[R[58]]]],[11,R[2],E,E,38,[[[U]],[R[0]]]],[11,R[3],E,E,38,[[],[R[0]]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[R[7]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[[U]],[R[0]]]],[11,R[3],E,E,32,[[],[R[0]]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[R[7]]]],[11,"clear",E,E,32,[[["self"]]]],[11,R[172],E,E,32,[[]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[2],E,E,33,[[[U]],[R[0]]]],[11,R[3],E,E,33,[[],[R[0]]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[R[7]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[2],E,E,34,[[[U]],[R[0]]]],[11,R[3],E,E,34,[[],[R[0]]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[R[7]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[2],E,E,35,[[[U]],[R[0]]]],[11,R[3],E,E,35,[[],[R[0]]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[R[7]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[2],E,E,36,[[[U]],[R[0]]]],[11,R[3],E,E,36,[[],[R[0]]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[R[7]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"into",R[804],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[2],E,E,47,[[[U]],[R[0]]]],[11,R[3],E,E,47,[[],[R[0]]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[R[7]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[2],E,E,46,[[[U]],[R[0]]]],[11,R[3],E,E,46,[[],[R[0]]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[R[7]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[2],E,E,39,[[[U]],[R[0]]]],[11,R[3],E,E,39,[[],[R[0]]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[R[7]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[2],E,E,40,[[[U]],[R[0]]]],[11,R[3],E,E,40,[[],[R[0]]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[R[7]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[2],E,E,41,[[[U]],[R[0]]]],[11,R[3],E,E,41,[[],[R[0]]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[R[7]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[2],E,E,42,[[[U]],[R[0]]]],[11,R[3],E,E,42,[[],[R[0]]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[R[7]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[2],E,E,43,[[[U]],[R[0]]]],[11,R[3],E,E,43,[[],[R[0]]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[R[7]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[2],E,E,44,[[[U]],[R[0]]]],[11,R[3],E,E,44,[[],[R[0]]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[R[7]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[2],E,E,45,[[[U]],[R[0]]]],[11,R[3],E,E,45,[[],[R[0]]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[R[7]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,R[13],R[805],E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"],[T]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[2],E,E,70,[[[U]],[R[0]]]],[11,R[3],E,E,70,[[],[R[0]]]],[11,R[4],E,E,70,[[["self"]],[T]]],[11,R[5],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[R[7]]]],[11,R[169],E,E,70,[[["self"]],[R[149]]]],[11,"vzip",E,E,70,[[],["v"]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"],[T]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[2],E,E,71,[[[U]],[R[0]]]],[11,R[3],E,E,71,[[],[R[0]]]],[11,R[4],E,E,71,[[["self"]],[T]]],[11,R[5],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[R[7]]]],[11,R[169],E,E,71,[[["self"]],[R[149]]]],[11,"vzip",E,E,71,[[],["v"]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"],[T]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[2],E,E,72,[[[U]],[R[0]]]],[11,R[3],E,E,72,[[],[R[0]]]],[11,R[4],E,E,72,[[["self"]],[T]]],[11,R[5],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[R[7]]]],[11,R[169],E,E,72,[[["self"]],[R[149]]]],[11,"vzip",E,E,72,[[],["v"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[2],E,E,73,[[[U]],[R[0]]]],[11,R[3],E,E,73,[[],[R[0]]]],[11,R[4],E,E,73,[[["self"]],[T]]],[11,R[5],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[R[7]]]],[11,"vzip",E,E,73,[[],["v"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[2],E,E,74,[[[U]],[R[0]]]],[11,R[3],E,E,74,[[],[R[0]]]],[11,R[4],E,E,74,[[["self"]],[T]]],[11,R[5],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[R[7]]]],[11,"vzip",E,E,74,[[],["v"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[2],E,E,75,[[[U]],[R[0]]]],[11,R[3],E,E,75,[[],[R[0]]]],[11,R[4],E,E,75,[[["self"]],[T]]],[11,R[5],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[R[7]]]],[11,"vzip",E,E,75,[[],["v"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[2],E,E,76,[[[U]],[R[0]]]],[11,R[3],E,E,76,[[],[R[0]]]],[11,R[4],E,E,76,[[["self"]],[T]]],[11,R[5],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[R[7]]]],[11,"vzip",E,E,76,[[],["v"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[2],E,E,77,[[[U]],[R[0]]]],[11,R[3],E,E,77,[[],[R[0]]]],[11,R[4],E,E,77,[[["self"]],[T]]],[11,R[5],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[R[7]]]],[11,"vzip",E,E,77,[[],["v"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[2],E,E,78,[[[U]],[R[0]]]],[11,R[3],E,E,78,[[],[R[0]]]],[11,R[4],E,E,78,[[["self"]],[T]]],[11,R[5],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[R[7]]]],[11,"vzip",E,E,78,[[],["v"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[2],E,E,79,[[[U]],[R[0]]]],[11,R[3],E,E,79,[[],[R[0]]]],[11,R[4],E,E,79,[[["self"]],[T]]],[11,R[5],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[R[7]]]],[11,"vzip",E,E,79,[[],["v"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[2],E,E,80,[[[U]],[R[0]]]],[11,R[3],E,E,80,[[],[R[0]]]],[11,R[4],E,E,80,[[["self"]],[T]]],[11,R[5],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[R[7]]]],[11,"vzip",E,E,80,[[],["v"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[2],E,E,81,[[[U]],[R[0]]]],[11,R[3],E,E,81,[[],[R[0]]]],[11,R[4],E,E,81,[[["self"]],[T]]],[11,R[5],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[R[7]]]],[11,"vzip",E,E,81,[[],["v"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[2],E,E,82,[[[U]],[R[0]]]],[11,R[3],E,E,82,[[],[R[0]]]],[11,R[4],E,E,82,[[["self"]],[T]]],[11,R[5],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[R[7]]]],[11,"vzip",E,E,82,[[],["v"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[2],E,E,83,[[[U]],[R[0]]]],[11,R[3],E,E,83,[[],[R[0]]]],[11,R[4],E,E,83,[[["self"]],[T]]],[11,R[5],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[R[7]]]],[11,"vzip",E,E,83,[[],["v"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[2],E,E,84,[[[U]],[R[0]]]],[11,R[3],E,E,84,[[],[R[0]]]],[11,R[4],E,E,84,[[["self"]],[T]]],[11,R[5],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[R[7]]]],[11,"vzip",E,E,84,[[],["v"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[2],E,E,85,[[[U]],[R[0]]]],[11,R[3],E,E,85,[[],[R[0]]]],[11,R[4],E,E,85,[[["self"]],[T]]],[11,R[5],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[R[7]]]],[11,"vzip",E,E,85,[[],["v"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[2],E,E,86,[[[U]],[R[0]]]],[11,R[3],E,E,86,[[],[R[0]]]],[11,R[4],E,E,86,[[["self"]],[T]]],[11,R[5],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[R[7]]]],[11,"vzip",E,E,86,[[],["v"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[2],E,E,87,[[[U]],[R[0]]]],[11,R[3],E,E,87,[[],[R[0]]]],[11,R[4],E,E,87,[[["self"]],[T]]],[11,R[5],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[R[7]]]],[11,"vzip",E,E,87,[[],["v"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[2],E,E,48,[[[U]],[R[0]]]],[11,R[3],E,E,48,[[],[R[0]]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[R[7]]]],[11,R[169],E,E,48,[[["self"]],[R[149]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[2],E,E,49,[[[U]],[R[0]]]],[11,R[3],E,E,49,[[],[R[0]]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[R[7]]]],[11,R[169],E,E,49,[[["self"]],[R[149]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[13],R[770],E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[2],E,E,53,[[[U]],[R[0]]]],[11,R[3],E,E,53,[[],[R[0]]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[R[7]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",R[806],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[2],E,E,54,[[[U]],[R[0]]]],[11,R[3],E,E,54,[[],[R[0]]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[R[7]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",R[807],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[2],E,E,55,[[[U]],[R[0]]]],[11,R[3],E,E,55,[[],[R[0]]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[R[7]]]],[11,"clear",E,E,55,[[["self"]]]],[11,R[172],E,E,55,[[]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",R[808],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[2],E,E,57,[[[U]],[R[0]]]],[11,R[3],E,E,57,[[],[R[0]]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[R[7]]]],[11,"vzip",E,E,57,[[],["v"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[2],E,E,58,[[[U]],[R[0]]]],[11,R[3],E,E,58,[[],[R[0]]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[R[7]]]],[11,"vzip",E,E,58,[[],["v"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[2],E,E,59,[[[U]],[R[0]]]],[11,R[3],E,E,59,[[],[R[0]]]],[11,R[4],E,E,59,[[["self"]],[T]]],[11,R[5],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[R[7]]]],[11,"vzip",E,E,59,[[],["v"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[2],E,E,60,[[[U]],[R[0]]]],[11,R[3],E,E,60,[[],[R[0]]]],[11,R[4],E,E,60,[[["self"]],[T]]],[11,R[5],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[R[7]]]],[11,"vzip",E,E,60,[[],["v"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[2],E,E,61,[[[U]],[R[0]]]],[11,R[3],E,E,61,[[],[R[0]]]],[11,R[4],E,E,61,[[["self"]],[T]]],[11,R[5],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[R[7]]]],[11,"vzip",E,E,61,[[],["v"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[2],E,E,62,[[[U]],[R[0]]]],[11,R[3],E,E,62,[[],[R[0]]]],[11,R[4],E,E,62,[[["self"]],[T]]],[11,R[5],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[R[7]]]],[11,"vzip",E,E,62,[[],["v"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[2],E,E,63,[[[U]],[R[0]]]],[11,R[3],E,E,63,[[],[R[0]]]],[11,R[4],E,E,63,[[["self"]],[T]]],[11,R[5],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[R[7]]]],[11,"vzip",E,E,63,[[],["v"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[2],E,E,64,[[[U]],[R[0]]]],[11,R[3],E,E,64,[[],[R[0]]]],[11,R[4],E,E,64,[[["self"]],[T]]],[11,R[5],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[R[7]]]],[11,"vzip",E,E,64,[[],["v"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[2],E,E,65,[[[U]],[R[0]]]],[11,R[3],E,E,65,[[],[R[0]]]],[11,R[4],E,E,65,[[["self"]],[T]]],[11,R[5],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[R[7]]]],[11,"vzip",E,E,65,[[],["v"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[2],E,E,66,[[[U]],[R[0]]]],[11,R[3],E,E,66,[[],[R[0]]]],[11,R[4],E,E,66,[[["self"]],[T]]],[11,R[5],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[R[7]]]],[11,"vzip",E,E,66,[[],["v"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[2],E,E,67,[[[U]],[R[0]]]],[11,R[3],E,E,67,[[],[R[0]]]],[11,R[4],E,E,67,[[["self"]],[T]]],[11,R[5],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[R[7]]]],[11,"vzip",E,E,67,[[],["v"]]],[11,R[13],R[809],E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"],[T]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[57],E,E,68,[[["self"]],[R[58]]]],[11,R[2],E,E,68,[[[U]],[R[0]]]],[11,R[3],E,E,68,[[],[R[0]]]],[11,R[4],E,E,68,[[["self"]],[T]]],[11,R[5],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[R[7]]]],[11,R[169],E,E,68,[[["self"]],[R[149]]]],[11,"vzip",E,E,68,[[],["v"]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"],[T]]]],[11,R[57],E,E,69,[[["self"]],[R[58]]]],[11,R[4],E,E,69,[[["self"]],[T]]],[11,R[5],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[R[7]]]],[11,R[810],R[735],E,38,[[["self"]],[R[750]]]],[11,R[811],E,E,37,[[["self"]],[R[757]]]],[11,R[717],E,E,20,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,21,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,22,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,23,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,24,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,25,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,26,[[["self"],[R[25]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,27,[[["self"],[R[749]]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,35,[[["self"]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,35,[[["self"]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,35,[[["self"]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,35,[[["self"]],[["vec",[R[493]]],[R[493]]]]],[11,R[717],E,E,29,[[["self"]],[["vec",[R[493]]],[R[493]]]]],[11,"new",R[805],E,70,[[[R[765]]],["self"]]],[11,"get",E,E,70,[[["self"]],[R[765]]]],[11,"new",E,E,71,[[[R[765]]],["self"]]],[11,"get",E,E,71,[[["self"]],[R[765]]]],[11,"new",E,E,72,[[[R[765]]],["self"]]],[11,"get",E,E,72,[[["self"]],[R[765]]]],[11,R[812],R[735],E,7,[[],["usize"]]],[11,R[812],E,E,8,[[],["usize"]]],[11,R[812],E,E,9,[[],["usize"]]],[11,R[812],E,E,10,[[],["usize"]]],[11,R[812],E,E,11,[[],["usize"]]],[11,R[812],E,E,12,[[],["usize"]]],[11,R[812],E,E,13,[[],["usize"]]],[11,R[812],E,E,14,[[],["usize"]]],[11,R[812],E,E,15,[[],["usize"]]],[11,R[812],E,E,16,[[],["usize"]]],[11,R[812],E,E,17,[[],["usize"]]],[11,R[812],E,E,18,[[],["usize"]]],[11,R[812],E,E,19,[[],["usize"]]],[11,R[813],E,E,31,[[["self"],[R[684]]],[[R[767]],[R[0],[R[767]]]]]],[11,R[814],E,E,31,[[["self"],[R[688]]],[[R[683]],[R[0],[R[683]]]]]],[11,R[815],E,E,31,[[["self"],[R[686]]],[[R[0],[R[690]]],[R[690]]]]],[11,R[816],E,E,31,[[["self"],[R[692]]],[[R[693]],[R[0],[R[693]]]]]],[11,R[817],E,E,31,[[["self"],[R[702]]],[[R[0],[R[271]]],[R[271]]]]],[11,R[818],E,E,31,[[["self"],[R[768]]],[[R[0],["vmstr"]],["vmstr"]]]],[11,R[819],E,E,31,[[["self"],[R[706]]],[[R[265]],[R[0],[R[265]]]]]],[11,R[820],E,E,31,[[["self"],[R[695]]],[[R[685]],[R[0],[R[685]]]]]],[11,R[821],E,E,31,[[["self"],[R[697]]],[[R[0],[R[635]]],[R[635]]]]],[11,R[822],E,E,31,[[["self"],[R[699]]],[[R[0],[R[700]]],[R[700]]]]],[11,R[813],E,E,32,[[["self"],[R[684]]],[[R[767]],[R[0],[R[767]]]]]],[11,R[814],E,E,32,[[["self"],[R[688]]],[[R[683]],[R[0],[R[683]]]]]],[11,R[815],E,E,32,[[["self"],[R[686]]],[[R[0],[R[690]]],[R[690]]]]],[11,R[816],E,E,32,[[["self"],[R[692]]],[[R[693]],[R[0],[R[693]]]]]],[11,R[817],E,E,32,[[["self"],[R[702]]],[[R[0],[R[271]]],[R[271]]]]],[11,R[818],E,E,32,[[["self"],[R[768]]],[[R[0],["vmstr"]],["vmstr"]]]],[11,R[819],E,E,32,[[["self"],[R[706]]],[[R[265]],[R[0],[R[265]]]]]],[11,R[820],E,E,32,[[["self"],[R[695]]],[[R[685]],[R[0],[R[685]]]]]],[11,R[821],E,E,32,[[["self"],[R[697]]],[[R[0],[R[635]]],[R[635]]]]],[11,R[822],E,E,32,[[["self"],[R[699]]],[[R[0],[R[700]]],[R[700]]]]],[11,"module",R[808],E,57,[[["self"]]]],[11,R[618],E,E,57,[[["self"]]]],[11,"module",E,E,58,[[["self"]]]],[11,R[618],E,E,58,[[["self"]]]],[11,"module",E,E,59,[[["self"]]]],[11,R[618],E,E,59,[[["self"]]]],[11,"module",E,E,60,[[["self"]]]],[11,R[618],E,E,60,[[["self"]]]],[11,"module",E,E,61,[[["self"]]]],[11,R[618],E,E,61,[[["self"]]]],[11,"module",E,E,63,[[["self"]]]],[11,R[618],E,E,63,[[["self"]]]],[11,"module",E,E,62,[[["self"]]]],[11,R[618],E,E,62,[[["self"]]]],[11,"module",E,E,64,[[["self"]]]],[11,R[618],E,E,64,[[["self"]]]],[11,"module",E,E,65,[[["self"]]]],[11,R[618],E,E,65,[[["self"]]]],[11,"module",E,E,66,[[["self"]]]],[11,R[618],E,E,66,[[["self"]]]],[11,"module",E,E,67,[[["self"]]]],[11,R[618],E,E,67,[[["self"]]]],[11,R[13],R[809],E,69,[[["self"]],[R[827]]]],[11,R[75],R[803],E,6,[[],[R[823]]]],[11,R[75],R[735],E,7,[[],[R[688]]]],[11,R[75],E,E,8,[[],[R[686]]]],[11,R[75],E,E,9,[[],[R[692]]]],[11,R[75],E,E,10,[[],[R[702]]]],[11,R[75],E,E,11,[[],[R[768]]]],[11,R[75],E,E,12,[[],[R[704]]]],[11,R[75],E,E,13,[[],[R[706]]]],[11,R[75],E,E,14,[[],[R[695]]]],[11,R[75],E,E,15,[[],[R[697]]]],[11,R[75],E,E,16,[[],[R[699]]]],[11,R[75],E,E,17,[[],[R[778]]]],[11,R[75],E,E,18,[[],[R[684]]]],[11,R[75],E,E,19,[[],[R[824]]]],[11,R[75],E,E,25,[[],[R[716]]]],[11,R[75],E,E,28,[[],[R[700]]]],[11,R[75],E,E,29,[[],[R[825]]]],[11,R[75],E,E,31,[[],[R[758]]]],[11,R[75],E,E,32,[[],[R[749]]]],[11,R[75],R[807],E,55,[[],["self"]]],[11,"clone",R[735],E,7,[[["self"]],[R[688]]]],[11,"clone",E,E,8,[[["self"]],[R[686]]]],[11,"clone",E,E,9,[[["self"]],[R[692]]]],[11,"clone",E,E,10,[[["self"]],[R[702]]]],[11,"clone",E,E,11,[[["self"]],[R[768]]]],[11,"clone",E,E,12,[[["self"]],[R[704]]]],[11,"clone",E,E,13,[[["self"]],[R[706]]]],[11,"clone",E,E,14,[[["self"]],[R[695]]]],[11,"clone",E,E,15,[[["self"]],[R[697]]]],[11,"clone",E,E,16,[[["self"]],[R[699]]]],[11,"clone",E,E,17,[[["self"]],[R[778]]]],[11,"clone",E,E,18,[[["self"]],[R[684]]]],[11,"clone",E,E,19,[[["self"]],[R[824]]]],[11,"clone",E,E,20,[[["self"]],[R[683]]]],[11,"clone",E,E,21,[[["self"]],[R[690]]]],[11,"clone",E,E,22,[[["self"]],[R[693]]]],[11,"clone",E,E,33,[[["self"]],[R[828]]]],[11,"clone",E,E,23,[[["self"]],[R[633]]]],[11,"clone",E,E,24,[[["self"]],[R[767]]]],[11,"clone",E,E,25,[[["self"]],[R[716]]]],[11,"clone",E,E,26,[[["self"]],[R[685]]]],[11,"clone",E,E,27,[[["self"]],[R[635]]]],[11,"clone",E,E,28,[[["self"]],[R[700]]]],[11,"clone",E,E,34,[[["self"]],["kind"]]],[11,"clone",E,E,35,[[["self"]],[R[755]]]],[11,"clone",E,E,29,[[["self"]],[R[825]]]],[11,"clone",E,E,36,[[["self"]],[R[764]]]],[11,"clone",E,E,30,[[["self"]],[R[829]]]],[11,"clone",E,E,37,[[["self"]],[R[757]]]],[11,"clone",E,E,31,[[["self"]],[R[758]]]],[11,"clone",E,E,38,[[["self"]],[R[750]]]],[11,"clone",E,E,32,[[["self"]],[R[749]]]],[11,"clone",R[804],E,39,[[["self"]],[R[830]]]],[11,"clone",E,E,40,[[["self"]],["signaturetype"]]],[11,"clone",E,E,41,[[["self"]],["serializedtype"]]],[11,"clone",E,E,42,[[["self"]],["serializednominalresourceflag"]]],[11,"clone",E,E,43,[[["self"]],["serializedkind"]]],[11,"clone",E,E,44,[[["self"]],["serializednativestructflag"]]],[11,"clone",E,E,45,[[["self"]],["opcodes"]]],[11,"clone",R[805],E,70,[[["self"]],[R[766]]]],[11,"clone",E,E,71,[[["self"]],[R[826]]]],[11,"clone",E,E,72,[[["self"]],[R[831]]]],[11,"clone",R[770],E,53,[[["self"]],["compiledmodulestrategygen"]]],[11,"clone",R[809],E,68,[[["self"]],[R[827]]]],[11,"clone","vm",E,0,[[["self"]],[R[718]]]],[11,"clone",E,E,1,[[["self"]],[R[789]]]],[11,"as_ref",R[809],E,68,[[["self"]],["vmstr"]]],[11,R[247],R[735],E,7,[[["self"],[R[688]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,7,[[["self"],[R[688]]],["bool"]]],[11,"le",E,E,7,[[["self"],[R[688]]],["bool"]]],[11,"gt",E,E,7,[[["self"],[R[688]]],["bool"]]],[11,"ge",E,E,7,[[["self"],[R[688]]],["bool"]]],[11,R[247],E,E,8,[[["self"],[R[686]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,8,[[["self"],[R[686]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[686]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[686]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[686]]],["bool"]]],[11,R[247],E,E,9,[[["self"],[R[692]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,9,[[["self"],[R[692]]],["bool"]]],[11,"le",E,E,9,[[["self"],[R[692]]],["bool"]]],[11,"gt",E,E,9,[[["self"],[R[692]]],["bool"]]],[11,"ge",E,E,9,[[["self"],[R[692]]],["bool"]]],[11,R[247],E,E,10,[[["self"],[R[702]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,10,[[["self"],[R[702]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[702]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[702]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[702]]],["bool"]]],[11,R[247],E,E,11,[[["self"],[R[768]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,11,[[["self"],[R[768]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[768]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[768]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[768]]],["bool"]]],[11,R[247],E,E,12,[[["self"],[R[704]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,12,[[["self"],[R[704]]],["bool"]]],[11,"le",E,E,12,[[["self"],[R[704]]],["bool"]]],[11,"gt",E,E,12,[[["self"],[R[704]]],["bool"]]],[11,"ge",E,E,12,[[["self"],[R[704]]],["bool"]]],[11,R[247],E,E,13,[[["self"],[R[706]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,13,[[["self"],[R[706]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[706]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[706]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[706]]],["bool"]]],[11,R[247],E,E,14,[[["self"],[R[695]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,14,[[["self"],[R[695]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[695]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[695]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[695]]],["bool"]]],[11,R[247],E,E,15,[[["self"],[R[697]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,15,[[["self"],[R[697]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[697]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[697]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[697]]],["bool"]]],[11,R[247],E,E,16,[[["self"],[R[699]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,16,[[["self"],[R[699]]],["bool"]]],[11,"le",E,E,16,[[["self"],[R[699]]],["bool"]]],[11,"gt",E,E,16,[[["self"],[R[699]]],["bool"]]],[11,"ge",E,E,16,[[["self"],[R[699]]],["bool"]]],[11,R[247],E,E,17,[[["self"],[R[778]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,17,[[["self"],[R[778]]],["bool"]]],[11,"le",E,E,17,[[["self"],[R[778]]],["bool"]]],[11,"gt",E,E,17,[[["self"],[R[778]]],["bool"]]],[11,"ge",E,E,17,[[["self"],[R[778]]],["bool"]]],[11,R[247],E,E,18,[[["self"],[R[684]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,18,[[["self"],[R[684]]],["bool"]]],[11,"le",E,E,18,[[["self"],[R[684]]],["bool"]]],[11,"gt",E,E,18,[[["self"],[R[684]]],["bool"]]],[11,"ge",E,E,18,[[["self"],[R[684]]],["bool"]]],[11,R[247],E,E,19,[[["self"],[R[824]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,19,[[["self"],[R[824]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[824]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[824]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[824]]],["bool"]]],[11,R[247],E,E,20,[[["self"],[R[683]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,20,[[["self"],[R[683]]],["bool"]]],[11,"le",E,E,20,[[["self"],[R[683]]],["bool"]]],[11,"gt",E,E,20,[[["self"],[R[683]]],["bool"]]],[11,"ge",E,E,20,[[["self"],[R[683]]],["bool"]]],[11,R[247],E,E,21,[[["self"],[R[690]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,21,[[["self"],[R[690]]],["bool"]]],[11,"le",E,E,21,[[["self"],[R[690]]],["bool"]]],[11,"gt",E,E,21,[[["self"],[R[690]]],["bool"]]],[11,"ge",E,E,21,[[["self"],[R[690]]],["bool"]]],[11,R[247],E,E,34,[[["self"],["kind"]],[[R[24],[R[32]]],[R[32]]]]],[11,R[247],E,E,35,[[["self"],[R[755]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,35,[[["self"],[R[755]]],["bool"]]],[11,"le",E,E,35,[[["self"],[R[755]]],["bool"]]],[11,"gt",E,E,35,[[["self"],[R[755]]],["bool"]]],[11,"ge",E,E,35,[[["self"],[R[755]]],["bool"]]],[11,R[247],R[809],E,68,[[["self"],[R[827]]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,68,[[["self"],[R[827]]],["bool"]]],[11,"le",E,E,68,[[["self"],[R[827]]],["bool"]]],[11,"gt",E,E,68,[[["self"],[R[827]]],["bool"]]],[11,"ge",E,E,68,[[["self"],[R[827]]],["bool"]]],[11,R[247],E,E,69,[[["self"],["vmstr"]],[[R[24],[R[32]]],[R[32]]]]],[11,"lt",E,E,69,[[["self"],["vmstr"]],["bool"]]],[11,"le",E,E,69,[[["self"],["vmstr"]],["bool"]]],[11,"gt",E,E,69,[[["self"],["vmstr"]],["bool"]]],[11,"ge",E,E,69,[[["self"],["vmstr"]],["bool"]]],[11,R[247],"vm",E,0,[[["self"],[R[718]]],[[R[24],[R[32]]],[R[32]]]]],[11,R[247],E,E,1,[[["self"],[R[789]]],[[R[24],[R[32]]],[R[32]]]]],[11,"eq",R[735],E,7,[[["self"],[R[688]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[688]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[686]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[686]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[692]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[692]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[702]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[702]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[768]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[768]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[704]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[704]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[706]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[706]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[695]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[695]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[697]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[697]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[699]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[699]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[778]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[778]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[684]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[684]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[824]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[824]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[683]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[683]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[690]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[690]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[693]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[693]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[828]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[828]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[633]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[633]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[767]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[767]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[716]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[716]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[685]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[685]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[635]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[635]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[700]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[700]]],["bool"]]],[11,"eq",E,E,34,[[["self"],["kind"]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[755]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[755]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[825]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[825]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[764]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[764]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[829]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[829]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[757]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[757]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[758]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[758]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[750]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[750]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[749]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[749]]],["bool"]]],[11,"eq",R[804],E,39,[[["self"],[R[830]]],["bool"]]],[11,"eq",R[805],E,70,[[["self"],[R[766]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[766]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[826]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[826]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[831]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[831]]],["bool"]]],[11,"eq",R[809],E,68,[[["self"],[R[827]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[827]]],["bool"]]],[11,"eq",E,E,69,[[["self"],["vmstr"]],["bool"]]],[11,"ne",E,E,69,[[["self"],["vmstr"]],["bool"]]],[11,"eq","vm",E,0,[[["self"],[R[718]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[789]]],["bool"]]],[11,"cmp",R[735],E,7,[[["self"],[R[688]]],[R[32]]]],[11,"cmp",E,E,8,[[["self"],[R[686]]],[R[32]]]],[11,"cmp",E,E,9,[[["self"],[R[692]]],[R[32]]]],[11,"cmp",E,E,10,[[["self"],[R[702]]],[R[32]]]],[11,"cmp",E,E,11,[[["self"],[R[768]]],[R[32]]]],[11,"cmp",E,E,12,[[["self"],[R[704]]],[R[32]]]],[11,"cmp",E,E,13,[[["self"],[R[706]]],[R[32]]]],[11,"cmp",E,E,14,[[["self"],[R[695]]],[R[32]]]],[11,"cmp",E,E,15,[[["self"],[R[697]]],[R[32]]]],[11,"cmp",E,E,16,[[["self"],[R[699]]],[R[32]]]],[11,"cmp",E,E,17,[[["self"],[R[778]]],[R[32]]]],[11,"cmp",E,E,18,[[["self"],[R[684]]],[R[32]]]],[11,"cmp",E,E,19,[[["self"],[R[824]]],[R[32]]]],[11,"cmp",E,E,20,[[["self"],[R[683]]],[R[32]]]],[11,"cmp",E,E,21,[[["self"],[R[690]]],[R[32]]]],[11,"cmp",E,E,34,[[["self"],["kind"]],[R[32]]]],[11,"cmp",E,E,35,[[["self"],[R[755]]],[R[32]]]],[11,"cmp",R[809],E,68,[[["self"],[R[827]]],[R[32]]]],[11,"cmp",E,E,69,[[["self"],["vmstr"]],[R[32]]]],[11,"cmp","vm",E,0,[[["self"],[R[718]]],[R[32]]]],[11,"cmp",E,E,1,[[["self"],[R[789]]],[R[32]]]],[11,"from",R[804],E,47,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",R[809],E,68,[[[R[58]]],["self"]]],[11,"from",E,E,68,[[["str"],["box",["str"]]],["self"]]],[11,"from",E,E,68,[[["str"]],["self"]]],[11,"from",E,E,68,[[["vmstr"]],["self"]]],[11,"hash",R[735],E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",R[804],E,39,[[["self"],["__h"]]]],[11,"hash",R[805],E,70,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",E,E,72,[[["self"],["__h"]]]],[11,"hash",R[809],E,68,[[["self"],["__h"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,"hash","vm",E,0,[[["self"],["__h"]]]],[11,"deref",R[805],E,73,[[["self"]],[R[826]]]],[11,"deref",E,E,74,[[["self"]],[R[826]]]],[11,"deref",E,E,75,[[["self"]],[R[766]]]],[11,"deref",E,E,76,[[["self"]],[R[826]]]],[11,"deref",E,E,77,[[["self"]],[R[831]]]],[11,"deref",E,E,78,[[["self"]],[R[831]]]],[11,"deref",E,E,79,[[["self"]],[R[826]]]],[11,"deref",E,E,80,[[["self"]],[R[826]]]],[11,"deref",E,E,81,[[["self"]],[R[766]]]],[11,"deref",E,E,82,[[["self"]],[R[766]]]],[11,"deref",E,E,83,[[["self"]],[R[766]]]],[11,"deref",E,E,84,[[["self"]],[R[766]]]],[11,"deref",E,E,85,[[["self"]],[R[766]]]],[11,"deref",E,E,86,[[["self"]],[R[766]]]],[11,"deref",E,E,87,[[["self"]],[R[264]]]],[11,"deref",R[809],E,68,[[["self"]],["vmstr"]]],[11,"fmt",R[803],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[735],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,34,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,36,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,37,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[804],E,39,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,40,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,41,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,42,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,43,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,44,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,45,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[805],E,70,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,71,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,72,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,48,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,49,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[770],E,53,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[809],E,68,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,69,[[["self"],[R[17]]],[R[0]]]],[11,"fmt","vm",E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[735],E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,30,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,37,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[809],E,68,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,69,[[["self"],[R[17]]],[R[0]]]],[11,"fmt","vm",E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,R[5],R[809],E,68,[[["self"]],["vmstr"]]],[11,R[193],R[805],E,70,[[["__d"]],[R[0]]]],[11,R[193],E,E,71,[[["__d"]],[R[0]]]],[11,R[193],E,E,72,[[["__d"]],[R[0]]]],[11,R[193],E,E,48,[[["__d"]],[R[0]]]],[11,R[193],E,E,49,[[["__d"]],[R[0]]]],[11,R[193],R[809],E,68,[[["__d"]],[R[0]]]],[11,R[142],R[805],E,70,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,71,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,72,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,48,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,49,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[809],E,68,[[["self"],["__s"]],[R[0]]]],[11,R[34],R[735],E,7,[[]]],[11,R[34],E,E,8,[[]]],[11,R[34],E,E,9,[[]]],[11,R[34],E,E,10,[[]]],[11,R[34],E,E,11,[[]]],[11,R[34],E,E,12,[[]]],[11,R[34],E,E,13,[[]]],[11,R[34],E,E,14,[[]]],[11,R[34],E,E,15,[[]]],[11,R[34],E,E,16,[[]]],[11,R[34],E,E,17,[[]]],[11,R[34],E,E,18,[[]]],[11,R[34],E,E,19,[[]]],[11,R[34],E,E,20,[[]]],[11,R[34],E,E,21,[[]]],[11,R[34],E,E,22,[[]]],[11,R[34],E,E,33,[[]]],[11,R[34],E,E,23,[[]]],[11,R[34],E,E,24,[[]]],[11,R[34],E,E,25,[[]]],[11,R[34],E,E,26,[[]]],[11,R[34],E,E,27,[[]]],[11,R[34],E,E,28,[[]]],[11,R[34],E,E,34,[[]]],[11,R[34],E,E,35,[[]]],[11,R[34],E,E,29,[[]]],[11,R[34],E,E,36,[[]]],[11,R[34],E,E,31,[[]]],[11,R[34],E,E,32,[[]]],[11,R[34],R[809],E,68,[[]]],[11,R[172],R[805],E,73,[[["self"]]]],[11,R[172],E,E,74,[[["self"]]]],[11,R[172],E,E,75,[[["self"]]]],[11,R[172],E,E,76,[[["self"]]]],[11,R[172],E,E,77,[[["self"]]]],[11,R[172],E,E,78,[[["self"]]]],[11,R[172],E,E,79,[[["self"]]]],[11,R[172],E,E,80,[[["self"]]]],[11,R[172],E,E,81,[[["self"]]]],[11,R[172],E,E,82,[[["self"]]]],[11,R[172],E,E,83,[[["self"]]]],[11,R[172],E,E,84,[[["self"]]]],[11,R[172],E,E,85,[[["self"]]]],[11,R[172],E,E,86,[[["self"]]]],[11,R[172],E,E,87,[[["self"]]]],[11,"check_type_parameters",R[735],E,35,[[["self"],["usize"]],[["vec",[R[493]]],[R[493]]]]],[11,"check_struct_handles",E,E,35,[[["self"]],[["vec",[R[493]]],[R[493]]]]],[11,R[193],E,"Deserializes a &[u8] slice into a `CompiledScript` instance.",37,[[],[R[832]]]],[11,R[193],E,"Deserialize a &[u8] slice into a `CompiledModule` instance.",38,[[],[R[832]]]],[11,"deserialize_no_check_bounds",E,E,32,[[],[R[832]]]]],"p":[[4,R[833]],[4,R[834]],[8,R[835]],[8,R[836]],[8,R[837]],[3,R[838]],[3,"Location"],[3,R[839]],[3,R[840]],[3,R[841]],[3,R[842]],[3,R[843]],[3,R[844]],[3,R[845]],[3,R[846]],[3,R[847]],[3,R[848]],[3,R[849]],[3,R[850]],[3,R[851]],[3,R[719]],[3,R[720]],[3,R[722]],[3,R[642]],[3,R[723]],[3,R[724]],[3,R[726]],[3,R[643]],[3,R[728]],[3,"CodeUnit"],[3,R[852]],[3,R[853]],[3,R[854]],[4,R[855]],[4,"Kind"],[4,R[856]],[4,"Bytecode"],[3,R[857]],[3,R[858]],[4,R[859]],[4,R[860]],[4,R[861]],[4,R[862]],[4,R[863]],[4,R[864]],[4,"Opcodes"],[4,R[865]],[3,R[866]],[3,R[867]],[3,"GasCost"],[8,R[868]],[8,R[869]],[8,R[870]],[3,R[871]],[3,"Resolver"],[3,R[872]],[8,R[873]],[3,R[874]],[3,R[875]],[3,R[876]],[3,R[877]],[3,R[878]],[3,R[879]],[3,R[880]],[3,R[881]],[3,R[882]],[3,R[883]],[3,R[884]],[3,"VMString"],[3,"VMStr"],[3,R[885]],[3,"GasUnits"],[3,"GasPrice"],[3,R[886]],[3,R[887]],[3,R[888]],[3,R[889]],[3,R[890]],[3,R[891]],[3,R[892]],[3,R[893]],[3,R[894]],[3,R[895]],[3,R[896]],[3,R[897]],[3,R[898]],[3,R[899]],[3,R[900]]]};
searchIndex["vm_cache_map"]={"doc":"A map used for VM runtime caches. The data structures are…","i":[[3,"Arena","vm_cache_map","A thread-safe variant of `typed_arena::Arena`.",N,N],[3,R[8],E,"A map custom designed for the VM runtime caches.…",N,N],[11,"new",E,E,0,[[],["self"]]],[11,R[21],E,E,0,[[["usize"]],["self"]]],[11,"alloc",E,E,0,[[["self"],[T]],[T]]],[11,"into_vec",E,E,0,[[],["vec"]]],[11,"new",E,E,1,[[["arena"]],["self"]]],[11,"get",E,"Get the value of the given key in the map.",1,[[["self"],["q"]],[R[24]]]],[11,"or_insert_with_transform",E,"Try inserting the value V if missing. The insert function…",1,[[["self"],["g"],["k"],["f"]],["w"]]],[11,"or_insert_with_try_transform",E,"A version of insert_with_transform where the transform can…",1,[[["self"],["g"],["k"],["f"]],[R[0]]]],[6,R[9],E,"The most common case of `CacheMap`, where references to…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[75],E,E,0,[[],["self"]]],[11,"or_insert",E,"Insert the value if not present. Discard the value if…",2,[[["self"],["k"],["v"]],["v"]]],[11,"or_insert_with",E,E,2,[[["self"],["k"],["f"]],["v"]]]],"p":[[3,"Arena"],[3,R[8]],[6,R[9]]]};
searchIndex["vm_genesis"]={"doc":E,"i":[[3,R[1730],"vm_genesis",E,N,N],[3,"Account",E,E,N,N],[12,"addr",E,E,0,N],[12,"privkey",E,E,0,N],[12,"pubkey",E,E,0,N],[3,"Accounts",E,E,N,N],[12,"randomness_source",E,E,1,N],[5,"sign_genesis_transaction",E,E,N,[[[R[407]]],[[R[395]],[R[0],[R[395]]]]]],[5,"encode_genesis_transaction",E,E,N,[[[R[181]],[R[192]]],[R[395]]]],[5,"encode_genesis_transaction_with_validator",E,E,N,[[[R[181]],[R[278]],[R[192]]],[R[395]]]],[11,"new",E,E,0,[[["stdrng"]],["self"]]],[11,"empty",E,E,1,[[],["self"]]],[11,"fresh_account",E,E,1,[[["self"]],["account"]]],[11,"new_account",E,E,1,[[["self"]],["usize"]]],[11,R[1727],E,E,1,[[["self"],["usize"]],[R[265]]]],[11,"get_account",E,E,1,[[["self"],["usize"]],["account"]]],[11,R[1728],E,E,1,[[["self"],["usize"]],[R[181]]]],[11,"create_txn_with_args",E,E,1,[[["self"],["u64"],["vec",[R[406]]],[R[406]],["account"],["vec",["u8"]],[R[265]],["u8"]],[R[395]]]],[11,R[1729],E,E,1,[[["self"]],[["vec",[R[265]]],[R[265]]]]],[11,"accounts",E,E,1,[[["self"]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[172],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[75],E,E,1,[[],["self"]]],[11,"deref",E,E,2,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[0]]]],[11,R[172],E,E,2,[[["self"]]]]],"p":[[3,"Account"],[3,"Accounts"],[3,R[1730]]]};
searchIndex["vm_runtime"]={"doc":"The VM runtime","i":[[3,"MoveVM",R[1656],"A wrapper to make VMRuntime standalone and thread safe.",N,N],[11,"new",E,E,0,[[["vmconfig"]],["self"]]],[0,"code_cache",E,"Caches for code data stored on chain.",N,N],[0,"module_adapter",R[1652],"Fetches code data from the blockchain.",N,N],[3,R[1695],R[1676],"A wrapper around State Store database for fetching code…",N,N],[3,R[1714],E,"A wrapper for an empty state with no code data stored.",N,N],[3,R[1696],E,"A wrapper for a state with a list of pre-compiled modules.",N,N],[8,R[1694],E,"Trait that describes how the VM expects code data to be…",N,N],[10,R[1683],E,"`ModuleId` is the fully qualified name for the module we…",1,[[["self"],[R[484]]],[[R[750]],[R[24],[R[750]]]]]],[11,"new",E,"Creates a new Fetcher instance with a `StateView` reference.",2,[[[R[1673]]],["self"]]],[11,"new",E,"Create a FakeFetcher instance with a vector of…",3,[[[R[750]],["vec",[R[750]]]],["self"]]],[11,"clear",E,"Remove all modules stored in the fetcher.",3,[[["self"]]]],[0,R[1657],R[1652],"Cache for modules published on chain.",N,N],[3,R[1698],R[1677],"Cache for modules that resides in a VM. It is an…",N,N],[3,R[1699],E,"A cache for all modules stored on chain. `vm_cache` holds…",N,N],[3,R[1700],E,"A temporary cache for module published by a single…",N,N],[8,R[1697],E,"Trait that describe a cache for modules. The idea is that…",N,N],[10,R[1684],E,"Given a function handle index, resolves that handle into…",4,[[["self"],[R[692]],[R[1653]]],[[R[985],[R[24]]],[R[24],[R[1654]]]]]],[10,R[1685],E,"Resolve a StructDefinitionIndex into a StructDef. This…",4,[[["self"],[R[1689]],[R[778]],[R[1653]]],[[R[24],[R[994]]],[R[985],[R[24]]]]]],[10,R[1686],E,"Resolve a ModuleId into a LoadedModule if the module has…",4,[[["self"],[R[484]]],[[R[24],[R[1653]]],[R[985],[R[24]]]]]],[10,R[1687],E,E,4,[[["self"],[R[1035]]]]],[10,R[1688],E,"Recache the list of previously resolved modules. Think of…",4,[[["self"],[R[1653]],["vec",[R[1653]]]]]],[11,"new",E,"In order to get a cleaner lifetime, the loaded program…",5,[[["arena"]],["self"]]],[11,"get_loaded_module_with_fetcher",E,"Resolve a ModuleId into a LoadedModule. If there is a…",5,[[["self"],["f"],[R[484]]],[[R[24],[R[1653]]],[R[985],[R[24]]]]]],[11,"resolve_function_ref_with_fetcher",E,"Resolve a FunctionHandleIndex into a FunctionRef in either…",5,[[["self"],["f"],[R[692]],[R[1653]]],[[R[985],[R[24]]],[R[24],[R[1654]]]]]],[11,"resolve_struct_handle_with_fetcher",E,"Resolve a StructHandle into a StructDef recursively in…",5,[[["self"],[R[1653]],[R[1689]],["f"],[R[686]]],[[R[24],[R[994]]],[R[985],[R[24]]]]]],[11,"resolve_signature_token_with_fetcher",E,"Resolve a SignatureToken into a Type recursively in either…",5,[[[R[1653]],["typecontext"],[R[1689]],["f"],[R[755]],["self"]],[[R[24],["type"]],[R[985],[R[24]]]]]],[11,"resolve_struct_def_with_fetcher",E,"Resolve a StructDefinition into a StructDef recursively in…",5,[[[R[1689]],[R[778]],["f"],["self"],[R[1653]]],[[R[24],[R[994]]],[R[985],[R[24]]]]]],[11,"new",E,E,6,[[["vmmodulecache"],["f"]],["self"]]],[11,"new",E,E,7,[[["arena"],["p"]],["self"]]],[0,"script_cache",R[1652],"Cache for commonly executed scripts",N,N],[3,R[1701],R[1678],"The cache for commonly executed scripts. Currently there's…",N,N],[11,"new",E,"Create a new ScriptCache.",8,[[["arena"]],["self"]]],[11,"cache_script",E,"Compiles, verifies, caches and resolves `raw_bytes` into a…",8,[[["self"]],[[R[985],[R[1654]]],[R[1654]]]]],[0,"data_cache",R[1656],"Scratchpad for on chain values during the execution.",N,N],[3,R[1703],R[1679],"The wrapper around the StateVersionView for the block. It…",N,N],[3,R[1704],E,"Global cache for a transaction. Materializes Values from…",N,N],[8,R[1702],E,"Trait for the StateVersionView or a mock implementation of…",N,N],[10,"get",E,E,9,[[["self"],[R[267]]],[[R[24],["vec"]],[R[985],[R[24]]]]]],[11,"new",E,E,10,[[[R[1673]]],["self"]]],[11,"get",E,E,10,[[["self"],[R[267]]],[[R[24],["vec"]],[R[985],[R[24]]]]]],[11,"push_write_set",E,E,10,[[["self"],[R[411]]]]],[11,R[1655],E,E,10,[[["self"]],["bool"]]],[11,"new",E,E,11,[[[R[1667]]],["self"]]],[11,"borrow_global",E,"BorrowGlobal opcode cache implementation",11,[[["self"],[R[267]],[R[994]]],[[R[985],[R[1013]]],[R[1013]]]]],[11,"resource_exists",E,"Exists opcode cache implementation",11,[[["self"],[R[267]],[R[994]]],[R[985]]]],[11,"move_resource_from",E,"MoveFrom opcode cache implementation",11,[[["self"],[R[267]],[R[994]]],[[R[985],["value"]],["value"]]]],[11,"move_resource_to",E,"MoveToSender opcode cache implementation",11,[[["self"],[R[267]],[R[994]],["struct"]],[R[985]]]],[11,R[1672],E,"Make a write set from the updated (dirty, deleted) global…",11,[[["self"],["vec"]],[[R[411]],[R[985],[R[411]]]]]],[11,"clear",E,"Flush out the cache and restart from a clean state",11,[[["self"]]]],[0,R[264],R[1656],"A bunch of helper functions to fetch the storage key for…",N,N],[5,"resource_storage_key","vm_runtime::identifier","Get the StructTag for a StructDefinition defined in a…",N,[[[R[778]]],[R[272]]]],[5,"create_access_path",E,"Get the AccessPath to a resource stored under `address`…",N,[[[R[265]],[R[272]]],[R[267]]]],[0,"interpreter",R[1656],E,N,N],[3,R[1663],R[1680],R[1664],N,N],[3,R[1665],E,R[1666],N,N],[3,R[1705],E,"`Interpreter` instances can execute Move functions.",N,N],[3,R[1706],E,E,N,N],[3,R[1707],E,E,N,N],[11,"new",E,"Create a new instance of an `Interpreter` in the context…",12,[[[R[1658]],[R[1659]],["p"],["costtable"]],["self"]]],[11,R[1657],E,"Returns the module cache for this interpreter.",12,[[["self"]],["p"]]],[11,"disable_metering",E,"Disables metering of gas.",12,[[["self"]]]],[11,R[1670],E,R[1671],12,[[["self"],[R[271]],["vec",["value"]],[R[484]],["value"]],[R[985]]]],[11,"create_account_entry",E,R[1669],12,[[["self"],[R[265]]],[R[985]]]],[11,"peek",E,E,13,[[["self"]],[["value"],[R[985],["value"]]]]],[11,"peek_at",E,E,13,[[["self"],["usize"]],[["value"],[R[985],["value"]]]]],[11,R[1657],E,E,13,[[["self"]],[R[1903]]]],[11,"module",E,E,13,[[["self"]],[R[1653]]]],[11,"copy_loc",E,E,13,[[["self"],[R[1029]]],[[R[985],["value"]],["value"]]]],[11,"new",E,E,14,[[[R[1658]],[R[1659]],["p"],["costtable"]],["self"]]],[11,"turn_off_gas_metering",E,E,14,[[["self"]]]],[11,"clear_writes",E,E,14,[[["self"]]]],[11,"set_stack",E,E,14,[[["self"],["vec",["value"]],["value"]]]],[11,"call_stack_height",E,E,14,[[["self"]],["usize"]]],[11,"pop_call",E,E,14,[[["self"]]]],[11,"push_frame",E,E,14,[[["self"],["vec",[R[503]]],[R[503]],[R[1654]]]]],[11,"load_call",E,E,14,[[["self"],["hashmap",[R[1029],"value"]],[R[1029]],["value"]]]],[11,"execute_code_snippet",E,E,14,[[["self"]],[R[985]]]],[0,R[1719],R[1656],R[1720],N,N],[0,R[636],R[1662],"Loaded representation for function definitions and handles.",N,N],[3,R[1710],R[1681],"Resolved form of a function handle",N,N],[3,R[1708],E,"Resolved form of a function definition",N,N],[12,R[1661],E,E,15,N],[12,R[1691],E,E,15,N],[12,R[1660],E,E,15,N],[12,"code",E,E,15,N],[12,"flags",E,E,15,N],[8,R[1709],E,"Trait that defines the internal representation of a move…",N,N],[10,"new",E,"Create a new function reference to a module",16,[[[R[1653]],[R[824]]],["self"]]],[10,"module",E,"Fetch the reference to the module where the function is…",16,[[["self"]],[R[1653]]]],[10,R[1690],E,"Fetch the code of the function definition",16,[[["self"]]]],[10,R[1661],E,"Return the number of locals for the function",16,[[["self"]],["usize"]]],[10,R[1691],E,"Return the number of input parameters for the function",16,[[["self"]],["usize"]]],[10,R[1660],E,"Return the number of output parameters for the function",16,[[["self"]],["usize"]]],[10,R[782],E,"Return whether the function is native or not",16,[[["self"]],["bool"]]],[10,"name",E,"Return the name of the function",16,[[["self"]],[R[271]]]],[10,R[412],E,"Returns the signature of the function",16,[[["self"]],[R[635]]]],[11,R[997],E,E,17,[[["self"]],[R[58]]]],[11,"new",E,E,15,[[[R[1035]],[R[824]]],["self"]]],[0,"loaded_module",R[1662],"Loaded representation for Move modules.",N,N],[3,R[1711],R[1682],"Defines a loaded module in the memory. Currently we just…",N,N],[12,"struct_defs_table",E,E,18,N],[12,"field_defs_table",E,E,18,N],[12,"function_defs_table",E,E,18,N],[12,R[734],E,E,18,N],[12,"field_offsets",E,E,18,N],[11,"new",E,E,18,[[[R[1035]]],["self"]]],[11,"cached_struct_def_at",E,"Return a cached copy of the struct def at this index, if…",18,[[["self"],[R[778]]],[[R[994]],[R[24],[R[994]]]]]],[11,"cache_struct_def",E,"Cache this struct def at this location.",18,[[["self"],[R[778]],[R[994]]]]],[11,"get_field_offset",E,E,18,[[["self"],[R[684]]],[[R[985],[R[753]]],[R[753]]]]],[11,"get_struct_def_index",E,E,18,[[["self"],[R[271]]],[[R[985],[R[778]]],[R[778]]]]],[0,"txn_executor",R[1656],"Processor for a single transaction.",N,N],[3,R[1713],R[1675],"The ModuleId for the gas schedule module",N,N],[3,R[1663],E,R[1664],N,N],[3,R[1715],E,"The ModuleId for the LibraCoin module",N,N],[3,R[1665],E,R[1666],N,N],[3,R[1716],E,"The ModuleId for the validator config",N,N],[3,R[1717],E,"The ModuleId for the libra system module",N,N],[3,R[1718],E,"The ModuleId for the transaction fee distribution module",N,N],[3,R[1712],E,"A struct that executes one single transaction. 'alloc is…",N,N],[5,"convert_txn_args",E,"Convert the transaction arguments into move values.",N,[[["vec",[R[406]]],[R[406]]],[["vec",["value"]],["value"]]]],[5,"execute_function_in_module",E,"Execute the first function in a module",N,[[[R[824]],[R[1673]],[R[406]],["vec",[R[406]]],[R[1035]]],[R[985]]]],[11,"new",E,"Create a new `TransactionExecutor` to execute a single…",19,[[[R[1667]],[R[1659]],["p"],["costtable"]],["self"]]],[11,R[1657],E,"Returns the module cache for this executor.",19,[[["self"]],["p"]]],[11,R[1668],E,R[1669],19,[[["self"],[R[265]]],[R[985]]]],[11,R[1670],E,R[1671],19,[[["self"],[R[271]],["vec",["value"]],[R[484]],["value"]],[R[985]]]],[11,"execute_function_with_sender_FOR_GENESIS_ONLY",E,"Execute a function with the sender set to `sender`,…",19,[[["self"],[R[271]],["vec",["value"]],[R[265]],[R[484]],["value"]],[R[985]]]],[11,R[1672],E,"Produce a write set at the end of a transaction. This will…",19,[[["self"],[R[985]],["vec"]],[[R[985],[R[510]]],[R[510]]]]],[8,"VMVerifier",R[1656],"This trait describes the VM's verification interfaces.",N,N],[10,R[1692],E,"Executes the prologue of the Libra Account and verifies…",20,[[["self"],[R[394]],[R[1673]]],[[R[24],[R[493]]],[R[493]]]]],[8,"VMExecutor",E,"This trait describes the VM's execution interface.",N,N],[10,R[1674],E,"Executes a block of transactions and returns output for…",21,[[["vec",[R[351]]],[R[1673]],[R[351]],["vmconfig"]],[[R[493]],[R[0],["vec",R[493]]],["vec",[R[510]]]]]],[14,"record_stats",E,E,N,N],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[1675],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[2],E,E,22,[[[U]],[R[0]]]],[11,R[3],E,E,22,[[],[R[0]]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[R[7]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",R[1676],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[[U]],[R[0]]]],[11,R[3],E,E,23,[[],[R[0]]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[R[7]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",R[1677],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[1678],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",R[1679],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",R[1680],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[[U]],[R[0]]]],[11,R[3],E,E,24,[[],[R[0]]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[R[7]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[2],E,E,25,[[[U]],[R[0]]]],[11,R[3],E,E,25,[[],[R[0]]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[R[7]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],R[1681],E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[1038],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[1038],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,15,[[["self"],["k"]],["bool"]]],[11,"into",R[1682],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[[U]],[R[0]]]],[11,R[3],E,E,18,[[],[R[0]]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[R[7]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[1038],E,E,18,[[["self"],["k"]],["bool"]]],[11,R[1038],E,E,18,[[["self"],["k"]],["bool"]]],[11,"into",R[1675],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[2],E,E,26,[[[U]],[R[0]]]],[11,R[3],E,E,26,[[],[R[0]]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[R[7]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[2],E,E,27,[[[U]],[R[0]]]],[11,R[3],E,E,27,[[],[R[0]]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[R[7]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[[U]],[R[0]]]],[11,R[3],E,E,28,[[],[R[0]]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[R[7]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[[U]],[R[0]]]],[11,R[3],E,E,29,[[],[R[0]]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[R[7]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[2],E,E,30,[[[U]],[R[0]]]],[11,R[3],E,E,30,[[],[R[0]]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[R[7]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[2],E,E,31,[[[U]],[R[0]]]],[11,R[3],E,E,31,[[],[R[0]]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[R[7]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[2],E,E,19,[[[U]],[R[0]]]],[11,R[3],E,E,19,[[],[R[0]]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[R[7]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[1683],R[1676],E,2,[[["self"],[R[484]]],[[R[750]],[R[24],[R[750]]]]]],[11,R[1683],E,E,23,[[["self"],[R[484]]],[[R[750]],[R[24],[R[750]]]]]],[11,R[1683],E,E,3,[[["self"],[R[484]]],[[R[750]],[R[24],[R[750]]]]]],[11,R[1684],R[1677],E,5,[[["self"],[R[692]],[R[1653]]],[[R[985],[R[24]]],[R[24],[R[1654]]]]]],[11,R[1685],E,E,5,[[["self"],[R[1689]],[R[778]],[R[1653]]],[[R[24],[R[994]]],[R[985],[R[24]]]]]],[11,R[1686],E,E,5,[[["self"],[R[484]]],[[R[24],[R[1653]]],[R[985],[R[24]]]]]],[11,R[1687],E,E,5,[[["self"],[R[1035]]]]],[11,R[1688],E,E,5,[[["self"],[R[1653]],["vec",[R[1653]]]]]],[11,R[1684],E,E,6,[[["self"],[R[692]],[R[1653]]],[[R[985],[R[24]]],[R[24],[R[1654]]]]]],[11,R[1685],E,E,6,[[["self"],[R[1689]],[R[778]],[R[1653]]],[[R[24],[R[994]]],[R[985],[R[24]]]]]],[11,R[1686],E,E,6,[[["self"],[R[484]]],[[R[24],[R[1653]]],[R[985],[R[24]]]]]],[11,R[1687],E,E,6,[[["self"],[R[1035]]]]],[11,R[1688],E,E,6,[[["self"],[R[1653]],["vec",[R[1653]]]]]],[11,R[1684],E,E,7,[[["self"],[R[692]],[R[1653]]],[[R[985],[R[24]]],[R[24],[R[1654]]]]]],[11,R[1685],E,E,7,[[["self"],[R[1689]],[R[778]],[R[1653]]],[[R[24],[R[994]]],[R[985],[R[24]]]]]],[11,R[1686],E,E,7,[[["self"],[R[484]]],[[R[24],[R[1653]]],[R[985],[R[24]]]]]],[11,R[1687],E,E,7,[[["self"],[R[1035]]]]],[11,R[1688],E,E,7,[[["self"],[R[1653]],["vec",[R[1653]]]]]],[11,"get",R[1679],E,10,[[["self"],[R[267]]],[[R[24],["vec"]],[R[985],[R[24]]]]]],[11,"new",R[1681],E,17,[[[R[1653]],[R[824]]],["self"]]],[11,"module",E,E,17,[[["self"]],[R[1653]]]],[11,R[1690],E,E,17,[[["self"]]]],[11,R[1661],E,E,17,[[["self"]],["usize"]]],[11,R[1691],E,E,17,[[["self"]],["usize"]]],[11,R[1660],E,E,17,[[["self"]],["usize"]]],[11,R[782],E,E,17,[[["self"]],["bool"]]],[11,"name",E,E,17,[[["self"]],[R[271]]]],[11,R[412],E,E,17,[[["self"]],[R[635]]]],[11,R[1692],R[1656],E,0,[[["self"],[R[394]],[R[1673]]],[[R[24],[R[493]]],[R[493]]]]],[11,R[1674],E,E,0,[[["vec",[R[351]]],[R[1673]],[R[351]],["vmconfig"]],[[R[985],["vec"]],["vec",[R[510]]]]]],[11,"clone",E,E,0,[[["self"]],["movevm"]]],[11,"clone",R[1681],E,17,[[["self"]],[R[1654]]]],[11,"clone",E,E,15,[[["self"]],[R[1693]]]],[11,"eq",E,E,17,[[["self"],[R[1654]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[1654]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[1693]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[1693]]],["bool"]]],[11,"eq",R[1682],E,18,[[["self"],[R[1653]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[1653]]],["bool"]]],[11,"deref",R[1675],E,22,[[["self"]],[R[484]]]],[11,"deref",R[1680],E,24,[[["self"]],[R[484]]]],[11,"deref",E,E,25,[[["self"]],[R[484]]]],[11,"deref",R[1675],E,26,[[["self"]],[R[484]]]],[11,"deref",E,E,27,[[["self"]],[R[484]]]],[11,"deref",E,E,28,[[["self"]],[R[484]]]],[11,"deref",E,E,29,[[["self"]],[R[484]]]],[11,"deref",E,E,30,[[["self"]],[R[484]]]],[11,"deref",E,E,31,[[["self"]],[R[484]]]],[11,"fmt",R[1681],E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1682],E,18,[[["self"],[R[17]]],[R[0]]]],[11,R[810],E,E,18,[[["self"]],[R[750]]]],[11,R[172],R[1675],E,22,[[["self"]]]],[11,R[172],R[1680],E,24,[[["self"]]]],[11,R[172],E,E,25,[[["self"]]]],[11,R[172],R[1675],E,26,[[["self"]]]],[11,R[172],E,E,27,[[["self"]]]],[11,R[172],E,E,28,[[["self"]]]],[11,R[172],E,E,29,[[["self"]]]],[11,R[172],E,E,30,[[["self"]]]],[11,R[172],E,E,31,[[["self"]]]]],"p":[[3,"MoveVM"],[8,R[1694]],[3,R[1695]],[3,R[1696]],[8,R[1697]],[3,R[1698]],[3,R[1699]],[3,R[1700]],[3,R[1701]],[8,R[1702]],[3,R[1703]],[3,R[1704]],[3,R[1705]],[3,R[1706]],[3,R[1707]],[3,R[1708]],[8,R[1709]],[3,R[1710]],[3,R[1711]],[3,R[1712]],[8,"VMVerifier"],[8,"VMExecutor"],[3,R[1713]],[3,R[1714]],[3,R[1663]],[3,R[1665]],[3,R[1663]],[3,R[1715]],[3,R[1665]],[3,R[1716]],[3,R[1717]],[3,R[1718]]]};
searchIndex["vm_runtime_types"]={"doc":"Types and data used by the VM runtime","i":[[0,R[1719],R[982],R[1720],N,N],[0,"struct_def",R[981],"Loaded representation for Move struct definition.",N,N],[3,R[1016],R[998],E,N,N],[4,"StructDef",E,"Resolved form of struct definition.",N,N],[13,"Struct",E,E,0,N],[13,"Native",E,E,0,N],[11,"new",E,"Constructs a new [`StructDef`]",0,[[["vec",["type"]],["type"]],["self"]]],[11,"field_definitions",E,"Get type declaration for each field in the struct.",1,[[["self"]]]],[0,"types",R[981],"Loaded representation for runtime types.",N,N],[4,"Type",R[999],"Resolved form of runtime types.",N,N],[13,"Bool",E,E,2,N],[13,"U64",E,E,2,N],[13,"String",E,E,2,N],[13,R[305],E,E,2,N],[13,R[739],E,E,2,N],[13,"Struct",E,E,2,N],[13,R[682],E,E,2,N],[13,R[740],E,E,2,N],[13,"TypeVariable",E,E,2,N],[0,"native_functions",R[982],E,N,N],[0,R[989],R[984],E,N,N],[3,R[1017],R[1000],"Result of a native function execution that requires…",N,N],[12,"cost",E,"The cost for running that function, whether successfully…",3,N],[12,R[0],E,"Result of execution. This is either the return values or…",3,N],[3,R[1018],E,R[991],N,N],[12,R[989],E,"Given the vector of aguments, it executes the native…",4,N],[12,"expected_signature",E,"The signature as defined in it's declaring module. It…",4,N],[5,"resolve_native_function",E,"Looks up the expected native function definition from the…",N,[[[R[271]],[R[484]]],[[R[24],[R[983]]],[R[983]]]]],[11,"ok",E,"Return values of a successful execution.",3,[[["vec",["value"]],["u64"],["value"]],["self"]]],[11,"err",E,"`VMStatus` of a failed execution. The failure is a runtime…",3,[[[R[493]],["u64"]],["self"]]],[11,"num_args",E,"Returns the number of arguments to the native function,…",4,[[["self"]],["usize"]]],[0,"hash",R[984],E,N,N],[5,"native_sha2_256","vm_runtime_types::native_functions::hash",E,N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[5,"native_sha3_256",E,E,N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[0,"primitive_helpers",R[984],E,N,N],[5,"native_bytearray_concat","vm_runtime_types::native_functions::primitive_helpers",E,N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[5,"native_address_to_bytes",E,E,N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[5,"native_u64_to_bytes",E,E,N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[0,R[412],R[984],E,N,N],[5,"native_ed25519_signature_verification","vm_runtime_types::native_functions::signature",E,N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[5,"native_ed25519_threshold_signature_verification",E,"Batch verify a collection of signatures using a bitmap for…",N,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[0,"native_structs",R[982],E,N,N],[0,"def",R[990],E,N,N],[3,R[1019],R[1001],E,N,N],[12,"tag",E,E,5,N],[4,R[1020],E,E,N,N],[13,"Vector",E,E,6,N],[4,R[1021],E,E,N,N],[13,"Vector",E,E,7,N],[11,"new",E,E,5,[[[R[1006]],["vec",["type"]],["type"]],["self"]]],[11,"new_vec",E,E,5,[[["type"]],["self"]]],[11,R[988],E,E,5,[[["self"]]]],[11,"size",E,E,7,[[["self"]],[[R[765]],[R[766],[R[765]]]]]],[0,R[989],R[990],E,N,N],[3,R[1022],R[1002],R[991],N,N],[12,"expected_nominal_resource",E,"The expected boolean indicating if it is a nominal…",8,N],[12,"expected_type_formals",E,"The expected kind constraints of the type parameters.",8,N],[12,"expected_index",E,"The expected index for the struct Helpful for ensuring…",8,N],[12,"struct_type",E,"Kind of the NativeStruct,",8,N],[5,"resolve_native_struct",E,"Looks up the expected native struct definition from the…",N,[[[R[271]],[R[484]]],[[R[24],[R[992]]],[R[992]]]]],[0,"vector",R[990],E,N,N],[3,R[1023],R[1003],E,N,N],[17,R[993],E,E,N,N],[17,"POP_EMPTY_VEC",E,E,N,N],[17,"DESTROY_NON_EMPTY_VEC",E,E,N,N],[11,"native_empty",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"native_length",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"native_push_back",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"native_borrow",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"native_pop",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"native_destroy_empty",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"native_swap",E,E,9,[[[R[987],["value"]],["value"]],[[R[985],[R[986]]],[R[986]]]]],[11,"size",E,E,9,[[["self"]],[[R[765]],[R[766],[R[765]]]]]],[0,"type_context",R[982],E,N,N],[3,R[1024],R[1004],E,N,N],[11,"new",E,E,10,[[["vec",["type"]],["type"]],["self"]]],[11,"identity_mapping",E,E,10,[[["u16"]],["self"]]],[11,"subst_type",E,E,10,[[["self"],["type"]],[[R[493]],[R[0],["type",R[493]]],["type"]]]],[11,"subst_struct_def",E,E,10,[[["self"],[R[994]]],[[R[994]],[R[493]],[R[0],[R[994],R[493]]]]]],[11,"get_type",E,E,10,[[["self"],["u16"]],[[R[493]],[R[0],["type",R[493]]],["type"]]]],[0,"value",R[982],E,N,N],[3,"Value",R[1005],"A Move value.",N,N],[3,"Struct",E,"A struct in Move.",N,N],[3,R[682],E,"External representation for a reference.",N,N],[3,"Locals",E,"The locals (vector of values) for a `Frame`.",N,N],[3,R[1026],E,"A root into an instance on chain. Holds flags about the…",N,N],[3,R[995],E,"A GlobalRef holds the reference to the data and a shared…",N,N],[4,R[1025],E,"The wrapper for all things reference in the VM. Right now…",N,N],[13,R[682],E,E,11,N],[13,R[995],E,E,11,N],[11,"u64",E,"Return a `Value` representing a `u64` in the VM.",12,[[["u64"]],["self"]]],[11,R[333],E,"Return a `Value` representing an `AccountAddress` in the VM.",12,[[[R[265]]],["self"]]],[11,"bool",E,"Return a `Value` representing an `bool` in the VM.",12,[[["bool"]],["self"]]],[11,R[655],E,"Return a `Value` representing a `ByteArray` in the VM.",12,[[[R[274]]],["self"]]],[11,R[58],E,"Return a `Value` representing a `String` in the VM.",12,[[[R[827]]],["self"]]],[11,"struct_",E,"Return a `Value` representing a `Struct` in the VM.",12,[[["struct"]],["self"]]],[11,R[996],E,"Return a `Value` representing a `Reference` in the VM.",12,[[[R[996]]],["self"]]],[11,"global_ref",E,"Return a `Value` representing a `GlobalRef` in the VM.",12,[[[R[1013]]],["self"]]],[11,"native_struct",E,E,12,[[[R[1007]]],["self"]]],[11,"value_as",E,"Convert a Value into a `T` if the value represents a type…",12,[[],[R[985]]]],[11,"equals",E,"`Eq` bytecode",12,[[["self"],["value"]],[[R[985],["bool"]],["bool"]]]],[11,"not_equals",E,"`Neq` bytecode",12,[[["self"],["value"]],[[R[985],["bool"]],["bool"]]]],[11,"is_global_ref",E,E,12,[[["self"]],["bool"]]],[11,"size",E,E,12,[[["self"]],[[R[765]],[R[766],[R[765]]]]]],[11,"as_struct_ref",E,E,12,[[["self"]],[[R[24],["struct"]],["struct"]]]],[11,R[997],E,E,12,[[["self"]],[R[58]]]],[11,"new",E,"Creates a struct from a vector of `Value`s.",13,[[["vec",["value"]],["value"]],["self"]]],[11,"get_field_value",E,"Called by `Unpack` to fetch all fields out of the struct…",13,[[["self"],["usize"]],[[R[985],["value"]],["value"]]]],[11,"get_field_reference",E,E,13,[[["self"],["usize"]],[[R[985],["value"]],["value"]]]],[11,"size",E,E,13,[[["self"]],[[R[765]],[R[766],[R[765]]]]]],[11,"new",E,E,14,[[["value"]],["self"]]],[11,"new",E,"Create a `ReferenceValue` from a `Value` popped off the…",11,[[["value"]],[R[985]]]],[11,"borrow_field",E,"Borrow a field from the reference if the reference is to a…",11,[[["usize"]],[[R[985],["value"]],["value"]]]],[11,"read_ref",E,"Read the value pointed to by the reference.",11,[[],[[R[985],["value"]],["value"]]]],[11,"write_ref",E,"Write `value` to the location pointed to by the reference.",11,[[["value"]]]],[11,"new",E,E,15,[[[R[267]]],["self"]]],[11,"mark_dirty",E,E,15,[[["self"]]]],[11,"make_root",E,E,16,[[[R[267]],["value"]],["self"]]],[11,"move_to",E,E,16,[[["struct"],[R[267]]],["self"]]],[11,"get_data",E,E,16,[[],[["value"],[R[24],["value"]]]]],[11,"is_loadable",E,E,16,[[["self"]],["bool"]]],[11,"is_dirty",E,E,16,[[["self"]],["bool"]]],[11,"is_deleted",E,E,16,[[["self"]],["bool"]]],[11,"is_clean",E,E,16,[[["self"]],["bool"]]],[11,"move_from",E,E,16,[[["self"]],[[R[985],["value"]],["value"]]]],[11,"size",E,E,16,[[["self"]],[[R[765]],[R[766],[R[765]]]]]],[11,"new",E,"Create a `Locals` instance containing `size` locals all…",17,[[["usize"]],["self"]]],[11,"copy_loc",E,"Copy the `Value` at index `idx`. Return an error if index…",17,[[["self"],["usize"]],[[R[985],["value"]],["value"]]]],[11,"move_loc",E,"Move the `Value` at index `idx` out of the locals vector.…",17,[[["self"],["usize"]],[[R[985],["value"]],["value"]]]],[11,"store_loc",E,"Store `value` in input in the local at index `idx`. Return…",17,[[["self"],["value"],["usize"]],[R[985]]]],[11,"borrow_loc",E,"Borrow the local at index `idx`. Return an error if index…",17,[[["self"],["usize"]],[[R[985],["value"]],["value"]]]],[11,R[997],E,E,17,[[["self"]],[R[58]]]],[11,"simple_serialize",E,"Serialize this value using `SimpleSerializer`.",12,[[["self"]],[[R[24],["vec"]],["vec",["u8"]]]]],[11,"simple_deserialize",E,"Deserialize this value using `lcs::Deserializer` and a…",12,[[[R[994]]],[[R[985],["value"]],["value"]]]],[14,"pop_arg",R[982],E,N,N],[11,"into",R[998],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,R[169],E,E,1,[[["self"]],[R[149]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,R[169],E,E,0,[[["self"]],[R[149]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[13],R[999],E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,R[169],E,E,2,[[["self"]],[R[149]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[1000],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[[U]],[R[0]]]],[11,R[3],E,E,3,[[],[R[0]]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[R[7]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[[U]],[R[0]]]],[11,R[3],E,E,4,[[],[R[0]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[R[7]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[13],R[1001],E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[2],E,E,5,[[[U]],[R[0]]]],[11,R[3],E,E,5,[[],[R[0]]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[R[7]]]],[11,R[169],E,E,5,[[["self"]],[R[149]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[2],E,E,6,[[[U]],[R[0]]]],[11,R[3],E,E,6,[[],[R[0]]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[R[7]]]],[11,R[169],E,E,6,[[["self"]],[R[149]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[2],E,E,7,[[[U]],[R[0]]]],[11,R[3],E,E,7,[[],[R[0]]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[R[7]]]],[11,R[169],E,E,7,[[["self"]],[R[149]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[1002],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[[U]],[R[0]]]],[11,R[3],E,E,8,[[],[R[0]]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[R[7]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[13],R[1003],E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[2],E,E,9,[[[U]],[R[0]]]],[11,R[3],E,E,9,[[],[R[0]]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[R[7]]]],[11,R[169],E,E,9,[[["self"]],[R[149]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",R[1004],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[2],E,E,10,[[[U]],[R[0]]]],[11,R[3],E,E,10,[[],[R[0]]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[R[7]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[13],R[1005],E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[[U]],[R[0]]]],[11,R[3],E,E,12,[[],[R[0]]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[R[7]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[[U]],[R[0]]]],[11,R[3],E,E,13,[[],[R[0]]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[R[7]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[[U]],[R[0]]]],[11,R[3],E,E,14,[[],[R[0]]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[R[7]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[[U]],[R[0]]]],[11,R[3],E,E,17,[[],[R[0]]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[R[7]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[[U]],[R[0]]]],[11,R[3],E,E,15,[[],[R[0]]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[R[7]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[[U]],[R[0]]]],[11,R[3],E,E,16,[[],[R[0]]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[R[7]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[[U]],[R[0]]]],[11,R[3],E,E,11,[[],[R[0]]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[R[7]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"clone",R[998],E,0,[[["self"]],[R[994]]]],[11,"clone",R[999],E,2,[[["self"]],["type"]]],[11,"clone",R[1001],E,6,[[["self"]],[R[1006]]]],[11,"clone",E,E,5,[[["self"]],[R[1009]]]],[11,"clone",E,E,7,[[["self"]],[R[1007]]]],[11,"clone",R[1003],E,9,[[["self"]],[R[1010]]]],[11,"clone",R[1005],E,12,[[["self"]],["value"]]],[11,"clone",E,E,13,[[["self"]],["struct"]]],[11,"clone",E,E,14,[[["self"]],[R[996]]]],[11,"clone",E,E,17,[[["self"]],["locals"]]],[11,"clone",E,E,11,[[["self"]],[R[1011]]]],[11,"clone",E,E,15,[[["self"]],[R[1012]]]],[11,"clone",E,E,16,[[["self"]],[R[1013]]]],[11,"eq",R[998],E,0,[[["self"],[R[994]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[994]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1008]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1008]]],["bool"]]],[11,"eq",R[999],E,2,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["type"]],["bool"]]],[11,"eq",R[1001],E,6,[[["self"],[R[1006]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1009]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1009]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[1007]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[1007]]],["bool"]]],[11,"eq",R[1003],E,9,[[["self"],[R[1010]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1010]]],["bool"]]],[11,"eq",R[1005],E,12,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["struct"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["struct"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[996]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[996]]],["bool"]]],[11,"eq",E,E,17,[[["self"],["locals"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["locals"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[1011]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[1011]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[1012]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[1012]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1013]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1013]]],["bool"]]],[11,"fmt",R[998],E,0,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[999],E,2,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1001],E,6,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1003],E,9,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",R[1005],E,12,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[17]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[17]]],[R[0]]]],[11,R[193],R[998],E,0,[[["__d"]],[R[0]]]],[11,R[193],E,E,1,[[["__d"]],[R[0]]]],[11,R[193],R[999],E,2,[[["__d"]],[R[0]]]],[11,R[193],R[1001],E,6,[[["__d"]],[R[0]]]],[11,R[193],E,E,5,[[["__d"]],[R[0]]]],[11,R[142],R[998],E,0,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,1,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[999],E,2,[[["self"],["__s"]],[R[0]]]],[11,R[142],R[1001],E,6,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,5,[[["self"],["__s"]],[R[0]]]],[11,R[142],E,E,7,[[["self"],["s"]],[R[0]]]],[11,R[142],R[1003],E,9,[[["self"],["__s"]],[R[0]]]],[11,R[34],R[1005],E,12,[[]]],[11,R[34],R[999],E,2,[[]]],[11,R[1014],R[1005],"Returns a [`Strategy`] that generates random primitive…",12,[[]]],[11,R[1015],E,"Returns a [`Strategy`] that generates arbitrary values,…",12,[[["u32"]]]],[11,"struct_strategy",E,"Returns a [`Strategy`] that generates random `Struct`…",12,[[]]],[11,R[1014],R[999],"Generate a random primitive Type, no Struct",2,[[]]],[11,R[1015],E,"Generate either a primitive Value or a Struct.",2,[[["u32"]]]]],"p":[[4,"StructDef"],[3,R[1016]],[4,"Type"],[3,R[1017]],[3,R[1018]],[3,R[1019]],[4,R[1020]],[4,R[1021]],[3,R[1022]],[3,R[1023]],[3,R[1024]],[4,R[1025]],[3,"Value"],[3,"Struct"],[3,R[682]],[3,R[1026]],[3,R[995]],[3,"Locals"]]};
searchIndex["vm_validator"]={"doc":E,"i":[[0,"mocks",R[1721],E,N,N],[0,"mock_vm_validator","vm_validator::mocks",E,N,N],[3,R[1726],R[1722],E,N,N],[0,R[1721],R[1721],E,N,N],[3,R[1725],R[1723],E,N,N],[5,"get_account_state",E,"read account state returns account's current sequence…",N,[[["arc",[R[1556]]],[R[1556]],[R[265]]]]],[8,R[1724],E,E,N,N],[16,"ValidationInstance",E,E,0,N],[10,R[1692],E,"Validate a txn from client",0,[[["self"],[R[394]]],[["box",["future"]],["future"]]]],[11,"new",E,E,1,[[["arc",[R[1556]]],[R[1556]],[R[929]]],["self"]]],[11,R[13],R[1722],E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[13],R[1723],E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[1692],R[1722],E,2,[[["self"],[R[394]]],[["box",["future"]],["future"]]]],[11,R[1692],R[1723],E,1,[[["self"],[R[394]]],[["box",["future"]],["future"]]]],[11,"clone",R[1722],E,2,[[["self"]],["mockvmvalidator"]]],[11,"clone",R[1723],E,1,[[["self"]],["vmvalidator"]]],[11,R[1692],R[1722],E,2,[[["self"],[R[1673]],[R[394]]],[[R[24],[R[493]]],[R[493]]]]]],"p":[[8,R[1724]],[3,R[1725]],[3,R[1726]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);